

================================================================
== Vitis HLS Report for 'ifmap_vec_write'
================================================================
* Date:           Thu Oct 13 07:49:13 2022

* Version:        2021.1 (Build 3247384 on Thu Jun 10 19:36:07 MDT 2021)
* Project:        v4
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7cg-fbvb900-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  3.000 ns|     2.00 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        1|      291|  5.000 ns|  1.455 us|    1|  291|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- VITIS_LOOP_416_1  |        0|      288|   15 ~ 18|          -|          -|  0 ~ 16|        no|
        +--------------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 14
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 14 2 
2 --> 3 13 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 2 
13 --> 14 
14 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.34>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbramwithbyteenable_ln0 = specbramwithbyteenable void @_ssdm_op_SpecBRAMWithByteEnable, i32 %ifmap_CF_M_real"   --->   Operation 15 'specbramwithbyteenable' 'specbramwithbyteenable_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specbramwithbyteenable_ln0 = specbramwithbyteenable void @_ssdm_op_SpecBRAMWithByteEnable, i32 %ifmap_CF_M_imag"   --->   Operation 16 'specbramwithbyteenable' 'specbramwithbyteenable_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i128 %gmem, void @empty_30, i32 0, i32 0, void @empty_27, i32 0, i32 1024, void @empty_36, void @empty_26, void @empty_27, i32 16, i32 16, i32 16, i32 16, void @empty_27, void @empty_27"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_read_3 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read1"   --->   Operation 18 'read' 'p_read_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%p_read_4 = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %p_read"   --->   Operation 19 'read' 'p_read_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln1057 = zext i8 %p_read_3"   --->   Operation 20 'zext' 'zext_ln1057' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.85ns)   --->   "%icmp_ln1057 = icmp_eq  i8 %p_read_3, i8 0"   --->   Operation 21 'icmp' 'icmp_ln1057' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln416 = br i1 %icmp_ln1057, void %.lr.ph8, void %._crit_edge9" [src/main.cpp:416]   --->   Operation 22 'br' 'br_ln416' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%y = alloca i32 1"   --->   Operation 23 'alloca' 'y' <Predicate = (!icmp_ln1057)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%wr_ptr_load = load i32 %wr_ptr" [src/main.cpp:426]   --->   Operation 24 'load' 'wr_ptr_load' <Predicate = (!icmp_ln1057)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.90ns)   --->   "%add_ln416 = add i9 %zext_ln1057, i9 511" [src/main.cpp:416]   --->   Operation 25 'add' 'add_ln416' <Predicate = (!icmp_ln1057)> <Delay = 0.90> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%sext_ln416 = sext i9 %add_ln416" [src/main.cpp:416]   --->   Operation 26 'sext' 'sext_ln416' <Predicate = (!icmp_ln1057)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i7 @_ssdm_op_PartSelect.i7.i9.i32.i32, i9 %add_ln416, i32 2, i32 8" [src/main.cpp:416]   --->   Operation 27 'partselect' 'trunc_ln' <Predicate = (!icmp_ln1057)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%sext_ln416_1 = sext i7 %trunc_ln" [src/main.cpp:416]   --->   Operation 28 'sext' 'sext_ln416_1' <Predicate = (!icmp_ln1057)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln416 = zext i30 %sext_ln416_1" [src/main.cpp:416]   --->   Operation 29 'zext' 'zext_ln416' <Predicate = (!icmp_ln1057)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%sext_ln416_2 = sext i7 %trunc_ln" [src/main.cpp:416]   --->   Operation 30 'sext' 'sext_ln416_2' <Predicate = (!icmp_ln1057)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln416_1 = zext i62 %sext_ln416_2" [src/main.cpp:416]   --->   Operation 31 'zext' 'zext_ln416_1' <Predicate = (!icmp_ln1057)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%sext_ln416_3 = sext i7 %trunc_ln" [src/main.cpp:416]   --->   Operation 32 'sext' 'sext_ln416_3' <Predicate = (!icmp_ln1057)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (1.44ns)   --->   "%add_ln416_1 = add i63 %zext_ln416_1, i63 1" [src/main.cpp:416]   --->   Operation 33 'add' 'add_ln416_1' <Predicate = (!icmp_ln1057)> <Delay = 1.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (1.17ns)   --->   "%add_ln416_2 = add i31 %zext_ln416, i31 1" [src/main.cpp:416]   --->   Operation 34 'add' 'add_ln416_2' <Predicate = (!icmp_ln1057)> <Delay = 1.17> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln419 = zext i31 %add_ln416_2" [src/main.cpp:419]   --->   Operation 35 'zext' 'zext_ln419' <Predicate = (!icmp_ln1057)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.89ns)   --->   "%add_ln419_2 = add i8 %sext_ln416_3, i8 1" [src/main.cpp:419]   --->   Operation 36 'add' 'add_ln419_2' <Predicate = (!icmp_ln1057)> <Delay = 0.89> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%sext_ln416_4 = sext i8 %add_ln419_2" [src/main.cpp:416]   --->   Operation 37 'sext' 'sext_ln416_4' <Predicate = (!icmp_ln1057)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.48ns)   --->   "%store_ln416 = store i8 0, i8 %y" [src/main.cpp:416]   --->   Operation 38 'store' 'store_ln416' <Predicate = (!icmp_ln1057)> <Delay = 0.48>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln416 = br void %.lr.ph" [src/main.cpp:416]   --->   Operation 39 'br' 'br_ln416' <Predicate = (!icmp_ln1057)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.96>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%y_1 = load i8 %y" [src/main.cpp:424]   --->   Operation 40 'load' 'y_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.85ns)   --->   "%icmp_ln1057_1 = icmp_eq  i8 %y_1, i8 %p_read_3"   --->   Operation 41 'icmp' 'icmp_ln1057_1' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.90ns)   --->   "%add_ln416_5 = add i8 %y_1, i8 1" [src/main.cpp:416]   --->   Operation 42 'add' 'add_ln416_5' <Predicate = true> <Delay = 0.90> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln416 = br i1 %icmp_ln1057_1, void %.lr.ph.split, void %._crit_edge9.loopexit" [src/main.cpp:416]   --->   Operation 43 'br' 'br_ln416' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln424 = trunc i8 %y_1" [src/main.cpp:424]   --->   Operation 44 'trunc' 'trunc_ln424' <Predicate = (!icmp_ln1057_1)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln419_1 = zext i8 %y_1" [src/main.cpp:419]   --->   Operation 45 'zext' 'zext_ln419_1' <Predicate = (!icmp_ln1057_1)> <Delay = 0.00>
ST_2 : Operation 46 [2/2] (2.96ns)   --->   "%mul_ln419 = mul i32 %zext_ln419, i32 %zext_ln419_1" [src/main.cpp:419]   --->   Operation 46 'mul' 'mul_ln419' <Predicate = (!icmp_ln1057_1)> <Delay = 2.96> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.96> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.48ns)   --->   "%store_ln416 = store i8 %add_ln416_5, i8 %y" [src/main.cpp:416]   --->   Operation 47 'store' 'store_ln416' <Predicate = (!icmp_ln1057_1)> <Delay = 0.48>
ST_2 : Operation 48 [2/2] (2.96ns)   --->   "%mul_ln416 = mul i32 %zext_ln419, i32 %sext_ln416" [src/main.cpp:416]   --->   Operation 48 'mul' 'mul_ln416' <Predicate = (icmp_ln1057_1)> <Delay = 2.96> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.96> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 2.96>
ST_3 : Operation 49 [1/2] (2.96ns)   --->   "%mul_ln419 = mul i32 %zext_ln419, i32 %zext_ln419_1" [src/main.cpp:419]   --->   Operation 49 'mul' 'mul_ln419' <Predicate = true> <Delay = 2.96> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.96> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 2.67>
ST_4 : Operation 50 [1/1] (1.20ns)   --->   "%add_ln419 = add i32 %wr_ptr_load, i32 %mul_ln419" [src/main.cpp:419]   --->   Operation 50 'add' 'add_ln419' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i36 @_ssdm_op_BitConcatenate.i36.i32.i4, i32 %add_ln419, i4 0" [src/main.cpp:419]   --->   Operation 51 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%sext_ln419 = sext i36 %shl_ln" [src/main.cpp:419]   --->   Operation 52 'sext' 'sext_ln419' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (1.47ns)   --->   "%add_ln419_1 = add i64 %sext_ln419, i64 %p_read_4" [src/main.cpp:419]   --->   Operation 53 'add' 'add_ln419_1' <Predicate = true> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i60 @_ssdm_op_PartSelect.i60.i64.i32.i32, i64 %add_ln419_1, i32 4, i32 63" [src/main.cpp:419]   --->   Operation 54 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 3.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%sext_ln419_1 = sext i60 %trunc_ln1" [src/main.cpp:419]   --->   Operation 55 'sext' 'sext_ln419_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i128 %gmem, i64 %sext_ln419_1" [src/main.cpp:419]   --->   Operation 56 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (3.00ns)   --->   "%empty = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i128, i128 %gmem_addr, i32 %sext_ln416_4" [src/main.cpp:419]   --->   Operation 57 'writereq' 'empty' <Predicate = true> <Delay = 3.00> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_8_cast = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i6.i5, i6 %trunc_ln424, i5 0" [src/main.cpp:419]   --->   Operation 58 'bitconcatenate' 'tmp_8_cast' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 59 [2/2] (0.00ns)   --->   "%call_ln419 = call void @ifmap_vec_write_Pipeline_VITIS_LOOP_419_2, i128 %gmem, i60 %trunc_ln1, i63 %add_ln416_1, i11 %tmp_8_cast, i32 %ifmap_CF_M_real, i32 %ifmap_CF_M_imag" [src/main.cpp:419]   --->   Operation 59 'call' 'call_ln419' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 60 [1/2] (0.00ns)   --->   "%call_ln419 = call void @ifmap_vec_write_Pipeline_VITIS_LOOP_419_2, i128 %gmem, i60 %trunc_ln1, i63 %add_ln416_1, i11 %tmp_8_cast, i32 %ifmap_CF_M_real, i32 %ifmap_CF_M_imag" [src/main.cpp:419]   --->   Operation 60 'call' 'call_ln419' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 3.00>
ST_8 : Operation 61 [5/5] (3.00ns)   --->   "%empty_65 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i128, i128 %gmem_addr" [src/main.cpp:419]   --->   Operation 61 'writeresp' 'empty_65' <Predicate = true> <Delay = 3.00> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 3.00>
ST_9 : Operation 62 [4/5] (3.00ns)   --->   "%empty_65 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i128, i128 %gmem_addr" [src/main.cpp:419]   --->   Operation 62 'writeresp' 'empty_65' <Predicate = true> <Delay = 3.00> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 3.00>
ST_10 : Operation 63 [3/5] (3.00ns)   --->   "%empty_65 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i128, i128 %gmem_addr" [src/main.cpp:419]   --->   Operation 63 'writeresp' 'empty_65' <Predicate = true> <Delay = 3.00> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 3.00>
ST_11 : Operation 64 [2/5] (3.00ns)   --->   "%empty_65 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i128, i128 %gmem_addr" [src/main.cpp:419]   --->   Operation 64 'writeresp' 'empty_65' <Predicate = true> <Delay = 3.00> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 3.00>
ST_12 : Operation 65 [1/1] (0.00ns)   --->   "%speclooptripcount_ln414 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 0, i64 16, i64 8" [src/main.cpp:414]   --->   Operation 65 'speclooptripcount' 'speclooptripcount_ln414' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 66 [1/1] (0.00ns)   --->   "%specloopname_ln414 = specloopname void @_ssdm_op_SpecLoopName, void @empty_1" [src/main.cpp:414]   --->   Operation 66 'specloopname' 'specloopname_ln414' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 67 [1/5] (3.00ns)   --->   "%empty_65 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i128, i128 %gmem_addr" [src/main.cpp:419]   --->   Operation 67 'writeresp' 'empty_65' <Predicate = true> <Delay = 3.00> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.lr.ph"   --->   Operation 68 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 13 <SV = 2> <Delay = 2.96>
ST_13 : Operation 69 [1/2] (2.96ns)   --->   "%mul_ln416 = mul i32 %zext_ln419, i32 %sext_ln416" [src/main.cpp:416]   --->   Operation 69 'mul' 'mul_ln416' <Predicate = true> <Delay = 2.96> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.96> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 3> <Delay = 0.88>
ST_14 : Operation 70 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln416_3 = add i32 %mul_ln416, i32 %zext_ln419" [src/main.cpp:416]   --->   Operation 70 'add' 'add_ln416_3' <Predicate = (!icmp_ln1057)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 71 [1/1] (0.88ns) (root node of TernaryAdder)   --->   "%add_ln416_4 = add i32 %add_ln416_3, i32 %wr_ptr_load" [src/main.cpp:416]   --->   Operation 71 'add' 'add_ln416_4' <Predicate = (!icmp_ln1057)> <Delay = 0.88> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 72 [1/1] (0.00ns)   --->   "%store_ln426 = store i32 %add_ln416_4, i32 %wr_ptr" [src/main.cpp:426]   --->   Operation 72 'store' 'store_ln426' <Predicate = (!icmp_ln1057)> <Delay = 0.00>
ST_14 : Operation 73 [1/1] (0.00ns)   --->   "%br_ln429 = br void %._crit_edge9" [src/main.cpp:429]   --->   Operation 73 'br' 'br_ln429' <Predicate = (!icmp_ln1057)> <Delay = 0.00>
ST_14 : Operation 74 [1/1] (0.00ns)   --->   "%ret_ln429 = ret" [src/main.cpp:429]   --->   Operation 74 'ret' 'ret_ln429' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 2ns.

 <State 1>: 2.35ns
The critical path consists of the following:
	wire read operation ('p_read_3') on port 'p_read1' [10]  (0 ns)
	'add' operation ('add_ln416', src/main.cpp:416) [18]  (0.907 ns)
	'add' operation ('add_ln416_1', src/main.cpp:416) [26]  (1.44 ns)

 <State 2>: 2.96ns
The critical path consists of the following:
	'mul' operation ('mul_ln416', src/main.cpp:416) [58]  (2.96 ns)

 <State 3>: 2.96ns
The critical path consists of the following:
	'mul' operation ('mul_ln419', src/main.cpp:419) [44]  (2.96 ns)

 <State 4>: 2.67ns
The critical path consists of the following:
	'add' operation ('add_ln419', src/main.cpp:419) [45]  (1.2 ns)
	'add' operation ('add_ln419_1', src/main.cpp:419) [48]  (1.47 ns)

 <State 5>: 3ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr', src/main.cpp:419) [51]  (0 ns)
	bus request operation ('empty', src/main.cpp:419) on port 'gmem' (src/main.cpp:419) [52]  (3 ns)

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 3ns
The critical path consists of the following:
	bus response operation ('empty_65', src/main.cpp:419) on port 'gmem' (src/main.cpp:419) [54]  (3 ns)

 <State 9>: 3ns
The critical path consists of the following:
	bus response operation ('empty_65', src/main.cpp:419) on port 'gmem' (src/main.cpp:419) [54]  (3 ns)

 <State 10>: 3ns
The critical path consists of the following:
	bus response operation ('empty_65', src/main.cpp:419) on port 'gmem' (src/main.cpp:419) [54]  (3 ns)

 <State 11>: 3ns
The critical path consists of the following:
	bus response operation ('empty_65', src/main.cpp:419) on port 'gmem' (src/main.cpp:419) [54]  (3 ns)

 <State 12>: 3ns
The critical path consists of the following:
	bus response operation ('empty_65', src/main.cpp:419) on port 'gmem' (src/main.cpp:419) [54]  (3 ns)

 <State 13>: 2.96ns
The critical path consists of the following:
	'mul' operation ('mul_ln416', src/main.cpp:416) [58]  (2.96 ns)

 <State 14>: 0.889ns
The critical path consists of the following:
	'add' operation ('add_ln416_3', src/main.cpp:416) [59]  (0 ns)
	'add' operation ('add_ln416_4', src/main.cpp:416) [60]  (0.889 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
