// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Mem_patch_Wr_Mem_patch_Wr_Pipeline_VITIS_LOOP_569_6_VITIS_LOOP_572_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bound6,
        zext_ln554,
        ifmap_CF_M_real_address0,
        ifmap_CF_M_real_ce0,
        ifmap_CF_M_real_q0,
        ifmap_CF_M_imag_address0,
        ifmap_CF_M_imag_ce0,
        ifmap_CF_M_imag_q0,
        fft_out,
        fft_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [69:0] bound6;
input  [7:0] zext_ln554;
output  [5:0] ifmap_CF_M_real_address0;
output   ifmap_CF_M_real_ce0;
input  [1023:0] ifmap_CF_M_real_q0;
output  [5:0] ifmap_CF_M_imag_address0;
output   ifmap_CF_M_imag_ce0;
input  [1023:0] ifmap_CF_M_imag_q0;
output  [127:0] fft_out;
output   fft_out_ap_vld;

reg ap_idle;
reg ifmap_CF_M_real_ce0;
reg ifmap_CF_M_imag_ce0;
reg fft_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1057_fu_151_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln554_cast_fu_129_p1;
reg   [63:0] zext_ln554_cast_reg_1149;
wire   [7:0] trunc_ln578_fu_217_p1;
reg   [7:0] trunc_ln578_reg_1168;
wire   [6:0] empty_fu_221_p1;
reg   [6:0] empty_reg_1176;
wire   [6:0] empty_60_fu_225_p1;
reg   [6:0] empty_60_reg_1181;
reg   [1023:0] ifmap_CF_M_real_load_reg_1186;
reg   [1023:0] ifmap_CF_M_imag_load_reg_1198;
wire   [0:0] icmp_ln578_fu_263_p2;
reg   [0:0] icmp_ln578_reg_1210;
wire   [10:0] tmp_fu_269_p3;
reg   [10:0] tmp_reg_1217;
wire   [10:0] trunc_ln578_1_fu_276_p1;
reg   [10:0] trunc_ln578_1_reg_1224;
wire   [10:0] sub_ln578_1_fu_280_p2;
reg   [10:0] sub_ln578_1_reg_1230;
wire   [0:0] icmp_ln578_1_fu_286_p2;
reg   [0:0] icmp_ln578_1_reg_1235;
wire   [10:0] tmp_2_fu_292_p3;
reg   [10:0] tmp_2_reg_1242;
wire   [10:0] trunc_ln578_3_fu_299_p1;
reg   [10:0] trunc_ln578_3_reg_1249;
wire   [10:0] sub_ln578_5_fu_303_p2;
reg   [10:0] sub_ln578_5_reg_1255;
wire   [0:0] icmp_ln578_2_fu_336_p2;
reg   [0:0] icmp_ln578_2_reg_1260;
wire   [10:0] tmp_5_fu_342_p3;
reg   [10:0] tmp_5_reg_1267;
wire   [10:0] trunc_ln578_5_fu_350_p1;
reg   [10:0] trunc_ln578_5_reg_1274;
wire   [10:0] sub_ln578_9_fu_354_p2;
reg   [10:0] sub_ln578_9_reg_1280;
wire   [0:0] icmp_ln578_3_fu_360_p2;
reg   [0:0] icmp_ln578_3_reg_1285;
wire   [10:0] tmp_7_fu_366_p3;
reg   [10:0] tmp_7_reg_1292;
wire   [10:0] trunc_ln578_7_fu_374_p1;
reg   [10:0] trunc_ln578_7_reg_1299;
wire   [10:0] sub_ln578_13_fu_378_p2;
reg   [10:0] sub_ln578_13_reg_1305;
wire   [0:0] icmp_ln578_4_fu_411_p2;
reg   [0:0] icmp_ln578_4_reg_1310;
wire   [10:0] tmp_10_fu_417_p3;
reg   [10:0] tmp_10_reg_1317;
wire   [10:0] trunc_ln578_9_fu_425_p1;
reg   [10:0] trunc_ln578_9_reg_1324;
wire   [10:0] sub_ln578_17_fu_429_p2;
reg   [10:0] sub_ln578_17_reg_1330;
wire   [0:0] icmp_ln578_5_fu_435_p2;
reg   [0:0] icmp_ln578_5_reg_1335;
wire   [10:0] tmp_12_fu_441_p3;
reg   [10:0] tmp_12_reg_1342;
wire   [10:0] trunc_ln578_11_fu_449_p1;
reg   [10:0] trunc_ln578_11_reg_1349;
wire   [10:0] sub_ln578_21_fu_453_p2;
reg   [10:0] sub_ln578_21_reg_1355;
wire   [0:0] icmp_ln578_6_fu_486_p2;
reg   [0:0] icmp_ln578_6_reg_1360;
wire   [10:0] tmp_15_fu_492_p3;
reg   [10:0] tmp_15_reg_1367;
wire   [10:0] trunc_ln578_13_fu_500_p1;
reg   [10:0] trunc_ln578_13_reg_1374;
wire   [10:0] sub_ln578_25_fu_504_p2;
reg   [10:0] sub_ln578_25_reg_1380;
wire   [0:0] icmp_ln578_7_fu_510_p2;
reg   [0:0] icmp_ln578_7_reg_1385;
wire   [10:0] tmp_17_fu_516_p3;
reg   [10:0] tmp_17_reg_1392;
wire   [10:0] trunc_ln578_15_fu_524_p1;
reg   [10:0] trunc_ln578_15_reg_1399;
wire   [10:0] sub_ln578_29_fu_528_p2;
reg   [10:0] sub_ln578_29_reg_1405;
wire   [63:0] zext_ln1057_fu_203_p1;
wire    ap_block_pp0_stage0;
reg   [63:0] x_fu_72;
wire   [63:0] add_ln572_fu_229_p2;
wire    ap_loop_init;
reg   [7:0] y_fu_76;
wire   [7:0] select_ln1057_3_fu_209_p3;
reg   [69:0] indvar_flatten9_fu_80;
wire   [69:0] add_ln1057_fu_156_p2;
wire    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln1057_1_fu_168_p2;
wire   [7:0] add_ln569_fu_181_p2;
wire   [5:0] trunc_ln1057_fu_187_p1;
wire   [5:0] trunc_ln1057_1_fu_191_p1;
wire   [5:0] select_ln1057_2_fu_195_p3;
wire   [63:0] select_ln1057_fu_173_p3;
wire   [11:0] tmp_s_fu_250_p3;
wire   [11:0] empty_61_fu_257_p2;
wire   [7:0] or_ln578_fu_309_p2;
wire   [11:0] tmp_4_fu_322_p3;
wire   [11:0] empty_64_fu_330_p2;
wire   [6:0] empty_63_fu_318_p1;
wire   [6:0] empty_62_fu_314_p1;
wire   [7:0] or_ln578_1_fu_384_p2;
wire   [11:0] tmp_9_fu_397_p3;
wire   [11:0] empty_67_fu_405_p2;
wire   [6:0] empty_66_fu_393_p1;
wire   [6:0] empty_65_fu_389_p1;
wire   [7:0] or_ln578_2_fu_459_p2;
wire   [11:0] tmp_14_fu_472_p3;
wire   [11:0] empty_70_fu_480_p2;
wire   [6:0] empty_69_fu_468_p1;
wire   [6:0] empty_68_fu_464_p1;
wire   [10:0] sub_ln578_fu_543_p2;
wire   [10:0] sub_ln578_2_fu_547_p2;
reg   [1023:0] tmp_1_fu_534_p4;
wire   [10:0] select_ln578_fu_551_p3;
wire   [10:0] select_ln578_2_fu_564_p3;
wire   [10:0] sub_ln578_3_fu_569_p2;
wire   [1023:0] select_ln578_1_fu_558_p3;
wire   [1023:0] zext_ln578_fu_575_p1;
wire   [1023:0] zext_ln578_1_fu_579_p1;
wire   [1023:0] lshr_ln578_fu_583_p2;
wire   [1023:0] lshr_ln578_1_fu_589_p2;
wire   [1023:0] and_ln578_fu_595_p2;
wire   [10:0] sub_ln578_4_fu_614_p2;
wire   [10:0] sub_ln578_6_fu_618_p2;
reg   [1023:0] tmp_3_fu_605_p4;
wire   [10:0] select_ln578_3_fu_622_p3;
wire   [10:0] select_ln578_5_fu_635_p3;
wire   [10:0] sub_ln578_7_fu_640_p2;
wire   [1023:0] select_ln578_4_fu_629_p3;
wire   [1023:0] zext_ln578_2_fu_646_p1;
wire   [1023:0] zext_ln578_3_fu_650_p1;
wire   [1023:0] lshr_ln578_2_fu_654_p2;
wire   [1023:0] lshr_ln578_3_fu_660_p2;
wire   [1023:0] and_ln578_1_fu_666_p2;
wire   [10:0] sub_ln578_8_fu_685_p2;
wire   [10:0] sub_ln578_10_fu_689_p2;
reg   [1023:0] tmp_6_fu_676_p4;
wire   [10:0] select_ln578_6_fu_693_p3;
wire   [10:0] select_ln578_8_fu_706_p3;
wire   [10:0] sub_ln578_11_fu_711_p2;
wire   [1023:0] select_ln578_7_fu_700_p3;
wire   [1023:0] zext_ln578_4_fu_717_p1;
wire   [1023:0] zext_ln578_5_fu_721_p1;
wire   [1023:0] lshr_ln578_4_fu_725_p2;
wire   [1023:0] lshr_ln578_5_fu_731_p2;
wire   [1023:0] and_ln578_2_fu_737_p2;
wire   [10:0] sub_ln578_12_fu_756_p2;
wire   [10:0] sub_ln578_14_fu_760_p2;
reg   [1023:0] tmp_8_fu_747_p4;
wire   [10:0] select_ln578_9_fu_764_p3;
wire   [10:0] select_ln578_11_fu_777_p3;
wire   [10:0] sub_ln578_15_fu_782_p2;
wire   [1023:0] select_ln578_10_fu_771_p3;
wire   [1023:0] zext_ln578_6_fu_788_p1;
wire   [1023:0] zext_ln578_7_fu_792_p1;
wire   [1023:0] lshr_ln578_6_fu_796_p2;
wire   [1023:0] lshr_ln578_7_fu_802_p2;
wire   [1023:0] and_ln578_3_fu_808_p2;
wire   [10:0] sub_ln578_16_fu_827_p2;
wire   [10:0] sub_ln578_18_fu_831_p2;
reg   [1023:0] tmp_11_fu_818_p4;
wire   [10:0] select_ln578_12_fu_835_p3;
wire   [10:0] select_ln578_14_fu_848_p3;
wire   [10:0] sub_ln578_19_fu_853_p2;
wire   [1023:0] select_ln578_13_fu_842_p3;
wire   [1023:0] zext_ln578_8_fu_859_p1;
wire   [1023:0] zext_ln578_9_fu_863_p1;
wire   [1023:0] lshr_ln578_8_fu_867_p2;
wire   [1023:0] lshr_ln578_9_fu_873_p2;
wire   [1023:0] and_ln578_4_fu_879_p2;
wire   [10:0] sub_ln578_20_fu_898_p2;
wire   [10:0] sub_ln578_22_fu_902_p2;
reg   [1023:0] tmp_13_fu_889_p4;
wire   [10:0] select_ln578_15_fu_906_p3;
wire   [10:0] select_ln578_17_fu_919_p3;
wire   [10:0] sub_ln578_23_fu_924_p2;
wire   [1023:0] select_ln578_16_fu_913_p3;
wire   [1023:0] zext_ln578_10_fu_930_p1;
wire   [1023:0] zext_ln578_11_fu_934_p1;
wire   [1023:0] lshr_ln578_10_fu_938_p2;
wire   [1023:0] lshr_ln578_11_fu_944_p2;
wire   [1023:0] and_ln578_5_fu_950_p2;
wire   [10:0] sub_ln578_24_fu_969_p2;
wire   [10:0] sub_ln578_26_fu_973_p2;
reg   [1023:0] tmp_16_fu_960_p4;
wire   [10:0] select_ln578_18_fu_977_p3;
wire   [10:0] select_ln578_20_fu_990_p3;
wire   [10:0] sub_ln578_27_fu_995_p2;
wire   [1023:0] select_ln578_19_fu_984_p3;
wire   [1023:0] zext_ln578_12_fu_1001_p1;
wire   [1023:0] zext_ln578_13_fu_1005_p1;
wire   [1023:0] lshr_ln578_12_fu_1009_p2;
wire   [1023:0] lshr_ln578_13_fu_1015_p2;
wire   [1023:0] and_ln578_6_fu_1021_p2;
wire   [10:0] sub_ln578_28_fu_1040_p2;
wire   [10:0] sub_ln578_30_fu_1044_p2;
reg   [1023:0] tmp_18_fu_1031_p4;
wire   [10:0] select_ln578_21_fu_1048_p3;
wire   [10:0] select_ln578_23_fu_1061_p3;
wire   [10:0] sub_ln578_31_fu_1066_p2;
wire   [1023:0] select_ln578_22_fu_1055_p3;
wire   [1023:0] zext_ln578_14_fu_1072_p1;
wire   [1023:0] zext_ln578_15_fu_1076_p1;
wire   [1023:0] lshr_ln578_14_fu_1080_p2;
wire   [1023:0] lshr_ln578_15_fu_1086_p2;
wire   [1023:0] and_ln578_7_fu_1092_p2;
wire   [15:0] trunc_ln578_16_fu_1098_p1;
wire   [15:0] trunc_ln578_14_fu_1027_p1;
wire   [15:0] trunc_ln578_12_fu_956_p1;
wire   [15:0] trunc_ln578_10_fu_885_p1;
wire   [15:0] trunc_ln578_8_fu_814_p1;
wire   [15:0] trunc_ln578_6_fu_743_p1;
wire   [15:0] trunc_ln578_4_fu_672_p1;
wire   [15:0] trunc_ln578_2_fu_601_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Mem_patch_Wr_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten9_fu_80 <= 70'd0;
        end else if (((icmp_ln1057_fu_151_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten9_fu_80 <= add_ln1057_fu_156_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            x_fu_72 <= 64'd0;
        end else if (((icmp_ln1057_fu_151_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            x_fu_72 <= add_ln572_fu_229_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            y_fu_76 <= 8'd0;
        end else if (((icmp_ln1057_fu_151_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            y_fu_76 <= select_ln1057_3_fu_209_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        zext_ln554_cast_reg_1149[7 : 0] <= zext_ln554_cast_fu_129_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_fu_151_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_60_reg_1181 <= empty_60_fu_225_p1;
        empty_reg_1176 <= empty_fu_221_p1;
        trunc_ln578_reg_1168 <= trunc_ln578_fu_217_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln578_1_reg_1235 <= icmp_ln578_1_fu_286_p2;
        icmp_ln578_2_reg_1260 <= icmp_ln578_2_fu_336_p2;
        icmp_ln578_3_reg_1285 <= icmp_ln578_3_fu_360_p2;
        icmp_ln578_4_reg_1310 <= icmp_ln578_4_fu_411_p2;
        icmp_ln578_5_reg_1335 <= icmp_ln578_5_fu_435_p2;
        icmp_ln578_6_reg_1360 <= icmp_ln578_6_fu_486_p2;
        icmp_ln578_7_reg_1385 <= icmp_ln578_7_fu_510_p2;
        icmp_ln578_reg_1210 <= icmp_ln578_fu_263_p2;
        ifmap_CF_M_imag_load_reg_1198 <= ifmap_CF_M_imag_q0;
        ifmap_CF_M_real_load_reg_1186 <= ifmap_CF_M_real_q0;
        sub_ln578_13_reg_1305[10 : 5] <= sub_ln578_13_fu_378_p2[10 : 5];
        sub_ln578_17_reg_1330[10 : 4] <= sub_ln578_17_fu_429_p2[10 : 4];
        sub_ln578_1_reg_1230[10 : 4] <= sub_ln578_1_fu_280_p2[10 : 4];
        sub_ln578_21_reg_1355[10 : 4] <= sub_ln578_21_fu_453_p2[10 : 4];
        sub_ln578_25_reg_1380[10 : 6] <= sub_ln578_25_fu_504_p2[10 : 6];
        sub_ln578_29_reg_1405[10 : 6] <= sub_ln578_29_fu_528_p2[10 : 6];
        sub_ln578_5_reg_1255[10 : 4] <= sub_ln578_5_fu_303_p2[10 : 4];
        sub_ln578_9_reg_1280[10 : 5] <= sub_ln578_9_fu_354_p2[10 : 5];
        tmp_10_reg_1317[4] <= tmp_10_fu_417_p3[4];
tmp_10_reg_1317[10 : 6] <= tmp_10_fu_417_p3[10 : 6];
        tmp_12_reg_1342[4] <= tmp_12_fu_441_p3[4];
tmp_12_reg_1342[10 : 6] <= tmp_12_fu_441_p3[10 : 6];
        tmp_15_reg_1367[10 : 6] <= tmp_15_fu_492_p3[10 : 6];
        tmp_17_reg_1392[10 : 6] <= tmp_17_fu_516_p3[10 : 6];
        tmp_2_reg_1242[10 : 4] <= tmp_2_fu_292_p3[10 : 4];
        tmp_5_reg_1267[10 : 5] <= tmp_5_fu_342_p3[10 : 5];
        tmp_7_reg_1292[10 : 5] <= tmp_7_fu_366_p3[10 : 5];
        tmp_reg_1217[10 : 4] <= tmp_fu_269_p3[10 : 4];
        trunc_ln578_11_reg_1349[4] <= trunc_ln578_11_fu_449_p1[4];
trunc_ln578_11_reg_1349[10 : 6] <= trunc_ln578_11_fu_449_p1[10 : 6];
        trunc_ln578_13_reg_1374[10 : 6] <= trunc_ln578_13_fu_500_p1[10 : 6];
        trunc_ln578_15_reg_1399[10 : 6] <= trunc_ln578_15_fu_524_p1[10 : 6];
        trunc_ln578_1_reg_1224[10 : 4] <= trunc_ln578_1_fu_276_p1[10 : 4];
        trunc_ln578_3_reg_1249[10 : 4] <= trunc_ln578_3_fu_299_p1[10 : 4];
        trunc_ln578_5_reg_1274[10 : 5] <= trunc_ln578_5_fu_350_p1[10 : 5];
        trunc_ln578_7_reg_1299[10 : 5] <= trunc_ln578_7_fu_374_p1[10 : 5];
        trunc_ln578_9_reg_1324[4] <= trunc_ln578_9_fu_425_p1[4];
trunc_ln578_9_reg_1324[10 : 6] <= trunc_ln578_9_fu_425_p1[10 : 6];
    end
end

always @ (*) begin
    if (((icmp_ln1057_fu_151_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        fft_out_ap_vld = 1'b1;
    end else begin
        fft_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifmap_CF_M_imag_ce0 = 1'b1;
    end else begin
        ifmap_CF_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifmap_CF_M_real_ce0 = 1'b1;
    end else begin
        ifmap_CF_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1057_fu_156_p2 = (indvar_flatten9_fu_80 + 70'd1);

assign add_ln569_fu_181_p2 = (y_fu_76 + 8'd1);

assign add_ln572_fu_229_p2 = (select_ln1057_fu_173_p3 + 64'd4);

assign and_ln578_1_fu_666_p2 = (lshr_ln578_3_fu_660_p2 & lshr_ln578_2_fu_654_p2);

assign and_ln578_2_fu_737_p2 = (lshr_ln578_5_fu_731_p2 & lshr_ln578_4_fu_725_p2);

assign and_ln578_3_fu_808_p2 = (lshr_ln578_7_fu_802_p2 & lshr_ln578_6_fu_796_p2);

assign and_ln578_4_fu_879_p2 = (lshr_ln578_9_fu_873_p2 & lshr_ln578_8_fu_867_p2);

assign and_ln578_5_fu_950_p2 = (lshr_ln578_11_fu_944_p2 & lshr_ln578_10_fu_938_p2);

assign and_ln578_6_fu_1021_p2 = (lshr_ln578_13_fu_1015_p2 & lshr_ln578_12_fu_1009_p2);

assign and_ln578_7_fu_1092_p2 = (lshr_ln578_15_fu_1086_p2 & lshr_ln578_14_fu_1080_p2);

assign and_ln578_fu_595_p2 = (lshr_ln578_fu_583_p2 & lshr_ln578_1_fu_589_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign empty_60_fu_225_p1 = select_ln1057_fu_173_p3[6:0];

assign empty_61_fu_257_p2 = (tmp_s_fu_250_p3 | 12'd15);

assign empty_62_fu_314_p1 = or_ln578_fu_309_p2[6:0];

assign empty_63_fu_318_p1 = or_ln578_fu_309_p2[6:0];

assign empty_64_fu_330_p2 = (tmp_4_fu_322_p3 | 12'd15);

assign empty_65_fu_389_p1 = or_ln578_1_fu_384_p2[6:0];

assign empty_66_fu_393_p1 = or_ln578_1_fu_384_p2[6:0];

assign empty_67_fu_405_p2 = (tmp_9_fu_397_p3 | 12'd15);

assign empty_68_fu_464_p1 = or_ln578_2_fu_459_p2[6:0];

assign empty_69_fu_468_p1 = or_ln578_2_fu_459_p2[6:0];

assign empty_70_fu_480_p2 = (tmp_14_fu_472_p3 | 12'd15);

assign empty_fu_221_p1 = select_ln1057_fu_173_p3[6:0];

assign fft_out = {{{{{{{{trunc_ln578_16_fu_1098_p1}, {trunc_ln578_14_fu_1027_p1}}, {trunc_ln578_12_fu_956_p1}}, {trunc_ln578_10_fu_885_p1}}, {trunc_ln578_8_fu_814_p1}}, {trunc_ln578_6_fu_743_p1}}, {trunc_ln578_4_fu_672_p1}}, {trunc_ln578_2_fu_601_p1}};

assign icmp_ln1057_1_fu_168_p2 = (($signed(x_fu_72) < $signed(zext_ln554_cast_reg_1149)) ? 1'b1 : 1'b0);

assign icmp_ln1057_fu_151_p2 = ((indvar_flatten9_fu_80 == bound6) ? 1'b1 : 1'b0);

assign icmp_ln578_1_fu_286_p2 = ((tmp_s_fu_250_p3 > empty_61_fu_257_p2) ? 1'b1 : 1'b0);

assign icmp_ln578_2_fu_336_p2 = ((tmp_4_fu_322_p3 > empty_64_fu_330_p2) ? 1'b1 : 1'b0);

assign icmp_ln578_3_fu_360_p2 = ((tmp_4_fu_322_p3 > empty_64_fu_330_p2) ? 1'b1 : 1'b0);

assign icmp_ln578_4_fu_411_p2 = ((tmp_9_fu_397_p3 > empty_67_fu_405_p2) ? 1'b1 : 1'b0);

assign icmp_ln578_5_fu_435_p2 = ((tmp_9_fu_397_p3 > empty_67_fu_405_p2) ? 1'b1 : 1'b0);

assign icmp_ln578_6_fu_486_p2 = ((tmp_14_fu_472_p3 > empty_70_fu_480_p2) ? 1'b1 : 1'b0);

assign icmp_ln578_7_fu_510_p2 = ((tmp_14_fu_472_p3 > empty_70_fu_480_p2) ? 1'b1 : 1'b0);

assign icmp_ln578_fu_263_p2 = ((tmp_s_fu_250_p3 > empty_61_fu_257_p2) ? 1'b1 : 1'b0);

assign ifmap_CF_M_imag_address0 = zext_ln1057_fu_203_p1;

assign ifmap_CF_M_real_address0 = zext_ln1057_fu_203_p1;

assign lshr_ln578_10_fu_938_p2 = select_ln578_16_fu_913_p3 >> zext_ln578_10_fu_930_p1;

assign lshr_ln578_11_fu_944_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln578_11_fu_934_p1;

assign lshr_ln578_12_fu_1009_p2 = select_ln578_19_fu_984_p3 >> zext_ln578_12_fu_1001_p1;

assign lshr_ln578_13_fu_1015_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln578_13_fu_1005_p1;

assign lshr_ln578_14_fu_1080_p2 = select_ln578_22_fu_1055_p3 >> zext_ln578_14_fu_1072_p1;

assign lshr_ln578_15_fu_1086_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln578_15_fu_1076_p1;

assign lshr_ln578_1_fu_589_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln578_1_fu_579_p1;

assign lshr_ln578_2_fu_654_p2 = select_ln578_4_fu_629_p3 >> zext_ln578_2_fu_646_p1;

assign lshr_ln578_3_fu_660_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln578_3_fu_650_p1;

assign lshr_ln578_4_fu_725_p2 = select_ln578_7_fu_700_p3 >> zext_ln578_4_fu_717_p1;

assign lshr_ln578_5_fu_731_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln578_5_fu_721_p1;

assign lshr_ln578_6_fu_796_p2 = select_ln578_10_fu_771_p3 >> zext_ln578_6_fu_788_p1;

assign lshr_ln578_7_fu_802_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln578_7_fu_792_p1;

assign lshr_ln578_8_fu_867_p2 = select_ln578_13_fu_842_p3 >> zext_ln578_8_fu_859_p1;

assign lshr_ln578_9_fu_873_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln578_9_fu_863_p1;

assign lshr_ln578_fu_583_p2 = select_ln578_1_fu_558_p3 >> zext_ln578_fu_575_p1;

assign or_ln578_1_fu_384_p2 = (trunc_ln578_reg_1168 | 8'd2);

assign or_ln578_2_fu_459_p2 = (trunc_ln578_reg_1168 | 8'd3);

assign or_ln578_fu_309_p2 = (trunc_ln578_reg_1168 | 8'd1);

assign select_ln1057_2_fu_195_p3 = ((icmp_ln1057_1_fu_168_p2[0:0] == 1'b1) ? trunc_ln1057_fu_187_p1 : trunc_ln1057_1_fu_191_p1);

assign select_ln1057_3_fu_209_p3 = ((icmp_ln1057_1_fu_168_p2[0:0] == 1'b1) ? y_fu_76 : add_ln569_fu_181_p2);

assign select_ln1057_fu_173_p3 = ((icmp_ln1057_1_fu_168_p2[0:0] == 1'b1) ? x_fu_72 : 64'd0);

assign select_ln578_10_fu_771_p3 = ((icmp_ln578_3_reg_1285[0:0] == 1'b1) ? tmp_8_fu_747_p4 : ifmap_CF_M_imag_load_reg_1198);

assign select_ln578_11_fu_777_p3 = ((icmp_ln578_3_reg_1285[0:0] == 1'b1) ? sub_ln578_13_reg_1305 : tmp_7_reg_1292);

assign select_ln578_12_fu_835_p3 = ((icmp_ln578_4_reg_1310[0:0] == 1'b1) ? sub_ln578_16_fu_827_p2 : sub_ln578_18_fu_831_p2);

assign select_ln578_13_fu_842_p3 = ((icmp_ln578_4_reg_1310[0:0] == 1'b1) ? tmp_11_fu_818_p4 : ifmap_CF_M_real_load_reg_1186);

assign select_ln578_14_fu_848_p3 = ((icmp_ln578_4_reg_1310[0:0] == 1'b1) ? sub_ln578_17_reg_1330 : tmp_10_reg_1317);

assign select_ln578_15_fu_906_p3 = ((icmp_ln578_5_reg_1335[0:0] == 1'b1) ? sub_ln578_20_fu_898_p2 : sub_ln578_22_fu_902_p2);

assign select_ln578_16_fu_913_p3 = ((icmp_ln578_5_reg_1335[0:0] == 1'b1) ? tmp_13_fu_889_p4 : ifmap_CF_M_imag_load_reg_1198);

assign select_ln578_17_fu_919_p3 = ((icmp_ln578_5_reg_1335[0:0] == 1'b1) ? sub_ln578_21_reg_1355 : tmp_12_reg_1342);

assign select_ln578_18_fu_977_p3 = ((icmp_ln578_6_reg_1360[0:0] == 1'b1) ? sub_ln578_24_fu_969_p2 : sub_ln578_26_fu_973_p2);

assign select_ln578_19_fu_984_p3 = ((icmp_ln578_6_reg_1360[0:0] == 1'b1) ? tmp_16_fu_960_p4 : ifmap_CF_M_real_load_reg_1186);

assign select_ln578_1_fu_558_p3 = ((icmp_ln578_reg_1210[0:0] == 1'b1) ? tmp_1_fu_534_p4 : ifmap_CF_M_real_load_reg_1186);

assign select_ln578_20_fu_990_p3 = ((icmp_ln578_6_reg_1360[0:0] == 1'b1) ? sub_ln578_25_reg_1380 : tmp_15_reg_1367);

assign select_ln578_21_fu_1048_p3 = ((icmp_ln578_7_reg_1385[0:0] == 1'b1) ? sub_ln578_28_fu_1040_p2 : sub_ln578_30_fu_1044_p2);

assign select_ln578_22_fu_1055_p3 = ((icmp_ln578_7_reg_1385[0:0] == 1'b1) ? tmp_18_fu_1031_p4 : ifmap_CF_M_imag_load_reg_1198);

assign select_ln578_23_fu_1061_p3 = ((icmp_ln578_7_reg_1385[0:0] == 1'b1) ? sub_ln578_29_reg_1405 : tmp_17_reg_1392);

assign select_ln578_2_fu_564_p3 = ((icmp_ln578_reg_1210[0:0] == 1'b1) ? sub_ln578_1_reg_1230 : tmp_reg_1217);

assign select_ln578_3_fu_622_p3 = ((icmp_ln578_1_reg_1235[0:0] == 1'b1) ? sub_ln578_4_fu_614_p2 : sub_ln578_6_fu_618_p2);

assign select_ln578_4_fu_629_p3 = ((icmp_ln578_1_reg_1235[0:0] == 1'b1) ? tmp_3_fu_605_p4 : ifmap_CF_M_imag_load_reg_1198);

assign select_ln578_5_fu_635_p3 = ((icmp_ln578_1_reg_1235[0:0] == 1'b1) ? sub_ln578_5_reg_1255 : tmp_2_reg_1242);

assign select_ln578_6_fu_693_p3 = ((icmp_ln578_2_reg_1260[0:0] == 1'b1) ? sub_ln578_8_fu_685_p2 : sub_ln578_10_fu_689_p2);

assign select_ln578_7_fu_700_p3 = ((icmp_ln578_2_reg_1260[0:0] == 1'b1) ? tmp_6_fu_676_p4 : ifmap_CF_M_real_load_reg_1186);

assign select_ln578_8_fu_706_p3 = ((icmp_ln578_2_reg_1260[0:0] == 1'b1) ? sub_ln578_9_reg_1280 : tmp_5_reg_1267);

assign select_ln578_9_fu_764_p3 = ((icmp_ln578_3_reg_1285[0:0] == 1'b1) ? sub_ln578_12_fu_756_p2 : sub_ln578_14_fu_760_p2);

assign select_ln578_fu_551_p3 = ((icmp_ln578_reg_1210[0:0] == 1'b1) ? sub_ln578_fu_543_p2 : sub_ln578_2_fu_547_p2);

assign sub_ln578_10_fu_689_p2 = (trunc_ln578_5_reg_1274 - tmp_5_reg_1267);

assign sub_ln578_11_fu_711_p2 = (11'd1023 - select_ln578_6_fu_693_p3);

assign sub_ln578_12_fu_756_p2 = (tmp_7_reg_1292 - trunc_ln578_7_reg_1299);

assign sub_ln578_13_fu_378_p2 = (11'd1023 - tmp_7_fu_366_p3);

assign sub_ln578_14_fu_760_p2 = (trunc_ln578_7_reg_1299 - tmp_7_reg_1292);

assign sub_ln578_15_fu_782_p2 = (11'd1023 - select_ln578_9_fu_764_p3);

assign sub_ln578_16_fu_827_p2 = (tmp_10_reg_1317 - trunc_ln578_9_reg_1324);

assign sub_ln578_17_fu_429_p2 = (11'd1023 - tmp_10_fu_417_p3);

assign sub_ln578_18_fu_831_p2 = (trunc_ln578_9_reg_1324 - tmp_10_reg_1317);

assign sub_ln578_19_fu_853_p2 = (11'd1023 - select_ln578_12_fu_835_p3);

assign sub_ln578_1_fu_280_p2 = (11'd1023 - tmp_fu_269_p3);

assign sub_ln578_20_fu_898_p2 = (tmp_12_reg_1342 - trunc_ln578_11_reg_1349);

assign sub_ln578_21_fu_453_p2 = (11'd1023 - tmp_12_fu_441_p3);

assign sub_ln578_22_fu_902_p2 = (trunc_ln578_11_reg_1349 - tmp_12_reg_1342);

assign sub_ln578_23_fu_924_p2 = (11'd1023 - select_ln578_15_fu_906_p3);

assign sub_ln578_24_fu_969_p2 = (tmp_15_reg_1367 - trunc_ln578_13_reg_1374);

assign sub_ln578_25_fu_504_p2 = (11'd1023 - tmp_15_fu_492_p3);

assign sub_ln578_26_fu_973_p2 = (trunc_ln578_13_reg_1374 - tmp_15_reg_1367);

assign sub_ln578_27_fu_995_p2 = (11'd1023 - select_ln578_18_fu_977_p3);

assign sub_ln578_28_fu_1040_p2 = (tmp_17_reg_1392 - trunc_ln578_15_reg_1399);

assign sub_ln578_29_fu_528_p2 = (11'd1023 - tmp_17_fu_516_p3);

assign sub_ln578_2_fu_547_p2 = (trunc_ln578_1_reg_1224 - tmp_reg_1217);

assign sub_ln578_30_fu_1044_p2 = (trunc_ln578_15_reg_1399 - tmp_17_reg_1392);

assign sub_ln578_31_fu_1066_p2 = (11'd1023 - select_ln578_21_fu_1048_p3);

assign sub_ln578_3_fu_569_p2 = (11'd1023 - select_ln578_fu_551_p3);

assign sub_ln578_4_fu_614_p2 = (tmp_2_reg_1242 - trunc_ln578_3_reg_1249);

assign sub_ln578_5_fu_303_p2 = (11'd1023 - tmp_2_fu_292_p3);

assign sub_ln578_6_fu_618_p2 = (trunc_ln578_3_reg_1249 - tmp_2_reg_1242);

assign sub_ln578_7_fu_640_p2 = (11'd1023 - select_ln578_3_fu_622_p3);

assign sub_ln578_8_fu_685_p2 = (tmp_5_reg_1267 - trunc_ln578_5_reg_1274);

assign sub_ln578_9_fu_354_p2 = (11'd1023 - tmp_5_fu_342_p3);

assign sub_ln578_fu_543_p2 = (tmp_reg_1217 - trunc_ln578_1_reg_1224);

assign tmp_10_fu_417_p3 = {{empty_66_fu_393_p1}, {4'd0}};

integer ap_tvar_int_0;

always @ (ifmap_CF_M_real_load_reg_1186) begin
    for (ap_tvar_int_0 = 1024 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 1023 - 0) begin
            tmp_11_fu_818_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_11_fu_818_p4[ap_tvar_int_0] = ifmap_CF_M_real_load_reg_1186[1023 - ap_tvar_int_0];
        end
    end
end

assign tmp_12_fu_441_p3 = {{empty_65_fu_389_p1}, {4'd0}};

integer ap_tvar_int_1;

always @ (ifmap_CF_M_imag_load_reg_1198) begin
    for (ap_tvar_int_1 = 1024 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 1023 - 0) begin
            tmp_13_fu_889_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_13_fu_889_p4[ap_tvar_int_1] = ifmap_CF_M_imag_load_reg_1198[1023 - ap_tvar_int_1];
        end
    end
end

assign tmp_14_fu_472_p3 = {{or_ln578_2_fu_459_p2}, {4'd0}};

assign tmp_15_fu_492_p3 = {{empty_69_fu_468_p1}, {4'd0}};

integer ap_tvar_int_2;

always @ (ifmap_CF_M_real_load_reg_1186) begin
    for (ap_tvar_int_2 = 1024 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 1023 - 0) begin
            tmp_16_fu_960_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_16_fu_960_p4[ap_tvar_int_2] = ifmap_CF_M_real_load_reg_1186[1023 - ap_tvar_int_2];
        end
    end
end

assign tmp_17_fu_516_p3 = {{empty_68_fu_464_p1}, {4'd0}};

integer ap_tvar_int_3;

always @ (ifmap_CF_M_imag_load_reg_1198) begin
    for (ap_tvar_int_3 = 1024 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 1023 - 0) begin
            tmp_18_fu_1031_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_18_fu_1031_p4[ap_tvar_int_3] = ifmap_CF_M_imag_load_reg_1198[1023 - ap_tvar_int_3];
        end
    end
end

integer ap_tvar_int_4;

always @ (ifmap_CF_M_real_load_reg_1186) begin
    for (ap_tvar_int_4 = 1024 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 1023 - 0) begin
            tmp_1_fu_534_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            tmp_1_fu_534_p4[ap_tvar_int_4] = ifmap_CF_M_real_load_reg_1186[1023 - ap_tvar_int_4];
        end
    end
end

assign tmp_2_fu_292_p3 = {{empty_reg_1176}, {4'd0}};

integer ap_tvar_int_5;

always @ (ifmap_CF_M_imag_load_reg_1198) begin
    for (ap_tvar_int_5 = 1024 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 1023 - 0) begin
            tmp_3_fu_605_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            tmp_3_fu_605_p4[ap_tvar_int_5] = ifmap_CF_M_imag_load_reg_1198[1023 - ap_tvar_int_5];
        end
    end
end

assign tmp_4_fu_322_p3 = {{or_ln578_fu_309_p2}, {4'd0}};

assign tmp_5_fu_342_p3 = {{empty_63_fu_318_p1}, {4'd0}};

integer ap_tvar_int_6;

always @ (ifmap_CF_M_real_load_reg_1186) begin
    for (ap_tvar_int_6 = 1024 - 1; ap_tvar_int_6 >= 0; ap_tvar_int_6 = ap_tvar_int_6 - 1) begin
        if (ap_tvar_int_6 > 1023 - 0) begin
            tmp_6_fu_676_p4[ap_tvar_int_6] = 1'b0;
        end else begin
            tmp_6_fu_676_p4[ap_tvar_int_6] = ifmap_CF_M_real_load_reg_1186[1023 - ap_tvar_int_6];
        end
    end
end

assign tmp_7_fu_366_p3 = {{empty_62_fu_314_p1}, {4'd0}};

integer ap_tvar_int_7;

always @ (ifmap_CF_M_imag_load_reg_1198) begin
    for (ap_tvar_int_7 = 1024 - 1; ap_tvar_int_7 >= 0; ap_tvar_int_7 = ap_tvar_int_7 - 1) begin
        if (ap_tvar_int_7 > 1023 - 0) begin
            tmp_8_fu_747_p4[ap_tvar_int_7] = 1'b0;
        end else begin
            tmp_8_fu_747_p4[ap_tvar_int_7] = ifmap_CF_M_imag_load_reg_1198[1023 - ap_tvar_int_7];
        end
    end
end

assign tmp_9_fu_397_p3 = {{or_ln578_1_fu_384_p2}, {4'd0}};

assign tmp_fu_269_p3 = {{empty_60_reg_1181}, {4'd0}};

assign tmp_s_fu_250_p3 = {{trunc_ln578_reg_1168}, {4'd0}};

assign trunc_ln1057_1_fu_191_p1 = add_ln569_fu_181_p2[5:0];

assign trunc_ln1057_fu_187_p1 = y_fu_76[5:0];

assign trunc_ln578_10_fu_885_p1 = and_ln578_4_fu_879_p2[15:0];

assign trunc_ln578_11_fu_449_p1 = empty_67_fu_405_p2[10:0];

assign trunc_ln578_12_fu_956_p1 = and_ln578_5_fu_950_p2[15:0];

assign trunc_ln578_13_fu_500_p1 = empty_70_fu_480_p2[10:0];

assign trunc_ln578_14_fu_1027_p1 = and_ln578_6_fu_1021_p2[15:0];

assign trunc_ln578_15_fu_524_p1 = empty_70_fu_480_p2[10:0];

assign trunc_ln578_16_fu_1098_p1 = and_ln578_7_fu_1092_p2[15:0];

assign trunc_ln578_1_fu_276_p1 = empty_61_fu_257_p2[10:0];

assign trunc_ln578_2_fu_601_p1 = and_ln578_fu_595_p2[15:0];

assign trunc_ln578_3_fu_299_p1 = empty_61_fu_257_p2[10:0];

assign trunc_ln578_4_fu_672_p1 = and_ln578_1_fu_666_p2[15:0];

assign trunc_ln578_5_fu_350_p1 = empty_64_fu_330_p2[10:0];

assign trunc_ln578_6_fu_743_p1 = and_ln578_2_fu_737_p2[15:0];

assign trunc_ln578_7_fu_374_p1 = empty_64_fu_330_p2[10:0];

assign trunc_ln578_8_fu_814_p1 = and_ln578_3_fu_808_p2[15:0];

assign trunc_ln578_9_fu_425_p1 = empty_67_fu_405_p2[10:0];

assign trunc_ln578_fu_217_p1 = select_ln1057_fu_173_p3[7:0];

assign zext_ln1057_fu_203_p1 = select_ln1057_2_fu_195_p3;

assign zext_ln554_cast_fu_129_p1 = zext_ln554;

assign zext_ln578_10_fu_930_p1 = select_ln578_17_fu_919_p3;

assign zext_ln578_11_fu_934_p1 = sub_ln578_23_fu_924_p2;

assign zext_ln578_12_fu_1001_p1 = select_ln578_20_fu_990_p3;

assign zext_ln578_13_fu_1005_p1 = sub_ln578_27_fu_995_p2;

assign zext_ln578_14_fu_1072_p1 = select_ln578_23_fu_1061_p3;

assign zext_ln578_15_fu_1076_p1 = sub_ln578_31_fu_1066_p2;

assign zext_ln578_1_fu_579_p1 = sub_ln578_3_fu_569_p2;

assign zext_ln578_2_fu_646_p1 = select_ln578_5_fu_635_p3;

assign zext_ln578_3_fu_650_p1 = sub_ln578_7_fu_640_p2;

assign zext_ln578_4_fu_717_p1 = select_ln578_8_fu_706_p3;

assign zext_ln578_5_fu_721_p1 = sub_ln578_11_fu_711_p2;

assign zext_ln578_6_fu_788_p1 = select_ln578_11_fu_777_p3;

assign zext_ln578_7_fu_792_p1 = sub_ln578_15_fu_782_p2;

assign zext_ln578_8_fu_859_p1 = select_ln578_14_fu_848_p3;

assign zext_ln578_9_fu_863_p1 = sub_ln578_19_fu_853_p2;

assign zext_ln578_fu_575_p1 = select_ln578_2_fu_564_p3;

always @ (posedge ap_clk) begin
    zext_ln554_cast_reg_1149[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    tmp_reg_1217[3:0] <= 4'b0000;
    trunc_ln578_1_reg_1224[3:0] <= 4'b1111;
    sub_ln578_1_reg_1230[3:0] <= 4'b1111;
    tmp_2_reg_1242[3:0] <= 4'b0000;
    trunc_ln578_3_reg_1249[3:0] <= 4'b1111;
    sub_ln578_5_reg_1255[3:0] <= 4'b1111;
    tmp_5_reg_1267[4:0] <= 5'b10000;
    trunc_ln578_5_reg_1274[4:0] <= 5'b11111;
    sub_ln578_9_reg_1280[4:0] <= 5'b01111;
    tmp_7_reg_1292[4:0] <= 5'b10000;
    trunc_ln578_7_reg_1299[4:0] <= 5'b11111;
    sub_ln578_13_reg_1305[4:0] <= 5'b01111;
    tmp_10_reg_1317[3:0] <= 4'b0000;
    tmp_10_reg_1317[5] <= 1'b1;
    trunc_ln578_9_reg_1324[3:0] <= 4'b1111;
    trunc_ln578_9_reg_1324[5] <= 1'b1;
    sub_ln578_17_reg_1330[3:0] <= 4'b1111;
    tmp_12_reg_1342[3:0] <= 4'b0000;
    tmp_12_reg_1342[5] <= 1'b1;
    trunc_ln578_11_reg_1349[3:0] <= 4'b1111;
    trunc_ln578_11_reg_1349[5] <= 1'b1;
    sub_ln578_21_reg_1355[3:0] <= 4'b1111;
    tmp_15_reg_1367[5:0] <= 6'b110000;
    trunc_ln578_13_reg_1374[5:0] <= 6'b111111;
    sub_ln578_25_reg_1380[5:0] <= 6'b001111;
    tmp_17_reg_1392[5:0] <= 6'b110000;
    trunc_ln578_15_reg_1399[5:0] <= 6'b111111;
    sub_ln578_29_reg_1405[5:0] <= 6'b001111;
end

endmodule //Mem_patch_Wr_Mem_patch_Wr_Pipeline_VITIS_LOOP_569_6_VITIS_LOOP_572_7
