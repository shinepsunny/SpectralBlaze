// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fwd_fft_dataflow_in_loop_VITIS_LOOP_295_3 (
        c_fft_row_op_st_dout,
        c_fft_row_op_st_empty_n,
        c_fft_row_op_st_read,
        p_read,
        c_fft_col_op_st_din,
        c_fft_col_op_st_full_n,
        c_fft_col_op_st_write,
        ap_clk,
        ap_rst,
        p_read_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] c_fft_row_op_st_dout;
input   c_fft_row_op_st_empty_n;
output   c_fft_row_op_st_read;
input  [7:0] p_read;
output  [31:0] c_fft_col_op_st_din;
input   c_fft_col_op_st_full_n;
output   c_fft_col_op_st_write;
input   ap_clk;
input   ap_rst;
input   p_read_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    ifmap_gen_x_U0_ap_start;
wire    ifmap_gen_x_U0_ap_done;
wire    ifmap_gen_x_U0_ap_continue;
wire    ifmap_gen_x_U0_ap_idle;
wire    ifmap_gen_x_U0_ap_ready;
wire    ifmap_gen_x_U0_c_fft_row_op_st_read;
wire    ap_sync_continue;
wire    compute_fft_write_U0_ap_start;
wire    compute_fft_write_U0_ap_done;
wire    compute_fft_write_U0_ap_continue;
wire    compute_fft_write_U0_ap_idle;
wire    compute_fft_write_U0_ap_ready;
wire   [31:0] compute_fft_write_U0_c_fft_col_op_st_din;
wire    compute_fft_write_U0_c_fft_col_op_st_write;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_ifmap_gen_x_U0_ap_ready;
wire    ap_sync_ifmap_gen_x_U0_ap_ready;
reg    ap_sync_reg_compute_fft_write_U0_ap_ready;
wire    ap_sync_compute_fft_write_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_ifmap_gen_x_U0_ap_ready = 1'b0;
#0 ap_sync_reg_compute_fft_write_U0_ap_ready = 1'b0;
end

fwd_fft_ifmap_gen_x ifmap_gen_x_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ifmap_gen_x_U0_ap_start),
    .ap_done(ifmap_gen_x_U0_ap_done),
    .ap_continue(ifmap_gen_x_U0_ap_continue),
    .ap_idle(ifmap_gen_x_U0_ap_idle),
    .ap_ready(ifmap_gen_x_U0_ap_ready),
    .c_fft_row_op_st_dout(c_fft_row_op_st_dout),
    .c_fft_row_op_st_empty_n(c_fft_row_op_st_empty_n),
    .c_fft_row_op_st_read(ifmap_gen_x_U0_c_fft_row_op_st_read),
    .p_read(p_read)
);

fwd_fft_compute_fft_write compute_fft_write_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(compute_fft_write_U0_ap_start),
    .ap_done(compute_fft_write_U0_ap_done),
    .ap_continue(compute_fft_write_U0_ap_continue),
    .ap_idle(compute_fft_write_U0_ap_idle),
    .ap_ready(compute_fft_write_U0_ap_ready),
    .c_fft_col_op_st_din(compute_fft_write_U0_c_fft_col_op_st_din),
    .c_fft_col_op_st_full_n(c_fft_col_op_st_full_n),
    .c_fft_col_op_st_write(compute_fft_write_U0_c_fft_col_op_st_write),
    .p_read(p_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_compute_fft_write_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_compute_fft_write_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_compute_fft_write_U0_ap_ready <= ap_sync_compute_fft_write_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_ifmap_gen_x_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_ifmap_gen_x_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_ifmap_gen_x_U0_ap_ready <= ap_sync_ifmap_gen_x_U0_ap_ready;
        end
    end
end

assign ap_done = ap_sync_done;

assign ap_idle = (ifmap_gen_x_U0_ap_idle & compute_fft_write_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_compute_fft_write_U0_ap_ready = (compute_fft_write_U0_ap_ready | ap_sync_reg_compute_fft_write_U0_ap_ready);

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (ifmap_gen_x_U0_ap_done & compute_fft_write_U0_ap_done);

assign ap_sync_ifmap_gen_x_U0_ap_ready = (ifmap_gen_x_U0_ap_ready | ap_sync_reg_ifmap_gen_x_U0_ap_ready);

assign ap_sync_ready = (ap_sync_ifmap_gen_x_U0_ap_ready & ap_sync_compute_fft_write_U0_ap_ready);

assign c_fft_col_op_st_din = compute_fft_write_U0_c_fft_col_op_st_din;

assign c_fft_col_op_st_write = compute_fft_write_U0_c_fft_col_op_st_write;

assign c_fft_row_op_st_read = ifmap_gen_x_U0_c_fft_row_op_st_read;

assign compute_fft_write_U0_ap_continue = ap_sync_continue;

assign compute_fft_write_U0_ap_start = ((ap_sync_reg_compute_fft_write_U0_ap_ready ^ 1'b1) & ap_start);

assign ifmap_gen_x_U0_ap_continue = ap_sync_continue;

assign ifmap_gen_x_U0_ap_start = ((ap_sync_reg_ifmap_gen_x_U0_ap_ready ^ 1'b1) & ap_start);

endmodule //fwd_fft_dataflow_in_loop_VITIS_LOOP_295_3
