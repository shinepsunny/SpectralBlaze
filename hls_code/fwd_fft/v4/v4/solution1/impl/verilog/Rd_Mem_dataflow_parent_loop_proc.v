// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Rd_Mem_dataflow_parent_loop_proc (
        ctrl2_reg_load_cast,
        ctrl1_reg,
        ctrl2_reg,
        layer2_reg,
        burst_buffer1_address0,
        burst_buffer1_ce0,
        burst_buffer1_d0,
        burst_buffer1_q0,
        burst_buffer1_we0,
        burst_buffer1_address1,
        burst_buffer1_ce1,
        burst_buffer1_d1,
        burst_buffer1_q1,
        burst_buffer1_we1,
        in_r,
        burst_buffer2_address0,
        burst_buffer2_ce0,
        burst_buffer2_d0,
        burst_buffer2_q0,
        burst_buffer2_we0,
        burst_buffer2_address1,
        burst_buffer2_ce1,
        burst_buffer2_d1,
        burst_buffer2_q1,
        burst_buffer2_we1,
        ap_clk,
        ap_rst,
        ctrl1_reg_ap_vld,
        ctrl2_reg_ap_vld,
        layer2_reg_ap_vld,
        in_r_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [7:0] ctrl2_reg_load_cast;
input  [31:0] ctrl1_reg;
input  [31:0] ctrl2_reg;
input  [31:0] layer2_reg;
output  [10:0] burst_buffer1_address0;
output   burst_buffer1_ce0;
output  [127:0] burst_buffer1_d0;
input  [127:0] burst_buffer1_q0;
output   burst_buffer1_we0;
output  [10:0] burst_buffer1_address1;
output   burst_buffer1_ce1;
output  [127:0] burst_buffer1_d1;
input  [127:0] burst_buffer1_q1;
output   burst_buffer1_we1;
input  [127:0] in_r;
output  [10:0] burst_buffer2_address0;
output   burst_buffer2_ce0;
output  [127:0] burst_buffer2_d0;
input  [127:0] burst_buffer2_q0;
output   burst_buffer2_we0;
output  [10:0] burst_buffer2_address1;
output   burst_buffer2_ce1;
output  [127:0] burst_buffer2_d1;
input  [127:0] burst_buffer2_q1;
output   burst_buffer2_we1;
input   ap_clk;
input   ap_rst;
input   ctrl1_reg_ap_vld;
input   ctrl2_reg_ap_vld;
input   layer2_reg_ap_vld;
input   in_r_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg ap_done;
reg ap_ready;
reg ap_idle;

wire   [10:0] dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_address0;
wire    dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_ce0;
wire   [127:0] dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_d0;
wire    dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_we0;
wire   [10:0] dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_address1;
wire    dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_ce1;
wire   [127:0] dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_d1;
wire    dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_we1;
wire   [10:0] dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_address0;
wire    dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_ce0;
wire   [127:0] dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_d0;
wire    dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_we0;
wire   [10:0] dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_address1;
wire    dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_ce1;
wire   [127:0] dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_d1;
wire    dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_we1;
wire    dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_start;
wire    dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_done;
wire    dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_ready;
wire    dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_idle;
reg    dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_continue;
reg   [7:0] loop_dataflow_input_count;
reg   [7:0] loop_dataflow_output_count;
wire   [7:0] bound_minus_1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 loop_dataflow_input_count = 8'd0;
#0 loop_dataflow_output_count = 8'd0;
end

Rd_Mem_dataflow_in_loop_VITIS_LOOP_283_2 dataflow_in_loop_VITIS_LOOP_283_2_U0(
    .ctrl1_reg(ctrl1_reg),
    .ctrl2_reg(ctrl2_reg),
    .pny_2(loop_dataflow_input_count),
    .layer2_reg(layer2_reg),
    .burst_buffer1_address0(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_address0),
    .burst_buffer1_ce0(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_ce0),
    .burst_buffer1_d0(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_d0),
    .burst_buffer1_q0(128'd0),
    .burst_buffer1_we0(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_we0),
    .burst_buffer1_address1(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_address1),
    .burst_buffer1_ce1(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_ce1),
    .burst_buffer1_d1(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_d1),
    .burst_buffer1_q1(128'd0),
    .burst_buffer1_we1(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_we1),
    .in_r(in_r),
    .burst_buffer2_address0(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_address0),
    .burst_buffer2_ce0(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_ce0),
    .burst_buffer2_d0(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_d0),
    .burst_buffer2_q0(128'd0),
    .burst_buffer2_we0(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_we0),
    .burst_buffer2_address1(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_address1),
    .burst_buffer2_ce1(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_ce1),
    .burst_buffer2_d1(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_d1),
    .burst_buffer2_q1(128'd0),
    .burst_buffer2_we1(dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_we1),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ctrl1_reg_ap_vld(ctrl1_reg_ap_vld),
    .ctrl2_reg_ap_vld(ctrl2_reg_ap_vld),
    .pny_2_ap_vld(1'b0),
    .layer2_reg_ap_vld(layer2_reg_ap_vld),
    .in_r_ap_vld(in_r_ap_vld),
    .ap_start(dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_start),
    .ap_done(dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_done),
    .ap_ready(dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_ready),
    .ap_idle(dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_idle),
    .ap_continue(dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_input_count <= 8'd0;
    end else begin
        if ((~(loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= (loop_dataflow_input_count + 8'd1);
        end else if (((loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_output_count <= 8'd0;
    end else begin
        if ((~(loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_continue == 1'b1) & (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_done == 1'b1))) begin
            loop_dataflow_output_count <= (loop_dataflow_output_count + 8'd1);
        end else if (((loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_continue == 1'b1) & (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_done == 1'b1))) begin
            loop_dataflow_output_count <= 8'd0;
        end
    end
end

always @ (*) begin
    if (((loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((loop_dataflow_output_count == 8'd0) & (ap_start == 1'b0) & (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_idle == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_ready == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~(loop_dataflow_output_count == bound_minus_1) | (ap_continue == 1'b1))) begin
        dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_continue = 1'b1;
    end else begin
        dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_continue = 1'b0;
    end
end

assign bound_minus_1 = (ctrl2_reg_load_cast - 8'd1);

assign burst_buffer1_address0 = dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_address0;

assign burst_buffer1_address1 = 11'd0;

assign burst_buffer1_ce0 = dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_ce0;

assign burst_buffer1_ce1 = 1'b0;

assign burst_buffer1_d0 = dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_d0;

assign burst_buffer1_d1 = 128'd0;

assign burst_buffer1_we0 = dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_we0;

assign burst_buffer1_we1 = 1'b0;

assign burst_buffer2_address0 = dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_address0;

assign burst_buffer2_address1 = 11'd0;

assign burst_buffer2_ce0 = dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_ce0;

assign burst_buffer2_ce1 = 1'b0;

assign burst_buffer2_d0 = dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_d0;

assign burst_buffer2_d1 = 128'd0;

assign burst_buffer2_we0 = dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_we0;

assign burst_buffer2_we1 = 1'b0;

assign dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_start = ap_start;

endmodule //Rd_Mem_dataflow_parent_loop_proc
