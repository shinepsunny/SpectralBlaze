// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft_stage_fft_stage_Pipeline_SKIP_X (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        div_i_i43_cast,
        zext_ln19_1,
        IN_r_address0,
        IN_r_ce0,
        IN_r_q0,
        div_cast,
        OUT_r_address0,
        OUT_r_ce0,
        OUT_r_we0,
        OUT_r_d0,
        sub28,
        y
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [6:0] div_i_i43_cast;
input  [7:0] zext_ln19_1;
output  [5:0] IN_r_address0;
output   IN_r_ce0;
input  [31:0] IN_r_q0;
input  [5:0] div_cast;
output  [5:0] OUT_r_address0;
output   OUT_r_ce0;
output  [3:0] OUT_r_we0;
output  [31:0] OUT_r_d0;
input  [31:0] sub28;
input  [31:0] y;

reg ap_idle;
reg[5:0] IN_r_address0;
reg IN_r_ce0;
reg[5:0] OUT_r_address0;
reg OUT_r_ce0;
reg[3:0] OUT_r_we0;
reg[31:0] OUT_r_d0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln1057_fu_230_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [7:0] w_M_real_address0;
reg    w_M_real_ce0;
wire   [15:0] w_M_real_q0;
wire   [7:0] w_M_imag_address0;
reg    w_M_imag_ce0;
wire   [15:0] w_M_imag_q0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1057_reg_460;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln1057_reg_460_pp0_iter1_reg;
reg   [0:0] icmp_ln1057_reg_460_pp0_iter2_reg;
reg   [0:0] icmp_ln1057_reg_460_pp0_iter3_reg;
reg   [0:0] icmp_ln1057_reg_460_pp0_iter4_reg;
reg   [0:0] icmp_ln1057_reg_460_pp0_iter5_reg;
reg   [0:0] icmp_ln1057_reg_460_pp0_iter6_reg;
reg   [0:0] icmp_ln1057_reg_460_pp0_iter7_reg;
reg   [0:0] icmp_ln1057_reg_460_pp0_iter8_reg;
wire   [5:0] add_ln20_fu_270_p2;
reg   [5:0] add_ln20_reg_474;
reg   [5:0] add_ln20_reg_474_pp0_iter1_reg;
reg   [5:0] add_ln20_reg_474_pp0_iter2_reg;
reg   [5:0] add_ln20_reg_474_pp0_iter3_reg;
reg   [5:0] add_ln20_reg_474_pp0_iter4_reg;
reg   [15:0] w1_M_real_reg_480;
reg   [15:0] w1_M_real_reg_480_pp0_iter2_reg;
reg   [15:0] w1_M_imag_reg_486;
reg   [15:0] w1_M_imag_reg_486_pp0_iter2_reg;
wire   [63:0] zext_ln21_fu_348_p1;
reg   [63:0] zext_ln21_reg_492;
reg   [63:0] zext_ln21_reg_492_pp0_iter2_reg;
reg   [63:0] zext_ln21_reg_492_pp0_iter3_reg;
reg   [63:0] zext_ln21_reg_492_pp0_iter4_reg;
reg   [63:0] zext_ln21_reg_492_pp0_iter5_reg;
reg   [63:0] zext_ln21_reg_492_pp0_iter6_reg;
reg   [63:0] zext_ln21_reg_492_pp0_iter7_reg;
reg   [63:0] zext_ln21_reg_492_pp0_iter8_reg;
reg   [63:0] zext_ln21_reg_492_pp0_iter9_reg;
wire   [15:0] trunc_ln388_fu_353_p1;
reg   [15:0] trunc_ln388_reg_502;
reg   [15:0] trunc_ln388_1_reg_507;
wire   [15:0] p_r_M_real_fu_357_p1;
reg   [15:0] p_r_M_real_reg_512;
wire   [15:0] p_r_M_imag_fu_361_p1;
reg   [15:0] p_r_M_imag_reg_517;
wire   [15:0] grp_fu_194_p2;
reg   [15:0] mul_i_i_reg_522;
wire   [15:0] grp_fu_198_p2;
reg   [15:0] mul3_i_i_reg_527;
reg   [15:0] mul6_i_i_reg_532;
reg   [15:0] mul9_i_i_reg_537;
wire   [63:0] zext_ln20_fu_365_p1;
reg   [63:0] zext_ln20_reg_542;
reg   [63:0] zext_ln20_reg_542_pp0_iter6_reg;
reg   [63:0] zext_ln20_reg_542_pp0_iter7_reg;
reg   [63:0] zext_ln20_reg_542_pp0_iter8_reg;
wire   [15:0] trunc_ln20_fu_369_p1;
reg   [15:0] trunc_ln20_reg_552;
reg   [15:0] trunc_ln20_1_reg_557;
wire   [15:0] grp_fu_186_p2;
reg   [15:0] p_r_reg_562;
wire   [15:0] t1_M_real_fu_373_p1;
wire   [15:0] grp_fu_178_p2;
reg   [15:0] p_r_M_imag_5_reg_574;
wire   [15:0] t1_M_imag_fu_378_p1;
wire   [15:0] grp_fu_182_p2;
reg   [15:0] p_r_M_real_3_reg_586;
reg   [15:0] p_r_M_real_4_reg_591;
reg   [15:0] p_r_M_real_4_reg_591_pp0_iter9_reg;
reg   [15:0] p_r_M_imag_3_reg_596;
wire   [15:0] grp_fu_190_p2;
reg   [15:0] p_r_M_imag_4_reg_601;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln19_fu_264_p1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage0;
reg   [6:0] k1_fu_70;
wire   [6:0] k1_2_fu_235_p2;
wire    ap_loop_init;
reg   [31:0] j1_fu_74;
wire   [31:0] j1_3_fu_313_p3;
reg   [31:0] m1_fu_78;
wire   [31:0] m1_2_fu_321_p3;
wire   [31:0] tmp_2_fu_389_p3;
wire   [31:0] tmp_3_fu_404_p3;
reg   [15:0] grp_fu_178_p0;
reg   [15:0] grp_fu_178_p1;
wire   [15:0] grp_fu_182_p0;
reg   [15:0] grp_fu_186_p0;
reg   [15:0] grp_fu_186_p1;
wire   [15:0] grp_fu_190_p0;
reg   [15:0] grp_fu_194_p0;
reg   [15:0] grp_fu_194_p1;
reg   [15:0] grp_fu_198_p0;
reg   [15:0] grp_fu_198_p1;
wire   [7:0] trunc_ln19_fu_255_p1;
wire   [7:0] add_ln19_fu_259_p2;
wire   [5:0] trunc_ln1057_1_fu_251_p1;
wire   [5:0] trunc_ln1057_fu_247_p1;
wire   [0:0] icmp_ln28_fu_287_p2;
wire   [31:0] add_ln31_fu_292_p2;
wire   [0:0] icmp_ln24_fu_276_p2;
wire   [31:0] j1_1_fu_281_p2;
wire   [31:0] j1_2_fu_297_p3;
wire   [31:0] m1_1_fu_305_p3;
wire   [5:0] add_ln21_fu_344_p2;
wire   [15:0] bitcast_ln22_1_fu_386_p1;
wire   [15:0] bitcast_ln22_fu_383_p1;
wire   [15:0] bitcast_ln23_1_fu_401_p1;
wire   [15:0] bitcast_ln23_fu_398_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter9_stage0;
reg    ap_idle_pp0_0to8;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to10;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

fft_stage_fft_stage_Pipeline_SKIP_X_w_M_real #(
    .DataWidth( 16 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
w_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w_M_real_address0),
    .ce0(w_M_real_ce0),
    .q0(w_M_real_q0)
);

fft_stage_fft_stage_Pipeline_SKIP_X_w_M_imag #(
    .DataWidth( 16 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
w_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w_M_imag_address0),
    .ce0(w_M_imag_ce0),
    .q0(w_M_imag_q0)
);

fft_stage_hadd_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hadd_16ns_16ns_16_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_178_p0),
    .din1(grp_fu_178_p1),
    .ce(1'b1),
    .dout(grp_fu_178_p2)
);

fft_stage_hadd_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hadd_16ns_16ns_16_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_182_p0),
    .din1(p_r_reg_562),
    .ce(1'b1),
    .dout(grp_fu_182_p2)
);

fft_stage_hsub_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hsub_16ns_16ns_16_5_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_186_p0),
    .din1(grp_fu_186_p1),
    .ce(1'b1),
    .dout(grp_fu_186_p2)
);

fft_stage_hsub_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hsub_16ns_16ns_16_5_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_190_p0),
    .din1(p_r_M_imag_5_reg_574),
    .ce(1'b1),
    .dout(grp_fu_190_p2)
);

fft_stage_hmul_16ns_16ns_16_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hmul_16ns_16ns_16_4_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_194_p0),
    .din1(grp_fu_194_p1),
    .ce(1'b1),
    .dout(grp_fu_194_p2)
);

fft_stage_hmul_16ns_16ns_16_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hmul_16ns_16ns_16_4_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_198_p0),
    .din1(grp_fu_198_p1),
    .ce(1'b1),
    .dout(grp_fu_198_p2)
);

fft_stage_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j1_fu_74 <= 32'd0;
    end else if (((icmp_ln1057_fu_230_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j1_fu_74 <= j1_3_fu_313_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k1_fu_70 <= 7'd0;
    end else if (((icmp_ln1057_fu_230_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        k1_fu_70 <= k1_2_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m1_fu_78 <= 32'd0;
    end else if (((icmp_ln1057_fu_230_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m1_fu_78 <= m1_2_fu_321_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_fu_230_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln20_reg_474 <= add_ln20_fu_270_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln20_reg_474_pp0_iter1_reg <= add_ln20_reg_474;
        add_ln20_reg_474_pp0_iter2_reg <= add_ln20_reg_474_pp0_iter1_reg;
        add_ln20_reg_474_pp0_iter3_reg <= add_ln20_reg_474_pp0_iter2_reg;
        add_ln20_reg_474_pp0_iter4_reg <= add_ln20_reg_474_pp0_iter3_reg;
        icmp_ln1057_reg_460 <= icmp_ln1057_fu_230_p2;
        icmp_ln1057_reg_460_pp0_iter1_reg <= icmp_ln1057_reg_460;
        icmp_ln1057_reg_460_pp0_iter2_reg <= icmp_ln1057_reg_460_pp0_iter1_reg;
        icmp_ln1057_reg_460_pp0_iter3_reg <= icmp_ln1057_reg_460_pp0_iter2_reg;
        icmp_ln1057_reg_460_pp0_iter4_reg <= icmp_ln1057_reg_460_pp0_iter3_reg;
        icmp_ln1057_reg_460_pp0_iter5_reg <= icmp_ln1057_reg_460_pp0_iter4_reg;
        icmp_ln1057_reg_460_pp0_iter6_reg <= icmp_ln1057_reg_460_pp0_iter5_reg;
        icmp_ln1057_reg_460_pp0_iter7_reg <= icmp_ln1057_reg_460_pp0_iter6_reg;
        icmp_ln1057_reg_460_pp0_iter8_reg <= icmp_ln1057_reg_460_pp0_iter7_reg;
        p_r_M_real_3_reg_586 <= grp_fu_182_p2;
        p_r_M_real_4_reg_591_pp0_iter9_reg <= p_r_M_real_4_reg_591;
        trunc_ln388_reg_502 <= trunc_ln388_fu_353_p1;
        zext_ln20_reg_542[5 : 0] <= zext_ln20_fu_365_p1[5 : 0];
        zext_ln20_reg_542_pp0_iter6_reg[5 : 0] <= zext_ln20_reg_542[5 : 0];
        zext_ln20_reg_542_pp0_iter7_reg[5 : 0] <= zext_ln20_reg_542_pp0_iter6_reg[5 : 0];
        zext_ln20_reg_542_pp0_iter8_reg[5 : 0] <= zext_ln20_reg_542_pp0_iter7_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul3_i_i_reg_527 <= grp_fu_198_p2;
        mul_i_i_reg_522 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul6_i_i_reg_532 <= grp_fu_194_p2;
        mul9_i_i_reg_537 <= grp_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_r_M_imag_3_reg_596 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_r_M_imag_4_reg_601 <= grp_fu_190_p2;
        p_r_M_imag_reg_517 <= p_r_M_imag_fu_361_p1;
        p_r_M_real_reg_512 <= p_r_M_real_fu_357_p1;
        trunc_ln20_reg_552 <= trunc_ln20_fu_369_p1;
        w1_M_imag_reg_486_pp0_iter2_reg <= w1_M_imag_reg_486;
        w1_M_real_reg_480_pp0_iter2_reg <= w1_M_real_reg_480;
        zext_ln21_reg_492_pp0_iter2_reg[5 : 0] <= zext_ln21_reg_492[5 : 0];
        zext_ln21_reg_492_pp0_iter3_reg[5 : 0] <= zext_ln21_reg_492_pp0_iter2_reg[5 : 0];
        zext_ln21_reg_492_pp0_iter4_reg[5 : 0] <= zext_ln21_reg_492_pp0_iter3_reg[5 : 0];
        zext_ln21_reg_492_pp0_iter5_reg[5 : 0] <= zext_ln21_reg_492_pp0_iter4_reg[5 : 0];
        zext_ln21_reg_492_pp0_iter6_reg[5 : 0] <= zext_ln21_reg_492_pp0_iter5_reg[5 : 0];
        zext_ln21_reg_492_pp0_iter7_reg[5 : 0] <= zext_ln21_reg_492_pp0_iter6_reg[5 : 0];
        zext_ln21_reg_492_pp0_iter8_reg[5 : 0] <= zext_ln21_reg_492_pp0_iter7_reg[5 : 0];
        zext_ln21_reg_492_pp0_iter9_reg[5 : 0] <= zext_ln21_reg_492_pp0_iter8_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_r_M_imag_5_reg_574 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_r_M_real_4_reg_591 <= grp_fu_186_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_r_reg_562 <= grp_fu_186_p2;
        trunc_ln20_1_reg_557 <= {{IN_r_q0[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln388_1_reg_507 <= {{IN_r_q0[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1057_reg_460 == 1'd0))) begin
        w1_M_imag_reg_486 <= w_M_imag_q0;
        w1_M_real_reg_480 <= w_M_real_q0;
        zext_ln21_reg_492[5 : 0] <= zext_ln21_fu_348_p1[5 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        IN_r_address0 = zext_ln20_fu_365_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        IN_r_address0 = zext_ln21_fu_348_p1;
    end else begin
        IN_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        IN_r_ce0 = 1'b1;
    end else begin
        IN_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OUT_r_address0 = zext_ln21_reg_492_pp0_iter9_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OUT_r_address0 = zext_ln20_reg_542_pp0_iter8_reg;
    end else begin
        OUT_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        OUT_r_ce0 = 1'b1;
    end else begin
        OUT_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OUT_r_d0 = tmp_3_fu_404_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OUT_r_d0 = tmp_2_fu_389_p3;
    end else begin
        OUT_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        OUT_r_we0 = 4'd15;
    end else begin
        OUT_r_we0 = 4'd0;
    end
end

always @ (*) begin
    if (((icmp_ln1057_fu_230_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1057_reg_460_pp0_iter8_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter9_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter9_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to10 = 1'b1;
    end else begin
        ap_idle_pp0_1to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_178_p0 = t1_M_imag_fu_378_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_178_p0 = mul6_i_i_reg_532;
    end else begin
        grp_fu_178_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_178_p1 = p_r_M_imag_5_reg_574;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_178_p1 = mul9_i_i_reg_537;
    end else begin
        grp_fu_178_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_186_p0 = t1_M_real_fu_373_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_186_p0 = mul_i_i_reg_522;
    end else begin
        grp_fu_186_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_186_p1 = p_r_reg_562;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_186_p1 = mul3_i_i_reg_527;
    end else begin
        grp_fu_186_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_194_p0 = p_r_M_real_reg_512;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_194_p0 = p_r_M_real_fu_357_p1;
        end else begin
            grp_fu_194_p0 = 'bx;
        end
    end else begin
        grp_fu_194_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_194_p1 = w1_M_imag_reg_486_pp0_iter2_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_194_p1 = w1_M_real_reg_480;
        end else begin
            grp_fu_194_p1 = 'bx;
        end
    end else begin
        grp_fu_194_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_198_p0 = p_r_M_imag_reg_517;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_198_p0 = p_r_M_imag_fu_361_p1;
        end else begin
            grp_fu_198_p0 = 'bx;
        end
    end else begin
        grp_fu_198_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_198_p1 = w1_M_real_reg_480_pp0_iter2_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_198_p1 = w1_M_imag_reg_486;
        end else begin
            grp_fu_198_p1 = 'bx;
        end
    end else begin
        grp_fu_198_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        w_M_imag_ce0 = 1'b1;
    end else begin
        w_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        w_M_real_ce0 = 1'b1;
    end else begin
        w_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to10 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln19_fu_259_p2 = (zext_ln19_1 + trunc_ln19_fu_255_p1);

assign add_ln20_fu_270_p2 = (trunc_ln1057_1_fu_251_p1 + trunc_ln1057_fu_247_p1);

assign add_ln21_fu_344_p2 = (add_ln20_reg_474 + div_cast);

assign add_ln31_fu_292_p2 = (m1_fu_78 + y);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign bitcast_ln22_1_fu_386_p1 = p_r_M_imag_3_reg_596;

assign bitcast_ln22_fu_383_p1 = p_r_M_real_3_reg_586;

assign bitcast_ln23_1_fu_401_p1 = p_r_M_imag_4_reg_601;

assign bitcast_ln23_fu_398_p1 = p_r_M_real_4_reg_591_pp0_iter9_reg;

assign grp_fu_182_p0 = trunc_ln20_reg_552;

assign grp_fu_190_p0 = trunc_ln20_1_reg_557;

assign icmp_ln1057_fu_230_p2 = ((k1_fu_70 == div_i_i43_cast) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_276_p2 = ((j1_fu_74 < sub28) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_287_p2 = ((j1_fu_74 == sub28) ? 1'b1 : 1'b0);

assign j1_1_fu_281_p2 = (j1_fu_74 + 32'd1);

assign j1_2_fu_297_p3 = ((icmp_ln28_fu_287_p2[0:0] == 1'b1) ? 32'd0 : j1_fu_74);

assign j1_3_fu_313_p3 = ((icmp_ln24_fu_276_p2[0:0] == 1'b1) ? j1_1_fu_281_p2 : j1_2_fu_297_p3);

assign k1_2_fu_235_p2 = (k1_fu_70 + 7'd1);

assign m1_1_fu_305_p3 = ((icmp_ln28_fu_287_p2[0:0] == 1'b1) ? add_ln31_fu_292_p2 : m1_fu_78);

assign m1_2_fu_321_p3 = ((icmp_ln24_fu_276_p2[0:0] == 1'b1) ? m1_fu_78 : m1_1_fu_305_p3);

assign p_r_M_imag_fu_361_p1 = trunc_ln388_1_reg_507;

assign p_r_M_real_fu_357_p1 = trunc_ln388_reg_502;

assign t1_M_imag_fu_378_p1 = trunc_ln20_1_reg_557;

assign t1_M_real_fu_373_p1 = trunc_ln20_reg_552;

assign tmp_2_fu_389_p3 = {{bitcast_ln22_1_fu_386_p1}, {bitcast_ln22_fu_383_p1}};

assign tmp_3_fu_404_p3 = {{bitcast_ln23_1_fu_401_p1}, {bitcast_ln23_fu_398_p1}};

assign trunc_ln1057_1_fu_251_p1 = j1_fu_74[5:0];

assign trunc_ln1057_fu_247_p1 = m1_fu_78[5:0];

assign trunc_ln19_fu_255_p1 = j1_fu_74[7:0];

assign trunc_ln20_fu_369_p1 = IN_r_q0[15:0];

assign trunc_ln388_fu_353_p1 = IN_r_q0[15:0];

assign w_M_imag_address0 = zext_ln19_fu_264_p1;

assign w_M_real_address0 = zext_ln19_fu_264_p1;

assign zext_ln19_fu_264_p1 = add_ln19_fu_259_p2;

assign zext_ln20_fu_365_p1 = add_ln20_reg_474_pp0_iter4_reg;

assign zext_ln21_fu_348_p1 = add_ln21_fu_344_p2;

always @ (posedge ap_clk) begin
    zext_ln21_reg_492[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln21_reg_492_pp0_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln21_reg_492_pp0_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln21_reg_492_pp0_iter4_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln21_reg_492_pp0_iter5_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln21_reg_492_pp0_iter6_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln21_reg_492_pp0_iter7_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln21_reg_492_pp0_iter8_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln21_reg_492_pp0_iter9_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln20_reg_542[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln20_reg_542_pp0_iter6_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln20_reg_542_pp0_iter7_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln20_reg_542_pp0_iter8_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //fft_stage_fft_stage_Pipeline_SKIP_X
