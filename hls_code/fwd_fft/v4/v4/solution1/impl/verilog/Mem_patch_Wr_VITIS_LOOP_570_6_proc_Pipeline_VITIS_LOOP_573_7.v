// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Mem_patch_Wr_VITIS_LOOP_570_6_proc_Pipeline_VITIS_LOOP_573_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        empty,
        ifmap_CF_M_real1_load,
        ifmap_CF_M_imag2_load,
        fft_out,
        fft_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [8:0] empty;
input  [1023:0] ifmap_CF_M_real1_load;
input  [1023:0] ifmap_CF_M_imag2_load;
output  [127:0] fft_out;
output   fft_out_ap_vld;

reg ap_idle;
reg fft_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1057_fu_99_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] p_cast_fu_87_p1;
reg   [63:0] p_cast_reg_1057;
wire   [7:0] trunc_ln579_fu_104_p1;
reg   [7:0] trunc_ln579_reg_1066;
wire   [10:0] tmp_5_fu_116_p3;
reg   [10:0] tmp_5_reg_1071;
wire   [10:0] sub_ln579_1_fu_124_p2;
reg   [10:0] sub_ln579_1_reg_1078;
wire   [10:0] tmp_7_fu_130_p3;
reg   [10:0] tmp_7_reg_1083;
wire   [10:0] sub_ln579_5_fu_138_p2;
reg   [10:0] sub_ln579_5_reg_1090;
wire   [7:0] or_ln579_fu_144_p2;
reg   [7:0] or_ln579_reg_1095;
wire   [10:0] tmp_9_fu_158_p3;
reg   [10:0] tmp_9_reg_1100;
wire   [10:0] sub_ln579_9_fu_166_p2;
reg   [10:0] sub_ln579_9_reg_1107;
wire   [10:0] tmp_11_fu_172_p3;
reg   [10:0] tmp_11_reg_1112;
wire   [10:0] sub_ln579_13_fu_180_p2;
reg   [10:0] sub_ln579_13_reg_1119;
wire   [7:0] or_ln579_1_fu_186_p2;
reg   [7:0] or_ln579_1_reg_1124;
wire   [10:0] tmp_13_fu_200_p3;
reg   [10:0] tmp_13_reg_1129;
wire   [10:0] sub_ln579_17_fu_208_p2;
reg   [10:0] sub_ln579_17_reg_1136;
wire   [10:0] tmp_15_fu_214_p3;
reg   [10:0] tmp_15_reg_1141;
wire   [10:0] sub_ln579_21_fu_222_p2;
reg   [10:0] sub_ln579_21_reg_1148;
wire   [7:0] or_ln579_2_fu_228_p2;
reg   [7:0] or_ln579_2_reg_1153;
wire   [10:0] tmp_17_fu_242_p3;
reg   [10:0] tmp_17_reg_1158;
wire   [10:0] sub_ln579_25_fu_250_p2;
reg   [10:0] sub_ln579_25_reg_1165;
wire   [10:0] tmp_19_fu_256_p3;
reg   [10:0] tmp_19_reg_1170;
wire   [10:0] sub_ln579_29_fu_264_p2;
reg   [10:0] sub_ln579_29_reg_1177;
wire   [10:0] sub_ln579_3_fu_344_p2;
reg   [10:0] sub_ln579_3_reg_1182;
wire   [1023:0] lshr_ln579_fu_354_p2;
reg   [1023:0] lshr_ln579_reg_1187;
wire   [10:0] sub_ln579_7_fu_410_p2;
reg   [10:0] sub_ln579_7_reg_1192;
wire   [1023:0] lshr_ln579_2_fu_420_p2;
reg   [1023:0] lshr_ln579_2_reg_1197;
wire   [10:0] sub_ln579_11_fu_489_p2;
reg   [10:0] sub_ln579_11_reg_1202;
wire   [1023:0] lshr_ln579_4_fu_499_p2;
reg   [1023:0] lshr_ln579_4_reg_1207;
wire   [10:0] sub_ln579_15_fu_555_p2;
reg   [10:0] sub_ln579_15_reg_1212;
wire   [1023:0] lshr_ln579_6_fu_565_p2;
reg   [1023:0] lshr_ln579_6_reg_1217;
wire   [10:0] sub_ln579_19_fu_634_p2;
reg   [10:0] sub_ln579_19_reg_1222;
wire   [1023:0] lshr_ln579_8_fu_644_p2;
reg   [1023:0] lshr_ln579_8_reg_1227;
wire   [10:0] sub_ln579_23_fu_700_p2;
reg   [10:0] sub_ln579_23_reg_1232;
wire   [1023:0] lshr_ln579_10_fu_710_p2;
reg   [1023:0] lshr_ln579_10_reg_1237;
wire   [10:0] sub_ln579_27_fu_779_p2;
reg   [10:0] sub_ln579_27_reg_1242;
wire   [1023:0] lshr_ln579_12_fu_789_p2;
reg   [1023:0] lshr_ln579_12_reg_1247;
wire   [10:0] sub_ln579_31_fu_845_p2;
reg   [10:0] sub_ln579_31_reg_1252;
wire   [1023:0] lshr_ln579_14_fu_855_p2;
reg   [1023:0] lshr_ln579_14_reg_1257;
reg   [63:0] x_fu_58;
wire   [63:0] add_ln573_fu_270_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage0_01001;
wire   [6:0] empty_68_fu_112_p1;
wire   [6:0] empty_67_fu_108_p1;
wire   [6:0] empty_71_fu_154_p1;
wire   [6:0] empty_70_fu_150_p1;
wire   [6:0] empty_74_fu_196_p1;
wire   [6:0] empty_73_fu_192_p1;
wire   [6:0] empty_77_fu_238_p1;
wire   [6:0] empty_76_fu_234_p1;
wire   [11:0] tmp_1_fu_281_p3;
wire   [11:0] empty_69_fu_288_p2;
wire   [10:0] trunc_ln579_1_fu_300_p1;
wire   [0:0] icmp_ln579_fu_294_p2;
wire   [10:0] sub_ln579_fu_313_p2;
wire   [10:0] sub_ln579_2_fu_318_p2;
reg   [1023:0] tmp_6_fu_304_p4;
wire   [10:0] select_ln579_fu_323_p3;
wire   [10:0] select_ln579_2_fu_338_p3;
wire   [1023:0] select_ln579_1_fu_331_p3;
wire   [1023:0] zext_ln579_fu_350_p1;
wire   [10:0] trunc_ln579_3_fu_366_p1;
wire   [0:0] icmp_ln579_1_fu_360_p2;
wire   [10:0] sub_ln579_4_fu_379_p2;
wire   [10:0] sub_ln579_6_fu_384_p2;
reg   [1023:0] tmp_8_fu_370_p4;
wire   [10:0] select_ln579_3_fu_389_p3;
wire   [10:0] select_ln579_5_fu_404_p3;
wire   [1023:0] select_ln579_4_fu_397_p3;
wire   [1023:0] zext_ln579_2_fu_416_p1;
wire   [11:0] tmp_2_fu_426_p3;
wire   [11:0] empty_72_fu_433_p2;
wire   [10:0] trunc_ln579_5_fu_445_p1;
wire   [0:0] icmp_ln579_2_fu_439_p2;
wire   [10:0] sub_ln579_8_fu_458_p2;
wire   [10:0] sub_ln579_10_fu_463_p2;
reg   [1023:0] tmp_10_fu_449_p4;
wire   [10:0] select_ln579_6_fu_468_p3;
wire   [10:0] select_ln579_8_fu_483_p3;
wire   [1023:0] select_ln579_7_fu_476_p3;
wire   [1023:0] zext_ln579_4_fu_495_p1;
wire   [10:0] trunc_ln579_7_fu_511_p1;
wire   [0:0] icmp_ln579_3_fu_505_p2;
wire   [10:0] sub_ln579_12_fu_524_p2;
wire   [10:0] sub_ln579_14_fu_529_p2;
reg   [1023:0] tmp_12_fu_515_p4;
wire   [10:0] select_ln579_9_fu_534_p3;
wire   [10:0] select_ln579_11_fu_549_p3;
wire   [1023:0] select_ln579_10_fu_542_p3;
wire   [1023:0] zext_ln579_6_fu_561_p1;
wire   [11:0] tmp_3_fu_571_p3;
wire   [11:0] empty_75_fu_578_p2;
wire   [10:0] trunc_ln579_9_fu_590_p1;
wire   [0:0] icmp_ln579_4_fu_584_p2;
wire   [10:0] sub_ln579_16_fu_603_p2;
wire   [10:0] sub_ln579_18_fu_608_p2;
reg   [1023:0] tmp_14_fu_594_p4;
wire   [10:0] select_ln579_12_fu_613_p3;
wire   [10:0] select_ln579_14_fu_628_p3;
wire   [1023:0] select_ln579_13_fu_621_p3;
wire   [1023:0] zext_ln579_8_fu_640_p1;
wire   [10:0] trunc_ln579_11_fu_656_p1;
wire   [0:0] icmp_ln579_5_fu_650_p2;
wire   [10:0] sub_ln579_20_fu_669_p2;
wire   [10:0] sub_ln579_22_fu_674_p2;
reg   [1023:0] tmp_16_fu_660_p4;
wire   [10:0] select_ln579_15_fu_679_p3;
wire   [10:0] select_ln579_17_fu_694_p3;
wire   [1023:0] select_ln579_16_fu_687_p3;
wire   [1023:0] zext_ln579_10_fu_706_p1;
wire   [11:0] tmp_4_fu_716_p3;
wire   [11:0] empty_78_fu_723_p2;
wire   [10:0] trunc_ln579_13_fu_735_p1;
wire   [0:0] icmp_ln579_6_fu_729_p2;
wire   [10:0] sub_ln579_24_fu_748_p2;
wire   [10:0] sub_ln579_26_fu_753_p2;
reg   [1023:0] tmp_18_fu_739_p4;
wire   [10:0] select_ln579_18_fu_758_p3;
wire   [10:0] select_ln579_20_fu_773_p3;
wire   [1023:0] select_ln579_19_fu_766_p3;
wire   [1023:0] zext_ln579_12_fu_785_p1;
wire   [10:0] trunc_ln579_15_fu_801_p1;
wire   [0:0] icmp_ln579_7_fu_795_p2;
wire   [10:0] sub_ln579_28_fu_814_p2;
wire   [10:0] sub_ln579_30_fu_819_p2;
reg   [1023:0] tmp_20_fu_805_p4;
wire   [10:0] select_ln579_21_fu_824_p3;
wire   [10:0] select_ln579_23_fu_839_p3;
wire   [1023:0] select_ln579_22_fu_832_p3;
wire   [1023:0] zext_ln579_14_fu_851_p1;
wire   [1023:0] zext_ln579_1_fu_861_p1;
wire   [1023:0] lshr_ln579_1_fu_864_p2;
wire   [1023:0] and_ln579_fu_870_p2;
wire   [1023:0] zext_ln579_3_fu_879_p1;
wire   [1023:0] lshr_ln579_3_fu_882_p2;
wire   [1023:0] and_ln579_1_fu_888_p2;
wire   [1023:0] zext_ln579_5_fu_897_p1;
wire   [1023:0] lshr_ln579_5_fu_900_p2;
wire   [1023:0] and_ln579_2_fu_906_p2;
wire   [1023:0] zext_ln579_7_fu_915_p1;
wire   [1023:0] lshr_ln579_7_fu_918_p2;
wire   [1023:0] and_ln579_3_fu_924_p2;
wire   [1023:0] zext_ln579_9_fu_933_p1;
wire   [1023:0] lshr_ln579_9_fu_936_p2;
wire   [1023:0] and_ln579_4_fu_942_p2;
wire   [1023:0] zext_ln579_11_fu_951_p1;
wire   [1023:0] lshr_ln579_11_fu_954_p2;
wire   [1023:0] and_ln579_5_fu_960_p2;
wire   [1023:0] zext_ln579_13_fu_969_p1;
wire   [1023:0] lshr_ln579_13_fu_972_p2;
wire   [1023:0] and_ln579_6_fu_978_p2;
wire   [1023:0] zext_ln579_15_fu_987_p1;
wire   [1023:0] lshr_ln579_15_fu_990_p2;
wire   [1023:0] and_ln579_7_fu_996_p2;
wire   [15:0] trunc_ln579_16_fu_1001_p1;
wire   [15:0] trunc_ln579_14_fu_983_p1;
wire   [15:0] trunc_ln579_12_fu_965_p1;
wire   [15:0] trunc_ln579_10_fu_947_p1;
wire   [15:0] trunc_ln579_8_fu_929_p1;
wire   [15:0] trunc_ln579_6_fu_911_p1;
wire   [15:0] trunc_ln579_4_fu_893_p1;
wire   [15:0] trunc_ln579_2_fu_875_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Mem_patch_Wr_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            x_fu_58 <= 64'd0;
        end else if (((icmp_ln1057_fu_99_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            x_fu_58 <= add_ln573_fu_270_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        p_cast_reg_1057[8 : 0] <= p_cast_fu_87_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        lshr_ln579_10_reg_1237 <= lshr_ln579_10_fu_710_p2;
        lshr_ln579_12_reg_1247 <= lshr_ln579_12_fu_789_p2;
        lshr_ln579_14_reg_1257 <= lshr_ln579_14_fu_855_p2;
        lshr_ln579_2_reg_1197 <= lshr_ln579_2_fu_420_p2;
        lshr_ln579_4_reg_1207 <= lshr_ln579_4_fu_499_p2;
        lshr_ln579_6_reg_1217 <= lshr_ln579_6_fu_565_p2;
        lshr_ln579_8_reg_1227 <= lshr_ln579_8_fu_644_p2;
        lshr_ln579_reg_1187 <= lshr_ln579_fu_354_p2;
        sub_ln579_11_reg_1202[10 : 1] <= sub_ln579_11_fu_489_p2[10 : 1];
        sub_ln579_15_reg_1212[10 : 1] <= sub_ln579_15_fu_555_p2[10 : 1];
        sub_ln579_19_reg_1222[10 : 1] <= sub_ln579_19_fu_634_p2[10 : 1];
        sub_ln579_23_reg_1232[10 : 1] <= sub_ln579_23_fu_700_p2[10 : 1];
        sub_ln579_27_reg_1242[10 : 1] <= sub_ln579_27_fu_779_p2[10 : 1];
        sub_ln579_31_reg_1252[10 : 1] <= sub_ln579_31_fu_845_p2[10 : 1];
        sub_ln579_3_reg_1182[10 : 1] <= sub_ln579_3_fu_344_p2[10 : 1];
        sub_ln579_7_reg_1192[10 : 1] <= sub_ln579_7_fu_410_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_fu_99_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln579_1_reg_1124[0] <= or_ln579_1_fu_186_p2[0];
or_ln579_1_reg_1124[7 : 2] <= or_ln579_1_fu_186_p2[7 : 2];
        or_ln579_2_reg_1153[7 : 2] <= or_ln579_2_fu_228_p2[7 : 2];
        or_ln579_reg_1095[7 : 1] <= or_ln579_fu_144_p2[7 : 1];
        sub_ln579_13_reg_1119[10 : 5] <= sub_ln579_13_fu_180_p2[10 : 5];
        sub_ln579_17_reg_1136[10 : 4] <= sub_ln579_17_fu_208_p2[10 : 4];
        sub_ln579_1_reg_1078[10 : 4] <= sub_ln579_1_fu_124_p2[10 : 4];
        sub_ln579_21_reg_1148[10 : 4] <= sub_ln579_21_fu_222_p2[10 : 4];
        sub_ln579_25_reg_1165[10 : 6] <= sub_ln579_25_fu_250_p2[10 : 6];
        sub_ln579_29_reg_1177[10 : 6] <= sub_ln579_29_fu_264_p2[10 : 6];
        sub_ln579_5_reg_1090[10 : 4] <= sub_ln579_5_fu_138_p2[10 : 4];
        sub_ln579_9_reg_1107[10 : 5] <= sub_ln579_9_fu_166_p2[10 : 5];
        tmp_11_reg_1112[10 : 5] <= tmp_11_fu_172_p3[10 : 5];
        tmp_13_reg_1129[4] <= tmp_13_fu_200_p3[4];
tmp_13_reg_1129[10 : 6] <= tmp_13_fu_200_p3[10 : 6];
        tmp_15_reg_1141[4] <= tmp_15_fu_214_p3[4];
tmp_15_reg_1141[10 : 6] <= tmp_15_fu_214_p3[10 : 6];
        tmp_17_reg_1158[10 : 6] <= tmp_17_fu_242_p3[10 : 6];
        tmp_19_reg_1170[10 : 6] <= tmp_19_fu_256_p3[10 : 6];
        tmp_5_reg_1071[10 : 4] <= tmp_5_fu_116_p3[10 : 4];
        tmp_7_reg_1083[10 : 4] <= tmp_7_fu_130_p3[10 : 4];
        tmp_9_reg_1100[10 : 5] <= tmp_9_fu_158_p3[10 : 5];
        trunc_ln579_reg_1066 <= trunc_ln579_fu_104_p1;
    end
end

always @ (*) begin
    if (((icmp_ln1057_fu_99_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        fft_out_ap_vld = 1'b1;
    end else begin
        fft_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln573_fu_270_p2 = (x_fu_58 + 64'd4);

assign and_ln579_1_fu_888_p2 = (lshr_ln579_3_fu_882_p2 & lshr_ln579_2_reg_1197);

assign and_ln579_2_fu_906_p2 = (lshr_ln579_5_fu_900_p2 & lshr_ln579_4_reg_1207);

assign and_ln579_3_fu_924_p2 = (lshr_ln579_7_fu_918_p2 & lshr_ln579_6_reg_1217);

assign and_ln579_4_fu_942_p2 = (lshr_ln579_9_fu_936_p2 & lshr_ln579_8_reg_1227);

assign and_ln579_5_fu_960_p2 = (lshr_ln579_11_fu_954_p2 & lshr_ln579_10_reg_1237);

assign and_ln579_6_fu_978_p2 = (lshr_ln579_13_fu_972_p2 & lshr_ln579_12_reg_1247);

assign and_ln579_7_fu_996_p2 = (lshr_ln579_15_fu_990_p2 & lshr_ln579_14_reg_1257);

assign and_ln579_fu_870_p2 = (lshr_ln579_reg_1187 & lshr_ln579_1_fu_864_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign empty_67_fu_108_p1 = x_fu_58[6:0];

assign empty_68_fu_112_p1 = x_fu_58[6:0];

assign empty_69_fu_288_p2 = (tmp_1_fu_281_p3 | 12'd15);

assign empty_70_fu_150_p1 = or_ln579_fu_144_p2[6:0];

assign empty_71_fu_154_p1 = or_ln579_fu_144_p2[6:0];

assign empty_72_fu_433_p2 = (tmp_2_fu_426_p3 | 12'd15);

assign empty_73_fu_192_p1 = or_ln579_1_fu_186_p2[6:0];

assign empty_74_fu_196_p1 = or_ln579_1_fu_186_p2[6:0];

assign empty_75_fu_578_p2 = (tmp_3_fu_571_p3 | 12'd15);

assign empty_76_fu_234_p1 = or_ln579_2_fu_228_p2[6:0];

assign empty_77_fu_238_p1 = or_ln579_2_fu_228_p2[6:0];

assign empty_78_fu_723_p2 = (tmp_4_fu_716_p3 | 12'd15);

assign fft_out = {{{{{{{{trunc_ln579_16_fu_1001_p1}, {trunc_ln579_14_fu_983_p1}}, {trunc_ln579_12_fu_965_p1}}, {trunc_ln579_10_fu_947_p1}}, {trunc_ln579_8_fu_929_p1}}, {trunc_ln579_6_fu_911_p1}}, {trunc_ln579_4_fu_893_p1}}, {trunc_ln579_2_fu_875_p1}};

assign icmp_ln1057_fu_99_p2 = ((x_fu_58 == p_cast_reg_1057) ? 1'b1 : 1'b0);

assign icmp_ln579_1_fu_360_p2 = ((tmp_1_fu_281_p3 > empty_69_fu_288_p2) ? 1'b1 : 1'b0);

assign icmp_ln579_2_fu_439_p2 = ((tmp_2_fu_426_p3 > empty_72_fu_433_p2) ? 1'b1 : 1'b0);

assign icmp_ln579_3_fu_505_p2 = ((tmp_2_fu_426_p3 > empty_72_fu_433_p2) ? 1'b1 : 1'b0);

assign icmp_ln579_4_fu_584_p2 = ((tmp_3_fu_571_p3 > empty_75_fu_578_p2) ? 1'b1 : 1'b0);

assign icmp_ln579_5_fu_650_p2 = ((tmp_3_fu_571_p3 > empty_75_fu_578_p2) ? 1'b1 : 1'b0);

assign icmp_ln579_6_fu_729_p2 = ((tmp_4_fu_716_p3 > empty_78_fu_723_p2) ? 1'b1 : 1'b0);

assign icmp_ln579_7_fu_795_p2 = ((tmp_4_fu_716_p3 > empty_78_fu_723_p2) ? 1'b1 : 1'b0);

assign icmp_ln579_fu_294_p2 = ((tmp_1_fu_281_p3 > empty_69_fu_288_p2) ? 1'b1 : 1'b0);

assign lshr_ln579_10_fu_710_p2 = select_ln579_16_fu_687_p3 >> zext_ln579_10_fu_706_p1;

assign lshr_ln579_11_fu_954_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln579_11_fu_951_p1;

assign lshr_ln579_12_fu_789_p2 = select_ln579_19_fu_766_p3 >> zext_ln579_12_fu_785_p1;

assign lshr_ln579_13_fu_972_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln579_13_fu_969_p1;

assign lshr_ln579_14_fu_855_p2 = select_ln579_22_fu_832_p3 >> zext_ln579_14_fu_851_p1;

assign lshr_ln579_15_fu_990_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln579_15_fu_987_p1;

assign lshr_ln579_1_fu_864_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln579_1_fu_861_p1;

assign lshr_ln579_2_fu_420_p2 = select_ln579_4_fu_397_p3 >> zext_ln579_2_fu_416_p1;

assign lshr_ln579_3_fu_882_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln579_3_fu_879_p1;

assign lshr_ln579_4_fu_499_p2 = select_ln579_7_fu_476_p3 >> zext_ln579_4_fu_495_p1;

assign lshr_ln579_5_fu_900_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln579_5_fu_897_p1;

assign lshr_ln579_6_fu_565_p2 = select_ln579_10_fu_542_p3 >> zext_ln579_6_fu_561_p1;

assign lshr_ln579_7_fu_918_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln579_7_fu_915_p1;

assign lshr_ln579_8_fu_644_p2 = select_ln579_13_fu_621_p3 >> zext_ln579_8_fu_640_p1;

assign lshr_ln579_9_fu_936_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln579_9_fu_933_p1;

assign lshr_ln579_fu_354_p2 = select_ln579_1_fu_331_p3 >> zext_ln579_fu_350_p1;

assign or_ln579_1_fu_186_p2 = (trunc_ln579_fu_104_p1 | 8'd2);

assign or_ln579_2_fu_228_p2 = (trunc_ln579_fu_104_p1 | 8'd3);

assign or_ln579_fu_144_p2 = (trunc_ln579_fu_104_p1 | 8'd1);

assign p_cast_fu_87_p1 = empty;

assign select_ln579_10_fu_542_p3 = ((icmp_ln579_3_fu_505_p2[0:0] == 1'b1) ? tmp_12_fu_515_p4 : ifmap_CF_M_imag2_load);

assign select_ln579_11_fu_549_p3 = ((icmp_ln579_3_fu_505_p2[0:0] == 1'b1) ? sub_ln579_13_reg_1119 : tmp_11_reg_1112);

assign select_ln579_12_fu_613_p3 = ((icmp_ln579_4_fu_584_p2[0:0] == 1'b1) ? sub_ln579_16_fu_603_p2 : sub_ln579_18_fu_608_p2);

assign select_ln579_13_fu_621_p3 = ((icmp_ln579_4_fu_584_p2[0:0] == 1'b1) ? tmp_14_fu_594_p4 : ifmap_CF_M_real1_load);

assign select_ln579_14_fu_628_p3 = ((icmp_ln579_4_fu_584_p2[0:0] == 1'b1) ? sub_ln579_17_reg_1136 : tmp_13_reg_1129);

assign select_ln579_15_fu_679_p3 = ((icmp_ln579_5_fu_650_p2[0:0] == 1'b1) ? sub_ln579_20_fu_669_p2 : sub_ln579_22_fu_674_p2);

assign select_ln579_16_fu_687_p3 = ((icmp_ln579_5_fu_650_p2[0:0] == 1'b1) ? tmp_16_fu_660_p4 : ifmap_CF_M_imag2_load);

assign select_ln579_17_fu_694_p3 = ((icmp_ln579_5_fu_650_p2[0:0] == 1'b1) ? sub_ln579_21_reg_1148 : tmp_15_reg_1141);

assign select_ln579_18_fu_758_p3 = ((icmp_ln579_6_fu_729_p2[0:0] == 1'b1) ? sub_ln579_24_fu_748_p2 : sub_ln579_26_fu_753_p2);

assign select_ln579_19_fu_766_p3 = ((icmp_ln579_6_fu_729_p2[0:0] == 1'b1) ? tmp_18_fu_739_p4 : ifmap_CF_M_real1_load);

assign select_ln579_1_fu_331_p3 = ((icmp_ln579_fu_294_p2[0:0] == 1'b1) ? tmp_6_fu_304_p4 : ifmap_CF_M_real1_load);

assign select_ln579_20_fu_773_p3 = ((icmp_ln579_6_fu_729_p2[0:0] == 1'b1) ? sub_ln579_25_reg_1165 : tmp_17_reg_1158);

assign select_ln579_21_fu_824_p3 = ((icmp_ln579_7_fu_795_p2[0:0] == 1'b1) ? sub_ln579_28_fu_814_p2 : sub_ln579_30_fu_819_p2);

assign select_ln579_22_fu_832_p3 = ((icmp_ln579_7_fu_795_p2[0:0] == 1'b1) ? tmp_20_fu_805_p4 : ifmap_CF_M_imag2_load);

assign select_ln579_23_fu_839_p3 = ((icmp_ln579_7_fu_795_p2[0:0] == 1'b1) ? sub_ln579_29_reg_1177 : tmp_19_reg_1170);

assign select_ln579_2_fu_338_p3 = ((icmp_ln579_fu_294_p2[0:0] == 1'b1) ? sub_ln579_1_reg_1078 : tmp_5_reg_1071);

assign select_ln579_3_fu_389_p3 = ((icmp_ln579_1_fu_360_p2[0:0] == 1'b1) ? sub_ln579_4_fu_379_p2 : sub_ln579_6_fu_384_p2);

assign select_ln579_4_fu_397_p3 = ((icmp_ln579_1_fu_360_p2[0:0] == 1'b1) ? tmp_8_fu_370_p4 : ifmap_CF_M_imag2_load);

assign select_ln579_5_fu_404_p3 = ((icmp_ln579_1_fu_360_p2[0:0] == 1'b1) ? sub_ln579_5_reg_1090 : tmp_7_reg_1083);

assign select_ln579_6_fu_468_p3 = ((icmp_ln579_2_fu_439_p2[0:0] == 1'b1) ? sub_ln579_8_fu_458_p2 : sub_ln579_10_fu_463_p2);

assign select_ln579_7_fu_476_p3 = ((icmp_ln579_2_fu_439_p2[0:0] == 1'b1) ? tmp_10_fu_449_p4 : ifmap_CF_M_real1_load);

assign select_ln579_8_fu_483_p3 = ((icmp_ln579_2_fu_439_p2[0:0] == 1'b1) ? sub_ln579_9_reg_1107 : tmp_9_reg_1100);

assign select_ln579_9_fu_534_p3 = ((icmp_ln579_3_fu_505_p2[0:0] == 1'b1) ? sub_ln579_12_fu_524_p2 : sub_ln579_14_fu_529_p2);

assign select_ln579_fu_323_p3 = ((icmp_ln579_fu_294_p2[0:0] == 1'b1) ? sub_ln579_fu_313_p2 : sub_ln579_2_fu_318_p2);

assign sub_ln579_10_fu_463_p2 = (trunc_ln579_5_fu_445_p1 - tmp_9_reg_1100);

assign sub_ln579_11_fu_489_p2 = (11'd1023 - select_ln579_6_fu_468_p3);

assign sub_ln579_12_fu_524_p2 = (tmp_11_reg_1112 - trunc_ln579_7_fu_511_p1);

assign sub_ln579_13_fu_180_p2 = (11'd1023 - tmp_11_fu_172_p3);

assign sub_ln579_14_fu_529_p2 = (trunc_ln579_7_fu_511_p1 - tmp_11_reg_1112);

assign sub_ln579_15_fu_555_p2 = (11'd1023 - select_ln579_9_fu_534_p3);

assign sub_ln579_16_fu_603_p2 = (tmp_13_reg_1129 - trunc_ln579_9_fu_590_p1);

assign sub_ln579_17_fu_208_p2 = (11'd1023 - tmp_13_fu_200_p3);

assign sub_ln579_18_fu_608_p2 = (trunc_ln579_9_fu_590_p1 - tmp_13_reg_1129);

assign sub_ln579_19_fu_634_p2 = (11'd1023 - select_ln579_12_fu_613_p3);

assign sub_ln579_1_fu_124_p2 = (11'd1023 - tmp_5_fu_116_p3);

assign sub_ln579_20_fu_669_p2 = (tmp_15_reg_1141 - trunc_ln579_11_fu_656_p1);

assign sub_ln579_21_fu_222_p2 = (11'd1023 - tmp_15_fu_214_p3);

assign sub_ln579_22_fu_674_p2 = (trunc_ln579_11_fu_656_p1 - tmp_15_reg_1141);

assign sub_ln579_23_fu_700_p2 = (11'd1023 - select_ln579_15_fu_679_p3);

assign sub_ln579_24_fu_748_p2 = (tmp_17_reg_1158 - trunc_ln579_13_fu_735_p1);

assign sub_ln579_25_fu_250_p2 = (11'd1023 - tmp_17_fu_242_p3);

assign sub_ln579_26_fu_753_p2 = (trunc_ln579_13_fu_735_p1 - tmp_17_reg_1158);

assign sub_ln579_27_fu_779_p2 = (11'd1023 - select_ln579_18_fu_758_p3);

assign sub_ln579_28_fu_814_p2 = (tmp_19_reg_1170 - trunc_ln579_15_fu_801_p1);

assign sub_ln579_29_fu_264_p2 = (11'd1023 - tmp_19_fu_256_p3);

assign sub_ln579_2_fu_318_p2 = (trunc_ln579_1_fu_300_p1 - tmp_5_reg_1071);

assign sub_ln579_30_fu_819_p2 = (trunc_ln579_15_fu_801_p1 - tmp_19_reg_1170);

assign sub_ln579_31_fu_845_p2 = (11'd1023 - select_ln579_21_fu_824_p3);

assign sub_ln579_3_fu_344_p2 = (11'd1023 - select_ln579_fu_323_p3);

assign sub_ln579_4_fu_379_p2 = (tmp_7_reg_1083 - trunc_ln579_3_fu_366_p1);

assign sub_ln579_5_fu_138_p2 = (11'd1023 - tmp_7_fu_130_p3);

assign sub_ln579_6_fu_384_p2 = (trunc_ln579_3_fu_366_p1 - tmp_7_reg_1083);

assign sub_ln579_7_fu_410_p2 = (11'd1023 - select_ln579_3_fu_389_p3);

assign sub_ln579_8_fu_458_p2 = (tmp_9_reg_1100 - trunc_ln579_5_fu_445_p1);

assign sub_ln579_9_fu_166_p2 = (11'd1023 - tmp_9_fu_158_p3);

assign sub_ln579_fu_313_p2 = (tmp_5_reg_1071 - trunc_ln579_1_fu_300_p1);

integer ap_tvar_int_0;

always @ (ifmap_CF_M_real1_load) begin
    for (ap_tvar_int_0 = 1024 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 1023 - 0) begin
            tmp_10_fu_449_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_10_fu_449_p4[ap_tvar_int_0] = ifmap_CF_M_real1_load[1023 - ap_tvar_int_0];
        end
    end
end

assign tmp_11_fu_172_p3 = {{empty_70_fu_150_p1}, {4'd0}};

integer ap_tvar_int_1;

always @ (ifmap_CF_M_imag2_load) begin
    for (ap_tvar_int_1 = 1024 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 1023 - 0) begin
            tmp_12_fu_515_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_12_fu_515_p4[ap_tvar_int_1] = ifmap_CF_M_imag2_load[1023 - ap_tvar_int_1];
        end
    end
end

assign tmp_13_fu_200_p3 = {{empty_74_fu_196_p1}, {4'd0}};

integer ap_tvar_int_2;

always @ (ifmap_CF_M_real1_load) begin
    for (ap_tvar_int_2 = 1024 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 1023 - 0) begin
            tmp_14_fu_594_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_14_fu_594_p4[ap_tvar_int_2] = ifmap_CF_M_real1_load[1023 - ap_tvar_int_2];
        end
    end
end

assign tmp_15_fu_214_p3 = {{empty_73_fu_192_p1}, {4'd0}};

integer ap_tvar_int_3;

always @ (ifmap_CF_M_imag2_load) begin
    for (ap_tvar_int_3 = 1024 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 1023 - 0) begin
            tmp_16_fu_660_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_16_fu_660_p4[ap_tvar_int_3] = ifmap_CF_M_imag2_load[1023 - ap_tvar_int_3];
        end
    end
end

assign tmp_17_fu_242_p3 = {{empty_77_fu_238_p1}, {4'd0}};

integer ap_tvar_int_4;

always @ (ifmap_CF_M_real1_load) begin
    for (ap_tvar_int_4 = 1024 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 1023 - 0) begin
            tmp_18_fu_739_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            tmp_18_fu_739_p4[ap_tvar_int_4] = ifmap_CF_M_real1_load[1023 - ap_tvar_int_4];
        end
    end
end

assign tmp_19_fu_256_p3 = {{empty_76_fu_234_p1}, {4'd0}};

assign tmp_1_fu_281_p3 = {{trunc_ln579_reg_1066}, {4'd0}};

integer ap_tvar_int_5;

always @ (ifmap_CF_M_imag2_load) begin
    for (ap_tvar_int_5 = 1024 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 1023 - 0) begin
            tmp_20_fu_805_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            tmp_20_fu_805_p4[ap_tvar_int_5] = ifmap_CF_M_imag2_load[1023 - ap_tvar_int_5];
        end
    end
end

assign tmp_2_fu_426_p3 = {{or_ln579_reg_1095}, {4'd0}};

assign tmp_3_fu_571_p3 = {{or_ln579_1_reg_1124}, {4'd0}};

assign tmp_4_fu_716_p3 = {{or_ln579_2_reg_1153}, {4'd0}};

assign tmp_5_fu_116_p3 = {{empty_68_fu_112_p1}, {4'd0}};

integer ap_tvar_int_6;

always @ (ifmap_CF_M_real1_load) begin
    for (ap_tvar_int_6 = 1024 - 1; ap_tvar_int_6 >= 0; ap_tvar_int_6 = ap_tvar_int_6 - 1) begin
        if (ap_tvar_int_6 > 1023 - 0) begin
            tmp_6_fu_304_p4[ap_tvar_int_6] = 1'b0;
        end else begin
            tmp_6_fu_304_p4[ap_tvar_int_6] = ifmap_CF_M_real1_load[1023 - ap_tvar_int_6];
        end
    end
end

assign tmp_7_fu_130_p3 = {{empty_67_fu_108_p1}, {4'd0}};

integer ap_tvar_int_7;

always @ (ifmap_CF_M_imag2_load) begin
    for (ap_tvar_int_7 = 1024 - 1; ap_tvar_int_7 >= 0; ap_tvar_int_7 = ap_tvar_int_7 - 1) begin
        if (ap_tvar_int_7 > 1023 - 0) begin
            tmp_8_fu_370_p4[ap_tvar_int_7] = 1'b0;
        end else begin
            tmp_8_fu_370_p4[ap_tvar_int_7] = ifmap_CF_M_imag2_load[1023 - ap_tvar_int_7];
        end
    end
end

assign tmp_9_fu_158_p3 = {{empty_71_fu_154_p1}, {4'd0}};

assign trunc_ln579_10_fu_947_p1 = and_ln579_4_fu_942_p2[15:0];

assign trunc_ln579_11_fu_656_p1 = empty_75_fu_578_p2[10:0];

assign trunc_ln579_12_fu_965_p1 = and_ln579_5_fu_960_p2[15:0];

assign trunc_ln579_13_fu_735_p1 = empty_78_fu_723_p2[10:0];

assign trunc_ln579_14_fu_983_p1 = and_ln579_6_fu_978_p2[15:0];

assign trunc_ln579_15_fu_801_p1 = empty_78_fu_723_p2[10:0];

assign trunc_ln579_16_fu_1001_p1 = and_ln579_7_fu_996_p2[15:0];

assign trunc_ln579_1_fu_300_p1 = empty_69_fu_288_p2[10:0];

assign trunc_ln579_2_fu_875_p1 = and_ln579_fu_870_p2[15:0];

assign trunc_ln579_3_fu_366_p1 = empty_69_fu_288_p2[10:0];

assign trunc_ln579_4_fu_893_p1 = and_ln579_1_fu_888_p2[15:0];

assign trunc_ln579_5_fu_445_p1 = empty_72_fu_433_p2[10:0];

assign trunc_ln579_6_fu_911_p1 = and_ln579_2_fu_906_p2[15:0];

assign trunc_ln579_7_fu_511_p1 = empty_72_fu_433_p2[10:0];

assign trunc_ln579_8_fu_929_p1 = and_ln579_3_fu_924_p2[15:0];

assign trunc_ln579_9_fu_590_p1 = empty_75_fu_578_p2[10:0];

assign trunc_ln579_fu_104_p1 = x_fu_58[7:0];

assign zext_ln579_10_fu_706_p1 = select_ln579_17_fu_694_p3;

assign zext_ln579_11_fu_951_p1 = sub_ln579_23_reg_1232;

assign zext_ln579_12_fu_785_p1 = select_ln579_20_fu_773_p3;

assign zext_ln579_13_fu_969_p1 = sub_ln579_27_reg_1242;

assign zext_ln579_14_fu_851_p1 = select_ln579_23_fu_839_p3;

assign zext_ln579_15_fu_987_p1 = sub_ln579_31_reg_1252;

assign zext_ln579_1_fu_861_p1 = sub_ln579_3_reg_1182;

assign zext_ln579_2_fu_416_p1 = select_ln579_5_fu_404_p3;

assign zext_ln579_3_fu_879_p1 = sub_ln579_7_reg_1192;

assign zext_ln579_4_fu_495_p1 = select_ln579_8_fu_483_p3;

assign zext_ln579_5_fu_897_p1 = sub_ln579_11_reg_1202;

assign zext_ln579_6_fu_561_p1 = select_ln579_11_fu_549_p3;

assign zext_ln579_7_fu_915_p1 = sub_ln579_15_reg_1212;

assign zext_ln579_8_fu_640_p1 = select_ln579_14_fu_628_p3;

assign zext_ln579_9_fu_933_p1 = sub_ln579_19_reg_1222;

assign zext_ln579_fu_350_p1 = select_ln579_2_fu_338_p3;

always @ (posedge ap_clk) begin
    p_cast_reg_1057[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_5_reg_1071[3:0] <= 4'b0000;
    sub_ln579_1_reg_1078[3:0] <= 4'b1111;
    tmp_7_reg_1083[3:0] <= 4'b0000;
    sub_ln579_5_reg_1090[3:0] <= 4'b1111;
    or_ln579_reg_1095[0] <= 1'b1;
    tmp_9_reg_1100[4:0] <= 5'b10000;
    sub_ln579_9_reg_1107[4:0] <= 5'b01111;
    tmp_11_reg_1112[4:0] <= 5'b10000;
    sub_ln579_13_reg_1119[4:0] <= 5'b01111;
    or_ln579_1_reg_1124[1] <= 1'b1;
    tmp_13_reg_1129[3:0] <= 4'b0000;
    tmp_13_reg_1129[5] <= 1'b1;
    sub_ln579_17_reg_1136[3:0] <= 4'b1111;
    tmp_15_reg_1141[3:0] <= 4'b0000;
    tmp_15_reg_1141[5] <= 1'b1;
    sub_ln579_21_reg_1148[3:0] <= 4'b1111;
    or_ln579_2_reg_1153[1:0] <= 2'b11;
    tmp_17_reg_1158[5:0] <= 6'b110000;
    sub_ln579_25_reg_1165[5:0] <= 6'b001111;
    tmp_19_reg_1170[5:0] <= 6'b110000;
    sub_ln579_29_reg_1177[5:0] <= 6'b001111;
    sub_ln579_3_reg_1182[0] <= 1'b0;
    sub_ln579_7_reg_1192[0] <= 1'b0;
    sub_ln579_11_reg_1202[0] <= 1'b0;
    sub_ln579_15_reg_1212[0] <= 1'b0;
    sub_ln579_19_reg_1222[0] <= 1'b0;
    sub_ln579_23_reg_1232[0] <= 1'b0;
    sub_ln579_27_reg_1242[0] <= 1'b0;
    sub_ln579_31_reg_1252[0] <= 1'b0;
end

endmodule //Mem_patch_Wr_VITIS_LOOP_570_6_proc_Pipeline_VITIS_LOOP_573_7
