// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fwd_fft_fft22 (
        ap_clk,
        ap_rst,
        input_data_M_real_address0,
        input_data_M_real_ce0,
        input_data_M_real_d0,
        input_data_M_real_q0,
        input_data_M_real_we0,
        input_data_M_real_address1,
        input_data_M_real_ce1,
        input_data_M_real_d1,
        input_data_M_real_q1,
        input_data_M_real_we1,
        input_data_M_imag_address0,
        input_data_M_imag_ce0,
        input_data_M_imag_d0,
        input_data_M_imag_q0,
        input_data_M_imag_we0,
        input_data_M_imag_address1,
        input_data_M_imag_ce1,
        input_data_M_imag_d1,
        input_data_M_imag_q1,
        input_data_M_imag_we1,
        out_data_6_M_real_address0,
        out_data_6_M_real_ce0,
        out_data_6_M_real_d0,
        out_data_6_M_real_q0,
        out_data_6_M_real_we0,
        out_data_6_M_real_address1,
        out_data_6_M_real_ce1,
        out_data_6_M_real_d1,
        out_data_6_M_real_q1,
        out_data_6_M_real_we1,
        out_data_6_M_imag_address0,
        out_data_6_M_imag_ce0,
        out_data_6_M_imag_d0,
        out_data_6_M_imag_q0,
        out_data_6_M_imag_we0,
        out_data_6_M_imag_address1,
        out_data_6_M_imag_ce1,
        out_data_6_M_imag_d1,
        out_data_6_M_imag_q1,
        out_data_6_M_imag_we1,
        p_read,
        ctrl1_reg_c5_din,
        ctrl1_reg_c5_full_n,
        ctrl1_reg_c5_write,
        input_data_M_real_empty_n,
        input_data_M_real_read,
        input_data_M_imag_empty_n,
        input_data_M_imag_read,
        p_read_ap_vld,
        ap_start,
        out_data_6_M_real_full_n,
        out_data_6_M_real_write,
        out_data_6_M_imag_full_n,
        out_data_6_M_imag_write,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_clk;
input   ap_rst;
output  [5:0] input_data_M_real_address0;
output   input_data_M_real_ce0;
output  [15:0] input_data_M_real_d0;
input  [15:0] input_data_M_real_q0;
output   input_data_M_real_we0;
output  [5:0] input_data_M_real_address1;
output   input_data_M_real_ce1;
output  [15:0] input_data_M_real_d1;
input  [15:0] input_data_M_real_q1;
output   input_data_M_real_we1;
output  [5:0] input_data_M_imag_address0;
output   input_data_M_imag_ce0;
output  [15:0] input_data_M_imag_d0;
input  [15:0] input_data_M_imag_q0;
output   input_data_M_imag_we0;
output  [5:0] input_data_M_imag_address1;
output   input_data_M_imag_ce1;
output  [15:0] input_data_M_imag_d1;
input  [15:0] input_data_M_imag_q1;
output   input_data_M_imag_we1;
output  [5:0] out_data_6_M_real_address0;
output   out_data_6_M_real_ce0;
output  [15:0] out_data_6_M_real_d0;
input  [15:0] out_data_6_M_real_q0;
output   out_data_6_M_real_we0;
output  [5:0] out_data_6_M_real_address1;
output   out_data_6_M_real_ce1;
output  [15:0] out_data_6_M_real_d1;
input  [15:0] out_data_6_M_real_q1;
output   out_data_6_M_real_we1;
output  [5:0] out_data_6_M_imag_address0;
output   out_data_6_M_imag_ce0;
output  [15:0] out_data_6_M_imag_d0;
input  [15:0] out_data_6_M_imag_q0;
output   out_data_6_M_imag_we0;
output  [5:0] out_data_6_M_imag_address1;
output   out_data_6_M_imag_ce1;
output  [15:0] out_data_6_M_imag_d1;
input  [15:0] out_data_6_M_imag_q1;
output   out_data_6_M_imag_we1;
input  [31:0] p_read;
output  [31:0] ctrl1_reg_c5_din;
input   ctrl1_reg_c5_full_n;
output   ctrl1_reg_c5_write;
input   input_data_M_real_empty_n;
output   input_data_M_real_read;
input   input_data_M_imag_empty_n;
output   input_data_M_imag_read;
input   p_read_ap_vld;
input   ap_start;
input   out_data_6_M_real_full_n;
output   out_data_6_M_real_write;
input   out_data_6_M_imag_full_n;
output   out_data_6_M_imag_write;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire   [31:0] out_data_1_i_q0;
wire   [31:0] out_data_1_i_q1;
wire   [31:0] out_data_1_t_q0;
wire   [31:0] out_data_1_t_q1;
wire   [31:0] out_data_2_i_q0;
wire   [31:0] out_data_2_i_q1;
wire   [31:0] out_data_2_t_q0;
wire   [31:0] out_data_2_t_q1;
wire   [31:0] out_data_3_i_q0;
wire   [31:0] out_data_3_i_q1;
wire   [31:0] out_data_3_t_q0;
wire   [31:0] out_data_3_t_q1;
wire   [31:0] out_data_4_i_q0;
wire   [31:0] out_data_4_i_q1;
wire   [31:0] out_data_4_t_q0;
wire   [31:0] out_data_4_t_q1;
wire   [31:0] out_data_5_i_q0;
wire   [31:0] out_data_5_i_q1;
wire   [31:0] out_data_5_t_q0;
wire   [31:0] out_data_5_t_q1;
wire    fft_stage23_U0_ap_start;
wire    fft_stage23_U0_ap_done;
wire    fft_stage23_U0_ap_continue;
wire    fft_stage23_U0_ap_idle;
wire    fft_stage23_U0_ap_ready;
wire   [5:0] fft_stage23_U0_IN_M_real_address0;
wire    fft_stage23_U0_IN_M_real_ce0;
wire   [5:0] fft_stage23_U0_IN_M_real_address1;
wire    fft_stage23_U0_IN_M_real_ce1;
wire   [5:0] fft_stage23_U0_IN_M_imag_address0;
wire    fft_stage23_U0_IN_M_imag_ce0;
wire   [5:0] fft_stage23_U0_IN_M_imag_address1;
wire    fft_stage23_U0_IN_M_imag_ce1;
wire   [5:0] fft_stage23_U0_OUT_r_address0;
wire    fft_stage23_U0_OUT_r_ce0;
wire    fft_stage23_U0_OUT_r_we0;
wire   [31:0] fft_stage23_U0_OUT_r_d0;
wire   [5:0] fft_stage23_U0_OUT_r_address1;
wire    fft_stage23_U0_OUT_r_ce1;
wire    fft_stage23_U0_OUT_r_we1;
wire   [31:0] fft_stage23_U0_OUT_r_d1;
wire   [31:0] fft_stage23_U0_ctrl1_reg_c5_din;
wire    fft_stage23_U0_ctrl1_reg_c5_write;
wire   [31:0] fft_stage23_U0_ap_return;
wire    fft_stage23_U0_IN_M_real_write;
wire    fft_stage23_U0_IN_M_imag_write;
wire    ap_channel_done_ctrl1_reg_c4_channel;
wire    ctrl1_reg_c4_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c4_channel;
wire    ap_sync_channel_write_ctrl1_reg_c4_channel;
wire    ap_channel_done_out_data_1;
wire    fft_stage23_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_1;
wire    ap_sync_channel_write_out_data_1;
wire    fft_stage_11324_U0_ap_start;
wire    fft_stage_11324_U0_ap_done;
wire    fft_stage_11324_U0_ap_continue;
wire    fft_stage_11324_U0_ap_idle;
wire    fft_stage_11324_U0_ap_ready;
wire   [5:0] fft_stage_11324_U0_IN_r_address0;
wire    fft_stage_11324_U0_IN_r_ce0;
wire   [5:0] fft_stage_11324_U0_IN_r_address1;
wire    fft_stage_11324_U0_IN_r_ce1;
wire   [5:0] fft_stage_11324_U0_OUT_r_address0;
wire    fft_stage_11324_U0_OUT_r_ce0;
wire    fft_stage_11324_U0_OUT_r_we0;
wire   [31:0] fft_stage_11324_U0_OUT_r_d0;
wire   [5:0] fft_stage_11324_U0_OUT_r_address1;
wire    fft_stage_11324_U0_OUT_r_ce1;
wire    fft_stage_11324_U0_OUT_r_we1;
wire   [31:0] fft_stage_11324_U0_OUT_r_d1;
wire   [15:0] fft_stage_11324_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c3_channel;
wire    ctrl1_reg_c3_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c3_channel;
wire    ap_sync_channel_write_ctrl1_reg_c3_channel;
wire    ap_channel_done_out_data_2;
wire    fft_stage_11324_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_2;
wire    ap_sync_channel_write_out_data_2;
wire    fft_stage_11425_U0_ap_start;
wire    fft_stage_11425_U0_ap_done;
wire    fft_stage_11425_U0_ap_continue;
wire    fft_stage_11425_U0_ap_idle;
wire    fft_stage_11425_U0_ap_ready;
wire   [5:0] fft_stage_11425_U0_IN_r_address0;
wire    fft_stage_11425_U0_IN_r_ce0;
wire   [5:0] fft_stage_11425_U0_IN_r_address1;
wire    fft_stage_11425_U0_IN_r_ce1;
wire   [5:0] fft_stage_11425_U0_OUT_r_address0;
wire    fft_stage_11425_U0_OUT_r_ce0;
wire    fft_stage_11425_U0_OUT_r_we0;
wire   [31:0] fft_stage_11425_U0_OUT_r_d0;
wire   [5:0] fft_stage_11425_U0_OUT_r_address1;
wire    fft_stage_11425_U0_OUT_r_ce1;
wire    fft_stage_11425_U0_OUT_r_we1;
wire   [31:0] fft_stage_11425_U0_OUT_r_d1;
wire   [15:0] fft_stage_11425_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c2_channel;
wire    ctrl1_reg_c2_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c2_channel;
wire    ap_sync_channel_write_ctrl1_reg_c2_channel;
wire    ap_channel_done_out_data_3;
wire    fft_stage_11425_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_3;
wire    ap_sync_channel_write_out_data_3;
wire    fft_stage_11526_U0_ap_start;
wire    fft_stage_11526_U0_ap_done;
wire    fft_stage_11526_U0_ap_continue;
wire    fft_stage_11526_U0_ap_idle;
wire    fft_stage_11526_U0_ap_ready;
wire   [5:0] fft_stage_11526_U0_IN_r_address0;
wire    fft_stage_11526_U0_IN_r_ce0;
wire   [5:0] fft_stage_11526_U0_IN_r_address1;
wire    fft_stage_11526_U0_IN_r_ce1;
wire   [5:0] fft_stage_11526_U0_OUT_r_address0;
wire    fft_stage_11526_U0_OUT_r_ce0;
wire    fft_stage_11526_U0_OUT_r_we0;
wire   [31:0] fft_stage_11526_U0_OUT_r_d0;
wire   [5:0] fft_stage_11526_U0_OUT_r_address1;
wire    fft_stage_11526_U0_OUT_r_ce1;
wire    fft_stage_11526_U0_OUT_r_we1;
wire   [31:0] fft_stage_11526_U0_OUT_r_d1;
wire   [15:0] fft_stage_11526_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c1_channel;
wire    ctrl1_reg_c1_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c1_channel;
wire    ap_sync_channel_write_ctrl1_reg_c1_channel;
wire    ap_channel_done_out_data_4;
wire    fft_stage_11526_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_4;
wire    ap_sync_channel_write_out_data_4;
wire    fft_stage_11627_U0_ap_start;
wire    fft_stage_11627_U0_ap_done;
wire    fft_stage_11627_U0_ap_continue;
wire    fft_stage_11627_U0_ap_idle;
wire    fft_stage_11627_U0_ap_ready;
wire   [5:0] fft_stage_11627_U0_IN_r_address0;
wire    fft_stage_11627_U0_IN_r_ce0;
wire   [5:0] fft_stage_11627_U0_IN_r_address1;
wire    fft_stage_11627_U0_IN_r_ce1;
wire   [5:0] fft_stage_11627_U0_OUT_r_address0;
wire    fft_stage_11627_U0_OUT_r_ce0;
wire    fft_stage_11627_U0_OUT_r_we0;
wire   [31:0] fft_stage_11627_U0_OUT_r_d0;
wire   [5:0] fft_stage_11627_U0_OUT_r_address1;
wire    fft_stage_11627_U0_OUT_r_ce1;
wire    fft_stage_11627_U0_OUT_r_we1;
wire   [31:0] fft_stage_11627_U0_OUT_r_d1;
wire   [15:0] fft_stage_11627_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c_channel;
wire    ctrl1_reg_c_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c_channel;
wire    ap_sync_channel_write_ctrl1_reg_c_channel;
wire    ap_channel_done_out_data_5;
wire    fft_stage_11627_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_5;
wire    ap_sync_channel_write_out_data_5;
wire    fft_stage_228_U0_ap_start;
wire    fft_stage_228_U0_ap_done;
wire    fft_stage_228_U0_ap_continue;
wire    fft_stage_228_U0_ap_idle;
wire    fft_stage_228_U0_ap_ready;
wire   [5:0] fft_stage_228_U0_IN_r_address0;
wire    fft_stage_228_U0_IN_r_ce0;
wire   [5:0] fft_stage_228_U0_IN_r_address1;
wire    fft_stage_228_U0_IN_r_ce1;
wire   [5:0] fft_stage_228_U0_OUT_M_real_address0;
wire    fft_stage_228_U0_OUT_M_real_ce0;
wire    fft_stage_228_U0_OUT_M_real_we0;
wire   [15:0] fft_stage_228_U0_OUT_M_real_d0;
wire   [5:0] fft_stage_228_U0_OUT_M_real_address1;
wire    fft_stage_228_U0_OUT_M_real_ce1;
wire    fft_stage_228_U0_OUT_M_real_we1;
wire   [15:0] fft_stage_228_U0_OUT_M_real_d1;
wire   [5:0] fft_stage_228_U0_OUT_M_imag_address0;
wire    fft_stage_228_U0_OUT_M_imag_ce0;
wire    fft_stage_228_U0_OUT_M_imag_we0;
wire   [15:0] fft_stage_228_U0_OUT_M_imag_d0;
wire   [5:0] fft_stage_228_U0_OUT_M_imag_address1;
wire    fft_stage_228_U0_OUT_M_imag_ce1;
wire    fft_stage_228_U0_OUT_M_imag_we1;
wire   [15:0] fft_stage_228_U0_OUT_M_imag_d1;
wire    fft_stage_228_U0_OUT_M_real_write;
wire    fft_stage_228_U0_OUT_M_imag_write;
wire    out_data_1_i_full_n;
wire    out_data_1_t_empty_n;
wire    out_data_2_i_full_n;
wire    out_data_2_t_empty_n;
wire    out_data_3_i_full_n;
wire    out_data_3_t_empty_n;
wire    out_data_4_i_full_n;
wire    out_data_4_t_empty_n;
wire    out_data_5_i_full_n;
wire    out_data_5_t_empty_n;
wire   [31:0] ctrl1_reg_c4_channel_dout;
wire    ctrl1_reg_c4_channel_empty_n;
wire   [15:0] ctrl1_reg_c3_channel_dout;
wire    ctrl1_reg_c3_channel_empty_n;
wire   [15:0] ctrl1_reg_c2_channel_dout;
wire    ctrl1_reg_c2_channel_empty_n;
wire   [15:0] ctrl1_reg_c1_channel_dout;
wire    ctrl1_reg_c1_channel_empty_n;
wire   [15:0] ctrl1_reg_c_channel_dout;
wire    ctrl1_reg_c_channel_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_ctrl1_reg_c4_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_1 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c3_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_2 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c2_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_3 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c1_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_4 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_5 = 1'b0;
end

fwd_fft_fft22_out_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage23_U0_OUT_r_address0),
    .i_ce0(fft_stage23_U0_OUT_r_ce0),
    .i_we0(fft_stage23_U0_OUT_r_we0),
    .i_d0(fft_stage23_U0_OUT_r_d0),
    .i_q0(out_data_1_i_q0),
    .i_address1(fft_stage23_U0_OUT_r_address1),
    .i_ce1(fft_stage23_U0_OUT_r_ce1),
    .i_we1(fft_stage23_U0_OUT_r_we1),
    .i_d1(fft_stage23_U0_OUT_r_d1),
    .i_q1(out_data_1_i_q1),
    .t_address0(fft_stage_11324_U0_IN_r_address0),
    .t_ce0(fft_stage_11324_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(out_data_1_t_q0),
    .t_address1(fft_stage_11324_U0_IN_r_address1),
    .t_ce1(fft_stage_11324_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(out_data_1_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_1_i_full_n),
    .i_write(ap_channel_done_out_data_1),
    .t_empty_n(out_data_1_t_empty_n),
    .t_read(fft_stage_11324_U0_ap_ready)
);

fwd_fft_fft22_out_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_11324_U0_OUT_r_address0),
    .i_ce0(fft_stage_11324_U0_OUT_r_ce0),
    .i_we0(fft_stage_11324_U0_OUT_r_we0),
    .i_d0(fft_stage_11324_U0_OUT_r_d0),
    .i_q0(out_data_2_i_q0),
    .i_address1(fft_stage_11324_U0_OUT_r_address1),
    .i_ce1(fft_stage_11324_U0_OUT_r_ce1),
    .i_we1(fft_stage_11324_U0_OUT_r_we1),
    .i_d1(fft_stage_11324_U0_OUT_r_d1),
    .i_q1(out_data_2_i_q1),
    .t_address0(fft_stage_11425_U0_IN_r_address0),
    .t_ce0(fft_stage_11425_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(out_data_2_t_q0),
    .t_address1(fft_stage_11425_U0_IN_r_address1),
    .t_ce1(fft_stage_11425_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(out_data_2_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_2_i_full_n),
    .i_write(ap_channel_done_out_data_2),
    .t_empty_n(out_data_2_t_empty_n),
    .t_read(fft_stage_11425_U0_ap_ready)
);

fwd_fft_fft22_out_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_11425_U0_OUT_r_address0),
    .i_ce0(fft_stage_11425_U0_OUT_r_ce0),
    .i_we0(fft_stage_11425_U0_OUT_r_we0),
    .i_d0(fft_stage_11425_U0_OUT_r_d0),
    .i_q0(out_data_3_i_q0),
    .i_address1(fft_stage_11425_U0_OUT_r_address1),
    .i_ce1(fft_stage_11425_U0_OUT_r_ce1),
    .i_we1(fft_stage_11425_U0_OUT_r_we1),
    .i_d1(fft_stage_11425_U0_OUT_r_d1),
    .i_q1(out_data_3_i_q1),
    .t_address0(fft_stage_11526_U0_IN_r_address0),
    .t_ce0(fft_stage_11526_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(out_data_3_t_q0),
    .t_address1(fft_stage_11526_U0_IN_r_address1),
    .t_ce1(fft_stage_11526_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(out_data_3_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_3_i_full_n),
    .i_write(ap_channel_done_out_data_3),
    .t_empty_n(out_data_3_t_empty_n),
    .t_read(fft_stage_11526_U0_ap_ready)
);

fwd_fft_fft22_out_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_11526_U0_OUT_r_address0),
    .i_ce0(fft_stage_11526_U0_OUT_r_ce0),
    .i_we0(fft_stage_11526_U0_OUT_r_we0),
    .i_d0(fft_stage_11526_U0_OUT_r_d0),
    .i_q0(out_data_4_i_q0),
    .i_address1(fft_stage_11526_U0_OUT_r_address1),
    .i_ce1(fft_stage_11526_U0_OUT_r_ce1),
    .i_we1(fft_stage_11526_U0_OUT_r_we1),
    .i_d1(fft_stage_11526_U0_OUT_r_d1),
    .i_q1(out_data_4_i_q1),
    .t_address0(fft_stage_11627_U0_IN_r_address0),
    .t_ce0(fft_stage_11627_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(out_data_4_t_q0),
    .t_address1(fft_stage_11627_U0_IN_r_address1),
    .t_ce1(fft_stage_11627_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(out_data_4_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_4_i_full_n),
    .i_write(ap_channel_done_out_data_4),
    .t_empty_n(out_data_4_t_empty_n),
    .t_read(fft_stage_11627_U0_ap_ready)
);

fwd_fft_fft22_out_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_11627_U0_OUT_r_address0),
    .i_ce0(fft_stage_11627_U0_OUT_r_ce0),
    .i_we0(fft_stage_11627_U0_OUT_r_we0),
    .i_d0(fft_stage_11627_U0_OUT_r_d0),
    .i_q0(out_data_5_i_q0),
    .i_address1(fft_stage_11627_U0_OUT_r_address1),
    .i_ce1(fft_stage_11627_U0_OUT_r_ce1),
    .i_we1(fft_stage_11627_U0_OUT_r_we1),
    .i_d1(fft_stage_11627_U0_OUT_r_d1),
    .i_q1(out_data_5_i_q1),
    .t_address0(fft_stage_228_U0_IN_r_address0),
    .t_ce0(fft_stage_228_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(out_data_5_t_q0),
    .t_address1(fft_stage_228_U0_IN_r_address1),
    .t_ce1(fft_stage_228_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(out_data_5_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_5_i_full_n),
    .i_write(ap_channel_done_out_data_5),
    .t_empty_n(out_data_5_t_empty_n),
    .t_read(fft_stage_228_U0_ap_ready)
);

fwd_fft_fft_stage23 fft_stage23_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage23_U0_ap_start),
    .ap_done(fft_stage23_U0_ap_done),
    .ap_continue(fft_stage23_U0_ap_continue),
    .ap_idle(fft_stage23_U0_ap_idle),
    .ap_ready(fft_stage23_U0_ap_ready),
    .IN_M_real_address0(fft_stage23_U0_IN_M_real_address0),
    .IN_M_real_ce0(fft_stage23_U0_IN_M_real_ce0),
    .IN_M_real_q0(input_data_M_real_q0),
    .IN_M_real_address1(fft_stage23_U0_IN_M_real_address1),
    .IN_M_real_ce1(fft_stage23_U0_IN_M_real_ce1),
    .IN_M_real_q1(input_data_M_real_q1),
    .IN_M_imag_address0(fft_stage23_U0_IN_M_imag_address0),
    .IN_M_imag_ce0(fft_stage23_U0_IN_M_imag_ce0),
    .IN_M_imag_q0(input_data_M_imag_q0),
    .IN_M_imag_address1(fft_stage23_U0_IN_M_imag_address1),
    .IN_M_imag_ce1(fft_stage23_U0_IN_M_imag_ce1),
    .IN_M_imag_q1(input_data_M_imag_q1),
    .OUT_r_address0(fft_stage23_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage23_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage23_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage23_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage23_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage23_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage23_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage23_U0_OUT_r_d1),
    .p_read(p_read),
    .ctrl1_reg_c5_din(fft_stage23_U0_ctrl1_reg_c5_din),
    .ctrl1_reg_c5_full_n(ctrl1_reg_c5_full_n),
    .ctrl1_reg_c5_write(fft_stage23_U0_ctrl1_reg_c5_write),
    .ap_return(fft_stage23_U0_ap_return)
);

fwd_fft_fft_stage_11324 fft_stage_11324_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_11324_U0_ap_start),
    .ap_done(fft_stage_11324_U0_ap_done),
    .ap_continue(fft_stage_11324_U0_ap_continue),
    .ap_idle(fft_stage_11324_U0_ap_idle),
    .ap_ready(fft_stage_11324_U0_ap_ready),
    .IN_r_address0(fft_stage_11324_U0_IN_r_address0),
    .IN_r_ce0(fft_stage_11324_U0_IN_r_ce0),
    .IN_r_q0(out_data_1_t_q0),
    .IN_r_address1(fft_stage_11324_U0_IN_r_address1),
    .IN_r_ce1(fft_stage_11324_U0_IN_r_ce1),
    .IN_r_q1(out_data_1_t_q1),
    .OUT_r_address0(fft_stage_11324_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage_11324_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage_11324_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage_11324_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage_11324_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage_11324_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage_11324_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage_11324_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c4_channel_dout),
    .ap_return(fft_stage_11324_U0_ap_return)
);

fwd_fft_fft_stage_11425 fft_stage_11425_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_11425_U0_ap_start),
    .ap_done(fft_stage_11425_U0_ap_done),
    .ap_continue(fft_stage_11425_U0_ap_continue),
    .ap_idle(fft_stage_11425_U0_ap_idle),
    .ap_ready(fft_stage_11425_U0_ap_ready),
    .IN_r_address0(fft_stage_11425_U0_IN_r_address0),
    .IN_r_ce0(fft_stage_11425_U0_IN_r_ce0),
    .IN_r_q0(out_data_2_t_q0),
    .IN_r_address1(fft_stage_11425_U0_IN_r_address1),
    .IN_r_ce1(fft_stage_11425_U0_IN_r_ce1),
    .IN_r_q1(out_data_2_t_q1),
    .OUT_r_address0(fft_stage_11425_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage_11425_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage_11425_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage_11425_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage_11425_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage_11425_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage_11425_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage_11425_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c3_channel_dout),
    .ap_return(fft_stage_11425_U0_ap_return)
);

fwd_fft_fft_stage_11526 fft_stage_11526_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_11526_U0_ap_start),
    .ap_done(fft_stage_11526_U0_ap_done),
    .ap_continue(fft_stage_11526_U0_ap_continue),
    .ap_idle(fft_stage_11526_U0_ap_idle),
    .ap_ready(fft_stage_11526_U0_ap_ready),
    .IN_r_address0(fft_stage_11526_U0_IN_r_address0),
    .IN_r_ce0(fft_stage_11526_U0_IN_r_ce0),
    .IN_r_q0(out_data_3_t_q0),
    .IN_r_address1(fft_stage_11526_U0_IN_r_address1),
    .IN_r_ce1(fft_stage_11526_U0_IN_r_ce1),
    .IN_r_q1(out_data_3_t_q1),
    .OUT_r_address0(fft_stage_11526_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage_11526_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage_11526_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage_11526_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage_11526_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage_11526_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage_11526_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage_11526_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c2_channel_dout),
    .ap_return(fft_stage_11526_U0_ap_return)
);

fwd_fft_fft_stage_11627 fft_stage_11627_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_11627_U0_ap_start),
    .ap_done(fft_stage_11627_U0_ap_done),
    .ap_continue(fft_stage_11627_U0_ap_continue),
    .ap_idle(fft_stage_11627_U0_ap_idle),
    .ap_ready(fft_stage_11627_U0_ap_ready),
    .IN_r_address0(fft_stage_11627_U0_IN_r_address0),
    .IN_r_ce0(fft_stage_11627_U0_IN_r_ce0),
    .IN_r_q0(out_data_4_t_q0),
    .IN_r_address1(fft_stage_11627_U0_IN_r_address1),
    .IN_r_ce1(fft_stage_11627_U0_IN_r_ce1),
    .IN_r_q1(out_data_4_t_q1),
    .OUT_r_address0(fft_stage_11627_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage_11627_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage_11627_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage_11627_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage_11627_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage_11627_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage_11627_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage_11627_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c1_channel_dout),
    .ap_return(fft_stage_11627_U0_ap_return)
);

fwd_fft_fft_stage_228 fft_stage_228_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_228_U0_ap_start),
    .ap_done(fft_stage_228_U0_ap_done),
    .ap_continue(fft_stage_228_U0_ap_continue),
    .ap_idle(fft_stage_228_U0_ap_idle),
    .ap_ready(fft_stage_228_U0_ap_ready),
    .IN_r_address0(fft_stage_228_U0_IN_r_address0),
    .IN_r_ce0(fft_stage_228_U0_IN_r_ce0),
    .IN_r_q0(out_data_5_t_q0),
    .IN_r_address1(fft_stage_228_U0_IN_r_address1),
    .IN_r_ce1(fft_stage_228_U0_IN_r_ce1),
    .IN_r_q1(out_data_5_t_q1),
    .OUT_M_real_address0(fft_stage_228_U0_OUT_M_real_address0),
    .OUT_M_real_ce0(fft_stage_228_U0_OUT_M_real_ce0),
    .OUT_M_real_we0(fft_stage_228_U0_OUT_M_real_we0),
    .OUT_M_real_d0(fft_stage_228_U0_OUT_M_real_d0),
    .OUT_M_real_address1(fft_stage_228_U0_OUT_M_real_address1),
    .OUT_M_real_ce1(fft_stage_228_U0_OUT_M_real_ce1),
    .OUT_M_real_we1(fft_stage_228_U0_OUT_M_real_we1),
    .OUT_M_real_d1(fft_stage_228_U0_OUT_M_real_d1),
    .OUT_M_imag_address0(fft_stage_228_U0_OUT_M_imag_address0),
    .OUT_M_imag_ce0(fft_stage_228_U0_OUT_M_imag_ce0),
    .OUT_M_imag_we0(fft_stage_228_U0_OUT_M_imag_we0),
    .OUT_M_imag_d0(fft_stage_228_U0_OUT_M_imag_d0),
    .OUT_M_imag_address1(fft_stage_228_U0_OUT_M_imag_address1),
    .OUT_M_imag_ce1(fft_stage_228_U0_OUT_M_imag_ce1),
    .OUT_M_imag_we1(fft_stage_228_U0_OUT_M_imag_we1),
    .OUT_M_imag_d1(fft_stage_228_U0_OUT_M_imag_d1),
    .p_read(ctrl1_reg_c_channel_dout)
);

fwd_fft_fifo_w32_d2_S ctrl1_reg_c4_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage23_U0_ap_return),
    .if_full_n(ctrl1_reg_c4_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c4_channel),
    .if_dout(ctrl1_reg_c4_channel_dout),
    .if_empty_n(ctrl1_reg_c4_channel_empty_n),
    .if_read(fft_stage_11324_U0_ap_ready)
);

fwd_fft_fifo_w16_d2_S ctrl1_reg_c3_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage_11324_U0_ap_return),
    .if_full_n(ctrl1_reg_c3_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c3_channel),
    .if_dout(ctrl1_reg_c3_channel_dout),
    .if_empty_n(ctrl1_reg_c3_channel_empty_n),
    .if_read(fft_stage_11425_U0_ap_ready)
);

fwd_fft_fifo_w16_d2_S ctrl1_reg_c2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage_11425_U0_ap_return),
    .if_full_n(ctrl1_reg_c2_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c2_channel),
    .if_dout(ctrl1_reg_c2_channel_dout),
    .if_empty_n(ctrl1_reg_c2_channel_empty_n),
    .if_read(fft_stage_11526_U0_ap_ready)
);

fwd_fft_fifo_w16_d2_S ctrl1_reg_c1_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage_11526_U0_ap_return),
    .if_full_n(ctrl1_reg_c1_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c1_channel),
    .if_dout(ctrl1_reg_c1_channel_dout),
    .if_empty_n(ctrl1_reg_c1_channel_empty_n),
    .if_read(fft_stage_11627_U0_ap_ready)
);

fwd_fft_fifo_w16_d2_S ctrl1_reg_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage_11627_U0_ap_return),
    .if_full_n(ctrl1_reg_c_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c_channel),
    .if_dout(ctrl1_reg_c_channel_dout),
    .if_empty_n(ctrl1_reg_c_channel_empty_n),
    .if_read(fft_stage_228_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c1_channel <= 1'b0;
    end else begin
        if (((fft_stage_11526_U0_ap_done & fft_stage_11526_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c1_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c1_channel <= ap_sync_channel_write_ctrl1_reg_c1_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c2_channel <= 1'b0;
    end else begin
        if (((fft_stage_11425_U0_ap_done & fft_stage_11425_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c2_channel <= ap_sync_channel_write_ctrl1_reg_c2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c3_channel <= 1'b0;
    end else begin
        if (((fft_stage_11324_U0_ap_done & fft_stage_11324_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c3_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c3_channel <= ap_sync_channel_write_ctrl1_reg_c3_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c4_channel <= 1'b0;
    end else begin
        if (((fft_stage23_U0_ap_done & fft_stage23_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c4_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c4_channel <= ap_sync_channel_write_ctrl1_reg_c4_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c_channel <= 1'b0;
    end else begin
        if (((fft_stage_11627_U0_ap_done & fft_stage_11627_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c_channel <= ap_sync_channel_write_ctrl1_reg_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_1 <= 1'b0;
    end else begin
        if (((fft_stage23_U0_ap_done & fft_stage23_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_1 <= ap_sync_channel_write_out_data_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_2 <= 1'b0;
    end else begin
        if (((fft_stage_11324_U0_ap_done & fft_stage_11324_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_2 <= ap_sync_channel_write_out_data_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_3 <= 1'b0;
    end else begin
        if (((fft_stage_11425_U0_ap_done & fft_stage_11425_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_3 <= ap_sync_channel_write_out_data_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_4 <= 1'b0;
    end else begin
        if (((fft_stage_11526_U0_ap_done & fft_stage_11526_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_4 <= ap_sync_channel_write_out_data_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_5 <= 1'b0;
    end else begin
        if (((fft_stage_11627_U0_ap_done & fft_stage_11627_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_5 <= ap_sync_channel_write_out_data_5;
        end
    end
end

assign ap_channel_done_ctrl1_reg_c1_channel = (fft_stage_11526_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c1_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c2_channel = (fft_stage_11425_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c2_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c3_channel = (fft_stage_11324_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c3_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c4_channel = (fft_stage23_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c4_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c_channel = (fft_stage_11627_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c_channel ^ 1'b1));

assign ap_channel_done_out_data_1 = (fft_stage23_U0_ap_done & (ap_sync_reg_channel_write_out_data_1 ^ 1'b1));

assign ap_channel_done_out_data_2 = (fft_stage_11324_U0_ap_done & (ap_sync_reg_channel_write_out_data_2 ^ 1'b1));

assign ap_channel_done_out_data_3 = (fft_stage_11425_U0_ap_done & (ap_sync_reg_channel_write_out_data_3 ^ 1'b1));

assign ap_channel_done_out_data_4 = (fft_stage_11526_U0_ap_done & (ap_sync_reg_channel_write_out_data_4 ^ 1'b1));

assign ap_channel_done_out_data_5 = (fft_stage_11627_U0_ap_done & (ap_sync_reg_channel_write_out_data_5 ^ 1'b1));

assign ap_done = fft_stage_228_U0_ap_done;

assign ap_idle = (fft_stage_228_U0_ap_idle & fft_stage_11627_U0_ap_idle & fft_stage_11526_U0_ap_idle & fft_stage_11425_U0_ap_idle & fft_stage_11324_U0_ap_idle & fft_stage23_U0_ap_idle & (ctrl1_reg_c_channel_empty_n ^ 1'b1) & (ctrl1_reg_c1_channel_empty_n ^ 1'b1) & (ctrl1_reg_c2_channel_empty_n ^ 1'b1) & (ctrl1_reg_c3_channel_empty_n ^ 1'b1) & (ctrl1_reg_c4_channel_empty_n ^ 1'b1) & (out_data_5_t_empty_n ^ 1'b1) & (out_data_4_t_empty_n ^ 1'b1) & (out_data_3_t_empty_n ^ 1'b1) & (out_data_2_t_empty_n ^ 1'b1) & (out_data_1_t_empty_n ^ 1'b1));

assign ap_ready = fft_stage23_U0_ap_ready;

assign ap_sync_channel_write_ctrl1_reg_c1_channel = ((ctrl1_reg_c1_channel_full_n & ap_channel_done_ctrl1_reg_c1_channel) | ap_sync_reg_channel_write_ctrl1_reg_c1_channel);

assign ap_sync_channel_write_ctrl1_reg_c2_channel = ((ctrl1_reg_c2_channel_full_n & ap_channel_done_ctrl1_reg_c2_channel) | ap_sync_reg_channel_write_ctrl1_reg_c2_channel);

assign ap_sync_channel_write_ctrl1_reg_c3_channel = ((ctrl1_reg_c3_channel_full_n & ap_channel_done_ctrl1_reg_c3_channel) | ap_sync_reg_channel_write_ctrl1_reg_c3_channel);

assign ap_sync_channel_write_ctrl1_reg_c4_channel = ((ctrl1_reg_c4_channel_full_n & ap_channel_done_ctrl1_reg_c4_channel) | ap_sync_reg_channel_write_ctrl1_reg_c4_channel);

assign ap_sync_channel_write_ctrl1_reg_c_channel = ((ctrl1_reg_c_channel_full_n & ap_channel_done_ctrl1_reg_c_channel) | ap_sync_reg_channel_write_ctrl1_reg_c_channel);

assign ap_sync_channel_write_out_data_1 = ((fft_stage23_U0_OUT_r_full_n & ap_channel_done_out_data_1) | ap_sync_reg_channel_write_out_data_1);

assign ap_sync_channel_write_out_data_2 = ((fft_stage_11324_U0_OUT_r_full_n & ap_channel_done_out_data_2) | ap_sync_reg_channel_write_out_data_2);

assign ap_sync_channel_write_out_data_3 = ((fft_stage_11425_U0_OUT_r_full_n & ap_channel_done_out_data_3) | ap_sync_reg_channel_write_out_data_3);

assign ap_sync_channel_write_out_data_4 = ((fft_stage_11526_U0_OUT_r_full_n & ap_channel_done_out_data_4) | ap_sync_reg_channel_write_out_data_4);

assign ap_sync_channel_write_out_data_5 = ((fft_stage_11627_U0_OUT_r_full_n & ap_channel_done_out_data_5) | ap_sync_reg_channel_write_out_data_5);

assign ctrl1_reg_c5_din = fft_stage23_U0_ctrl1_reg_c5_din;

assign ctrl1_reg_c5_write = fft_stage23_U0_ctrl1_reg_c5_write;

assign fft_stage23_U0_IN_M_imag_write = 1'b0;

assign fft_stage23_U0_IN_M_real_write = 1'b0;

assign fft_stage23_U0_OUT_r_full_n = out_data_1_i_full_n;

assign fft_stage23_U0_ap_continue = (ap_sync_channel_write_out_data_1 & ap_sync_channel_write_ctrl1_reg_c4_channel);

assign fft_stage23_U0_ap_start = ap_start;

assign fft_stage_11324_U0_OUT_r_full_n = out_data_2_i_full_n;

assign fft_stage_11324_U0_ap_continue = (ap_sync_channel_write_out_data_2 & ap_sync_channel_write_ctrl1_reg_c3_channel);

assign fft_stage_11324_U0_ap_start = (out_data_1_t_empty_n & ctrl1_reg_c4_channel_empty_n);

assign fft_stage_11425_U0_OUT_r_full_n = out_data_3_i_full_n;

assign fft_stage_11425_U0_ap_continue = (ap_sync_channel_write_out_data_3 & ap_sync_channel_write_ctrl1_reg_c2_channel);

assign fft_stage_11425_U0_ap_start = (out_data_2_t_empty_n & ctrl1_reg_c3_channel_empty_n);

assign fft_stage_11526_U0_OUT_r_full_n = out_data_4_i_full_n;

assign fft_stage_11526_U0_ap_continue = (ap_sync_channel_write_out_data_4 & ap_sync_channel_write_ctrl1_reg_c1_channel);

assign fft_stage_11526_U0_ap_start = (out_data_3_t_empty_n & ctrl1_reg_c2_channel_empty_n);

assign fft_stage_11627_U0_OUT_r_full_n = out_data_5_i_full_n;

assign fft_stage_11627_U0_ap_continue = (ap_sync_channel_write_out_data_5 & ap_sync_channel_write_ctrl1_reg_c_channel);

assign fft_stage_11627_U0_ap_start = (out_data_4_t_empty_n & ctrl1_reg_c1_channel_empty_n);

assign fft_stage_228_U0_OUT_M_imag_write = 1'b0;

assign fft_stage_228_U0_OUT_M_real_write = 1'b0;

assign fft_stage_228_U0_ap_continue = ap_continue;

assign fft_stage_228_U0_ap_start = (out_data_5_t_empty_n & ctrl1_reg_c_channel_empty_n);

assign input_data_M_imag_address0 = fft_stage23_U0_IN_M_imag_address0;

assign input_data_M_imag_address1 = fft_stage23_U0_IN_M_imag_address1;

assign input_data_M_imag_ce0 = fft_stage23_U0_IN_M_imag_ce0;

assign input_data_M_imag_ce1 = fft_stage23_U0_IN_M_imag_ce1;

assign input_data_M_imag_d0 = 16'd0;

assign input_data_M_imag_d1 = 16'd0;

assign input_data_M_imag_read = fft_stage23_U0_IN_M_imag_write;

assign input_data_M_imag_we0 = 1'b0;

assign input_data_M_imag_we1 = 1'b0;

assign input_data_M_real_address0 = fft_stage23_U0_IN_M_real_address0;

assign input_data_M_real_address1 = fft_stage23_U0_IN_M_real_address1;

assign input_data_M_real_ce0 = fft_stage23_U0_IN_M_real_ce0;

assign input_data_M_real_ce1 = fft_stage23_U0_IN_M_real_ce1;

assign input_data_M_real_d0 = 16'd0;

assign input_data_M_real_d1 = 16'd0;

assign input_data_M_real_read = fft_stage23_U0_IN_M_real_write;

assign input_data_M_real_we0 = 1'b0;

assign input_data_M_real_we1 = 1'b0;

assign out_data_6_M_imag_address0 = fft_stage_228_U0_OUT_M_imag_address0;

assign out_data_6_M_imag_address1 = fft_stage_228_U0_OUT_M_imag_address1;

assign out_data_6_M_imag_ce0 = fft_stage_228_U0_OUT_M_imag_ce0;

assign out_data_6_M_imag_ce1 = fft_stage_228_U0_OUT_M_imag_ce1;

assign out_data_6_M_imag_d0 = fft_stage_228_U0_OUT_M_imag_d0;

assign out_data_6_M_imag_d1 = fft_stage_228_U0_OUT_M_imag_d1;

assign out_data_6_M_imag_we0 = fft_stage_228_U0_OUT_M_imag_we0;

assign out_data_6_M_imag_we1 = fft_stage_228_U0_OUT_M_imag_we1;

assign out_data_6_M_imag_write = fft_stage_228_U0_OUT_M_imag_write;

assign out_data_6_M_real_address0 = fft_stage_228_U0_OUT_M_real_address0;

assign out_data_6_M_real_address1 = fft_stage_228_U0_OUT_M_real_address1;

assign out_data_6_M_real_ce0 = fft_stage_228_U0_OUT_M_real_ce0;

assign out_data_6_M_real_ce1 = fft_stage_228_U0_OUT_M_real_ce1;

assign out_data_6_M_real_d0 = fft_stage_228_U0_OUT_M_real_d0;

assign out_data_6_M_real_d1 = fft_stage_228_U0_OUT_M_real_d1;

assign out_data_6_M_real_we0 = fft_stage_228_U0_OUT_M_real_we0;

assign out_data_6_M_real_we1 = fft_stage_228_U0_OUT_M_real_we1;

assign out_data_6_M_real_write = fft_stage_228_U0_OUT_M_real_write;

endmodule //fwd_fft_fft22
