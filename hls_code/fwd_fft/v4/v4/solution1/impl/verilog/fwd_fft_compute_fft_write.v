// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fwd_fft_compute_fft_write (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        c_fft_col_op_st_din,
        c_fft_col_op_st_full_n,
        c_fft_col_op_st_write,
        p_read
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] c_fft_col_op_st_din;
input   c_fft_col_op_st_full_n;
output   c_fft_col_op_st_write;
input  [7:0] p_read;

reg ap_idle;
reg c_fft_col_op_st_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1057_fu_176_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    c_fft_col_op_st_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1035_fu_227_p2;
reg   [0:0] icmp_ln1035_reg_826;
reg   [0:0] icmp_ln1035_reg_826_pp0_iter2_reg;
reg   [0:0] icmp_ln1035_reg_826_pp0_iter3_reg;
wire   [0:0] p_Result_14_fu_233_p3;
reg   [0:0] p_Result_14_reg_831;
reg   [0:0] p_Result_14_reg_831_pp0_iter2_reg;
reg   [0:0] p_Result_14_reg_831_pp0_iter3_reg;
wire   [15:0] tmp_V_4_fu_247_p3;
reg   [15:0] tmp_V_4_reg_836;
reg   [15:0] tmp_V_4_reg_836_pp0_iter2_reg;
reg   [15:0] p_Result_s_fu_255_p4;
reg   [15:0] p_Result_s_reg_844;
wire   [0:0] icmp_ln1035_1_fu_265_p2;
reg   [0:0] icmp_ln1035_1_reg_849;
reg   [0:0] icmp_ln1035_1_reg_849_pp0_iter2_reg;
reg   [0:0] icmp_ln1035_1_reg_849_pp0_iter3_reg;
wire   [0:0] p_Result_17_fu_271_p3;
reg   [0:0] p_Result_17_reg_854;
reg   [0:0] p_Result_17_reg_854_pp0_iter2_reg;
reg   [0:0] p_Result_17_reg_854_pp0_iter3_reg;
wire   [15:0] tmp_V_5_fu_285_p3;
reg   [15:0] tmp_V_5_reg_859;
reg   [15:0] tmp_V_5_reg_859_pp0_iter2_reg;
reg   [15:0] p_Result_8_fu_293_p4;
reg   [15:0] p_Result_8_reg_867;
wire   [31:0] sub_ln1044_fu_318_p2;
reg   [31:0] sub_ln1044_reg_872;
wire   [15:0] trunc_ln1044_fu_324_p1;
reg   [15:0] trunc_ln1044_reg_878;
wire   [31:0] lsb_index_fu_328_p2;
reg   [31:0] lsb_index_reg_883;
reg   [30:0] tmp_4_reg_889;
wire   [0:0] icmp_ln1047_fu_369_p2;
reg   [0:0] icmp_ln1047_reg_894;
wire   [4:0] trunc_ln1043_fu_375_p1;
reg   [4:0] trunc_ln1043_reg_899;
reg   [4:0] trunc_ln1043_reg_899_pp0_iter3_reg;
wire   [31:0] sub_ln1044_1_fu_394_p2;
reg   [31:0] sub_ln1044_1_reg_904;
wire   [15:0] trunc_ln1044_1_fu_400_p1;
reg   [15:0] trunc_ln1044_1_reg_910;
wire   [31:0] lsb_index_1_fu_404_p2;
reg   [31:0] lsb_index_1_reg_915;
reg   [30:0] tmp_8_reg_921;
wire   [0:0] icmp_ln1047_1_fu_445_p2;
reg   [0:0] icmp_ln1047_1_reg_926;
wire   [4:0] trunc_ln1043_1_fu_451_p1;
reg   [4:0] trunc_ln1043_1_reg_931;
reg   [4:0] trunc_ln1043_1_reg_931_pp0_iter3_reg;
reg   [14:0] m_8_reg_936;
wire   [4:0] select_ln1043_fu_575_p3;
reg   [4:0] select_ln1043_reg_941;
reg   [14:0] m_reg_946;
wire   [4:0] select_ln1043_1_fu_703_p3;
reg   [4:0] select_ln1043_1_reg_951;
wire   [5:0] out_fft_M_real_V_address0;
reg    out_fft_M_real_V_ce0;
wire   [15:0] out_fft_M_real_V_q0;
wire   [5:0] out_fft_M_imag_V_address0;
reg    out_fft_M_imag_V_ce0;
wire   [15:0] out_fft_M_imag_V_q0;
wire   [63:0] zext_ln1057_fu_205_p1;
reg   [7:0] y_fu_98;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_y_load;
wire   [7:0] add_ln222_fu_211_p2;
reg   [15:0] indvar_flatten_fu_102;
reg   [15:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [15:0] add_ln1057_fu_182_p2;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] bound_fu_157_p0;
wire   [15:0] cast_fu_153_p1;
wire   [7:0] bound_fu_157_p1;
wire   [15:0] bound_fu_157_p2;
wire   [0:0] icmp_ln1057_3_fu_191_p2;
wire   [7:0] select_ln202_fu_197_p3;
wire   [15:0] tmp_V_fu_241_p2;
wire   [15:0] tmp_V_2_fu_279_p2;
wire   [31:0] p_Result_15_fu_303_p3;
reg   [31:0] l_fu_310_p3;
wire   [4:0] trunc_ln1047_fu_344_p1;
wire   [4:0] sub_ln1047_fu_348_p2;
wire   [15:0] zext_ln1047_fu_354_p1;
wire   [15:0] lshr_ln1047_fu_358_p2;
wire   [15:0] p_Result_4_fu_364_p2;
wire   [31:0] p_Result_18_fu_379_p3;
reg   [31:0] l_1_fu_386_p3;
wire   [4:0] trunc_ln1047_1_fu_420_p1;
wire   [4:0] sub_ln1047_1_fu_424_p2;
wire   [15:0] zext_ln1047_1_fu_430_p1;
wire   [15:0] lshr_ln1047_1_fu_434_p2;
wire   [15:0] p_Result_10_fu_440_p2;
wire   [0:0] tmp_5_fu_460_p3;
wire   [0:0] icmp_ln1046_fu_455_p2;
wire   [15:0] add_ln1049_fu_478_p2;
wire   [0:0] p_Result_3_fu_483_p3;
wire   [0:0] and_ln1046_fu_473_p2;
wire   [0:0] or_ln1061_fu_490_p2;
wire   [0:0] xor_ln1049_fu_467_p2;
wire   [0:0] and_ln1061_fu_496_p2;
wire   [31:0] add_ln1058_fu_515_p2;
wire   [15:0] add_ln1058cast_fu_520_p1;
wire   [31:0] sub_ln1059_fu_529_p2;
wire   [15:0] sub_ln1059cast_fu_534_p1;
wire   [0:0] icmp_ln1058_fu_510_p2;
wire   [15:0] lshr_ln1058_fu_524_p2;
wire   [15:0] shl_ln1059_fu_538_p2;
wire   [15:0] or_ln_fu_502_p3;
wire   [15:0] m_2_fu_543_p3;
wire   [15:0] m_3_fu_551_p2;
wire   [0:0] p_Result_5_fu_567_p3;
wire   [0:0] tmp_9_fu_588_p3;
wire   [0:0] icmp_ln1046_1_fu_583_p2;
wire   [15:0] add_ln1049_1_fu_606_p2;
wire   [0:0] p_Result_11_fu_611_p3;
wire   [0:0] and_ln1046_1_fu_601_p2;
wire   [0:0] or_ln1061_2_fu_618_p2;
wire   [0:0] xor_ln1049_1_fu_595_p2;
wire   [0:0] and_ln1061_1_fu_624_p2;
wire   [31:0] add_ln1058_1_fu_643_p2;
wire   [15:0] add_ln1058_1cast_fu_648_p1;
wire   [31:0] sub_ln1059_1_fu_657_p2;
wire   [15:0] sub_ln1059_1cast_fu_662_p1;
wire   [0:0] icmp_ln1058_1_fu_638_p2;
wire   [15:0] lshr_ln1058_1_fu_652_p2;
wire   [15:0] shl_ln1059_1_fu_666_p2;
wire   [15:0] or_ln1061_1_fu_630_p3;
wire   [15:0] m_4_fu_671_p3;
wire   [15:0] m_5_fu_679_p2;
wire   [0:0] p_Result_12_fu_695_p3;
wire   [4:0] sub_ln1064_fu_714_p2;
wire   [4:0] add_ln1064_fu_719_p2;
wire   [15:0] zext_ln1062_fu_711_p1;
wire   [5:0] tmp_s_fu_724_p3;
wire   [4:0] sub_ln1064_1_fu_746_p2;
wire   [4:0] add_ln1064_1_fu_751_p2;
wire   [15:0] zext_ln1062_1_fu_743_p1;
wire   [5:0] tmp_2_fu_756_p3;
wire   [15:0] p_Result_16_fu_731_p5;
wire   [15:0] p_Result_19_fu_763_p5;
wire   [15:0] select_ln174_1_fu_782_p3;
wire   [15:0] select_ln174_fu_775_p3;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_193;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fwd_fft_VITIS_LOOP_184_8_proc_out_fft_M_imag_V #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_fft_M_real_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_fft_M_real_V_address0),
    .ce0(out_fft_M_real_V_ce0),
    .q0(out_fft_M_real_V_q0)
);

fwd_fft_VITIS_LOOP_184_8_proc_out_fft_M_imag_V #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_fft_M_imag_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_fft_M_imag_V_address0),
    .ce0(out_fft_M_imag_V_ce0),
    .q0(out_fft_M_imag_V_q0)
);

fwd_fft_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U110(
    .din0(bound_fu_157_p0),
    .din1(bound_fu_157_p1),
    .dout(bound_fu_157_p2)
);

fwd_fft_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_193)) begin
        if ((icmp_ln1057_fu_176_p2 == 1'd0)) begin
            indvar_flatten_fu_102 <= add_ln1057_fu_182_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_102 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_193)) begin
        if ((icmp_ln1057_fu_176_p2 == 1'd0)) begin
            y_fu_98 <= add_ln222_fu_211_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            y_fu_98 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln1035_1_reg_849 <= icmp_ln1035_1_fu_265_p2;
        icmp_ln1035_reg_826 <= icmp_ln1035_fu_227_p2;
        p_Result_14_reg_831 <= out_fft_M_real_V_q0[32'd15];
        p_Result_17_reg_854 <= out_fft_M_imag_V_q0[32'd15];
        p_Result_8_reg_867 <= p_Result_8_fu_293_p4;
        p_Result_s_reg_844 <= p_Result_s_fu_255_p4;
        tmp_V_4_reg_836 <= tmp_V_4_fu_247_p3;
        tmp_V_5_reg_859 <= tmp_V_5_fu_285_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln1035_1_reg_849_pp0_iter2_reg <= icmp_ln1035_1_reg_849;
        icmp_ln1035_1_reg_849_pp0_iter3_reg <= icmp_ln1035_1_reg_849_pp0_iter2_reg;
        icmp_ln1035_reg_826_pp0_iter2_reg <= icmp_ln1035_reg_826;
        icmp_ln1035_reg_826_pp0_iter3_reg <= icmp_ln1035_reg_826_pp0_iter2_reg;
        p_Result_14_reg_831_pp0_iter2_reg <= p_Result_14_reg_831;
        p_Result_14_reg_831_pp0_iter3_reg <= p_Result_14_reg_831_pp0_iter2_reg;
        p_Result_17_reg_854_pp0_iter2_reg <= p_Result_17_reg_854;
        p_Result_17_reg_854_pp0_iter3_reg <= p_Result_17_reg_854_pp0_iter2_reg;
        tmp_V_4_reg_836_pp0_iter2_reg <= tmp_V_4_reg_836;
        tmp_V_5_reg_859_pp0_iter2_reg <= tmp_V_5_reg_859;
        trunc_ln1043_1_reg_931_pp0_iter3_reg <= trunc_ln1043_1_reg_931;
        trunc_ln1043_reg_899_pp0_iter3_reg <= trunc_ln1043_reg_899;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1035_1_reg_849 == 1'd0))) begin
        icmp_ln1047_1_reg_926 <= icmp_ln1047_1_fu_445_p2;
        lsb_index_1_reg_915 <= lsb_index_1_fu_404_p2;
        sub_ln1044_1_reg_904 <= sub_ln1044_1_fu_394_p2;
        tmp_8_reg_921 <= {{lsb_index_1_fu_404_p2[31:1]}};
        trunc_ln1043_1_reg_931 <= trunc_ln1043_1_fu_451_p1;
        trunc_ln1044_1_reg_910 <= trunc_ln1044_1_fu_400_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1035_reg_826 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1047_reg_894 <= icmp_ln1047_fu_369_p2;
        lsb_index_reg_883 <= lsb_index_fu_328_p2;
        sub_ln1044_reg_872 <= sub_ln1044_fu_318_p2;
        tmp_4_reg_889 <= {{lsb_index_fu_328_p2[31:1]}};
        trunc_ln1043_reg_899 <= trunc_ln1043_fu_375_p1;
        trunc_ln1044_reg_878 <= trunc_ln1044_fu_324_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1035_reg_826_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_8_reg_936 <= {{m_3_fu_551_p2[15:1]}};
        select_ln1043_reg_941[0] <= select_ln1043_fu_575_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1035_1_reg_849_pp0_iter2_reg == 1'd0))) begin
        m_reg_946 <= {{m_5_fu_679_p2[15:1]}};
        select_ln1043_1_reg_951[0] <= select_ln1043_1_fu_703_p3[0];
    end
end

always @ (*) begin
    if (((icmp_ln1057_fu_176_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_y_load = 8'd0;
    end else begin
        ap_sig_allocacmp_y_load = y_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        c_fft_col_op_st_blk_n = c_fft_col_op_st_full_n;
    end else begin
        c_fft_col_op_st_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        c_fft_col_op_st_write = 1'b1;
    end else begin
        c_fft_col_op_st_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_fft_M_imag_V_ce0 = 1'b1;
    end else begin
        out_fft_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_fft_M_real_V_ce0 = 1'b1;
    end else begin
        out_fft_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1049_1_fu_606_p2 = ($signed(trunc_ln1044_1_reg_910) + $signed(16'd65525));

assign add_ln1049_fu_478_p2 = ($signed(trunc_ln1044_reg_878) + $signed(16'd65525));

assign add_ln1057_fu_182_p2 = (ap_sig_allocacmp_indvar_flatten_load + 16'd1);

assign add_ln1058_1_fu_643_p2 = ($signed(sub_ln1044_1_reg_904) + $signed(32'd4294967284));

assign add_ln1058_1cast_fu_648_p1 = add_ln1058_1_fu_643_p2[15:0];

assign add_ln1058_fu_515_p2 = ($signed(sub_ln1044_reg_872) + $signed(32'd4294967284));

assign add_ln1058cast_fu_520_p1 = add_ln1058_fu_515_p2[15:0];

assign add_ln1064_1_fu_751_p2 = (sub_ln1064_1_fu_746_p2 + select_ln1043_1_reg_951);

assign add_ln1064_fu_719_p2 = (sub_ln1064_fu_714_p2 + select_ln1043_reg_941);

assign add_ln222_fu_211_p2 = (select_ln202_fu_197_p3 + 8'd1);

assign and_ln1046_1_fu_601_p2 = (icmp_ln1047_1_reg_926 & icmp_ln1046_1_fu_583_p2);

assign and_ln1046_fu_473_p2 = (icmp_ln1047_reg_894 & icmp_ln1046_fu_455_p2);

assign and_ln1061_1_fu_624_p2 = (xor_ln1049_1_fu_595_p2 & or_ln1061_2_fu_618_p2);

assign and_ln1061_fu_496_p2 = (xor_ln1049_fu_467_p2 & or_ln1061_fu_490_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((c_fft_col_op_st_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((c_fft_col_op_st_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((c_fft_col_op_st_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = (c_fft_col_op_st_full_n == 1'b0);
end

always @ (*) begin
    ap_condition_193 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bound_fu_157_p0 = cast_fu_153_p1;

assign bound_fu_157_p1 = cast_fu_153_p1;

assign c_fft_col_op_st_din = {{select_ln174_1_fu_782_p3}, {select_ln174_fu_775_p3}};

assign cast_fu_153_p1 = p_read;

assign icmp_ln1035_1_fu_265_p2 = ((out_fft_M_imag_V_q0 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1035_fu_227_p2 = ((out_fft_M_real_V_q0 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1046_1_fu_583_p2 = (($signed(tmp_8_reg_921) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1046_fu_455_p2 = (($signed(tmp_4_reg_889) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1047_1_fu_445_p2 = ((p_Result_10_fu_440_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1047_fu_369_p2 = ((p_Result_4_fu_364_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1057_3_fu_191_p2 = ((ap_sig_allocacmp_y_load == p_read) ? 1'b1 : 1'b0);

assign icmp_ln1057_fu_176_p2 = ((ap_sig_allocacmp_indvar_flatten_load == bound_fu_157_p2) ? 1'b1 : 1'b0);

assign icmp_ln1058_1_fu_638_p2 = (($signed(lsb_index_1_reg_915) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1058_fu_510_p2 = (($signed(lsb_index_reg_883) > $signed(32'd0)) ? 1'b1 : 1'b0);


always @ (p_Result_18_fu_379_p3) begin
    if (p_Result_18_fu_379_p3[0] == 1'b1) begin
        l_1_fu_386_p3 = 32'd0;
    end else if (p_Result_18_fu_379_p3[1] == 1'b1) begin
        l_1_fu_386_p3 = 32'd1;
    end else if (p_Result_18_fu_379_p3[2] == 1'b1) begin
        l_1_fu_386_p3 = 32'd2;
    end else if (p_Result_18_fu_379_p3[3] == 1'b1) begin
        l_1_fu_386_p3 = 32'd3;
    end else if (p_Result_18_fu_379_p3[4] == 1'b1) begin
        l_1_fu_386_p3 = 32'd4;
    end else if (p_Result_18_fu_379_p3[5] == 1'b1) begin
        l_1_fu_386_p3 = 32'd5;
    end else if (p_Result_18_fu_379_p3[6] == 1'b1) begin
        l_1_fu_386_p3 = 32'd6;
    end else if (p_Result_18_fu_379_p3[7] == 1'b1) begin
        l_1_fu_386_p3 = 32'd7;
    end else if (p_Result_18_fu_379_p3[8] == 1'b1) begin
        l_1_fu_386_p3 = 32'd8;
    end else if (p_Result_18_fu_379_p3[9] == 1'b1) begin
        l_1_fu_386_p3 = 32'd9;
    end else if (p_Result_18_fu_379_p3[10] == 1'b1) begin
        l_1_fu_386_p3 = 32'd10;
    end else if (p_Result_18_fu_379_p3[11] == 1'b1) begin
        l_1_fu_386_p3 = 32'd11;
    end else if (p_Result_18_fu_379_p3[12] == 1'b1) begin
        l_1_fu_386_p3 = 32'd12;
    end else if (p_Result_18_fu_379_p3[13] == 1'b1) begin
        l_1_fu_386_p3 = 32'd13;
    end else if (p_Result_18_fu_379_p3[14] == 1'b1) begin
        l_1_fu_386_p3 = 32'd14;
    end else if (p_Result_18_fu_379_p3[15] == 1'b1) begin
        l_1_fu_386_p3 = 32'd15;
    end else if (p_Result_18_fu_379_p3[16] == 1'b1) begin
        l_1_fu_386_p3 = 32'd16;
    end else if (p_Result_18_fu_379_p3[17] == 1'b1) begin
        l_1_fu_386_p3 = 32'd17;
    end else if (p_Result_18_fu_379_p3[18] == 1'b1) begin
        l_1_fu_386_p3 = 32'd18;
    end else if (p_Result_18_fu_379_p3[19] == 1'b1) begin
        l_1_fu_386_p3 = 32'd19;
    end else if (p_Result_18_fu_379_p3[20] == 1'b1) begin
        l_1_fu_386_p3 = 32'd20;
    end else if (p_Result_18_fu_379_p3[21] == 1'b1) begin
        l_1_fu_386_p3 = 32'd21;
    end else if (p_Result_18_fu_379_p3[22] == 1'b1) begin
        l_1_fu_386_p3 = 32'd22;
    end else if (p_Result_18_fu_379_p3[23] == 1'b1) begin
        l_1_fu_386_p3 = 32'd23;
    end else if (p_Result_18_fu_379_p3[24] == 1'b1) begin
        l_1_fu_386_p3 = 32'd24;
    end else if (p_Result_18_fu_379_p3[25] == 1'b1) begin
        l_1_fu_386_p3 = 32'd25;
    end else if (p_Result_18_fu_379_p3[26] == 1'b1) begin
        l_1_fu_386_p3 = 32'd26;
    end else if (p_Result_18_fu_379_p3[27] == 1'b1) begin
        l_1_fu_386_p3 = 32'd27;
    end else if (p_Result_18_fu_379_p3[28] == 1'b1) begin
        l_1_fu_386_p3 = 32'd28;
    end else if (p_Result_18_fu_379_p3[29] == 1'b1) begin
        l_1_fu_386_p3 = 32'd29;
    end else if (p_Result_18_fu_379_p3[30] == 1'b1) begin
        l_1_fu_386_p3 = 32'd30;
    end else if (p_Result_18_fu_379_p3[31] == 1'b1) begin
        l_1_fu_386_p3 = 32'd31;
    end else begin
        l_1_fu_386_p3 = 32'd32;
    end
end


always @ (p_Result_15_fu_303_p3) begin
    if (p_Result_15_fu_303_p3[0] == 1'b1) begin
        l_fu_310_p3 = 32'd0;
    end else if (p_Result_15_fu_303_p3[1] == 1'b1) begin
        l_fu_310_p3 = 32'd1;
    end else if (p_Result_15_fu_303_p3[2] == 1'b1) begin
        l_fu_310_p3 = 32'd2;
    end else if (p_Result_15_fu_303_p3[3] == 1'b1) begin
        l_fu_310_p3 = 32'd3;
    end else if (p_Result_15_fu_303_p3[4] == 1'b1) begin
        l_fu_310_p3 = 32'd4;
    end else if (p_Result_15_fu_303_p3[5] == 1'b1) begin
        l_fu_310_p3 = 32'd5;
    end else if (p_Result_15_fu_303_p3[6] == 1'b1) begin
        l_fu_310_p3 = 32'd6;
    end else if (p_Result_15_fu_303_p3[7] == 1'b1) begin
        l_fu_310_p3 = 32'd7;
    end else if (p_Result_15_fu_303_p3[8] == 1'b1) begin
        l_fu_310_p3 = 32'd8;
    end else if (p_Result_15_fu_303_p3[9] == 1'b1) begin
        l_fu_310_p3 = 32'd9;
    end else if (p_Result_15_fu_303_p3[10] == 1'b1) begin
        l_fu_310_p3 = 32'd10;
    end else if (p_Result_15_fu_303_p3[11] == 1'b1) begin
        l_fu_310_p3 = 32'd11;
    end else if (p_Result_15_fu_303_p3[12] == 1'b1) begin
        l_fu_310_p3 = 32'd12;
    end else if (p_Result_15_fu_303_p3[13] == 1'b1) begin
        l_fu_310_p3 = 32'd13;
    end else if (p_Result_15_fu_303_p3[14] == 1'b1) begin
        l_fu_310_p3 = 32'd14;
    end else if (p_Result_15_fu_303_p3[15] == 1'b1) begin
        l_fu_310_p3 = 32'd15;
    end else if (p_Result_15_fu_303_p3[16] == 1'b1) begin
        l_fu_310_p3 = 32'd16;
    end else if (p_Result_15_fu_303_p3[17] == 1'b1) begin
        l_fu_310_p3 = 32'd17;
    end else if (p_Result_15_fu_303_p3[18] == 1'b1) begin
        l_fu_310_p3 = 32'd18;
    end else if (p_Result_15_fu_303_p3[19] == 1'b1) begin
        l_fu_310_p3 = 32'd19;
    end else if (p_Result_15_fu_303_p3[20] == 1'b1) begin
        l_fu_310_p3 = 32'd20;
    end else if (p_Result_15_fu_303_p3[21] == 1'b1) begin
        l_fu_310_p3 = 32'd21;
    end else if (p_Result_15_fu_303_p3[22] == 1'b1) begin
        l_fu_310_p3 = 32'd22;
    end else if (p_Result_15_fu_303_p3[23] == 1'b1) begin
        l_fu_310_p3 = 32'd23;
    end else if (p_Result_15_fu_303_p3[24] == 1'b1) begin
        l_fu_310_p3 = 32'd24;
    end else if (p_Result_15_fu_303_p3[25] == 1'b1) begin
        l_fu_310_p3 = 32'd25;
    end else if (p_Result_15_fu_303_p3[26] == 1'b1) begin
        l_fu_310_p3 = 32'd26;
    end else if (p_Result_15_fu_303_p3[27] == 1'b1) begin
        l_fu_310_p3 = 32'd27;
    end else if (p_Result_15_fu_303_p3[28] == 1'b1) begin
        l_fu_310_p3 = 32'd28;
    end else if (p_Result_15_fu_303_p3[29] == 1'b1) begin
        l_fu_310_p3 = 32'd29;
    end else if (p_Result_15_fu_303_p3[30] == 1'b1) begin
        l_fu_310_p3 = 32'd30;
    end else if (p_Result_15_fu_303_p3[31] == 1'b1) begin
        l_fu_310_p3 = 32'd31;
    end else begin
        l_fu_310_p3 = 32'd32;
    end
end

assign lsb_index_1_fu_404_p2 = ($signed(sub_ln1044_1_fu_394_p2) + $signed(32'd4294967285));

assign lsb_index_fu_328_p2 = ($signed(sub_ln1044_fu_318_p2) + $signed(32'd4294967285));

assign lshr_ln1047_1_fu_434_p2 = 16'd65535 >> zext_ln1047_1_fu_430_p1;

assign lshr_ln1047_fu_358_p2 = 16'd65535 >> zext_ln1047_fu_354_p1;

assign lshr_ln1058_1_fu_652_p2 = tmp_V_5_reg_859_pp0_iter2_reg >> add_ln1058_1cast_fu_648_p1;

assign lshr_ln1058_fu_524_p2 = tmp_V_4_reg_836_pp0_iter2_reg >> add_ln1058cast_fu_520_p1;

assign m_2_fu_543_p3 = ((icmp_ln1058_fu_510_p2[0:0] == 1'b1) ? lshr_ln1058_fu_524_p2 : shl_ln1059_fu_538_p2);

assign m_3_fu_551_p2 = (or_ln_fu_502_p3 + m_2_fu_543_p3);

assign m_4_fu_671_p3 = ((icmp_ln1058_1_fu_638_p2[0:0] == 1'b1) ? lshr_ln1058_1_fu_652_p2 : shl_ln1059_1_fu_666_p2);

assign m_5_fu_679_p2 = (or_ln1061_1_fu_630_p3 + m_4_fu_671_p3);

assign or_ln1061_1_fu_630_p3 = {{15'd0}, {and_ln1061_1_fu_624_p2}};

assign or_ln1061_2_fu_618_p2 = (p_Result_11_fu_611_p3 | and_ln1046_1_fu_601_p2);

assign or_ln1061_fu_490_p2 = (p_Result_3_fu_483_p3 | and_ln1046_fu_473_p2);

assign or_ln_fu_502_p3 = {{15'd0}, {and_ln1061_fu_496_p2}};

assign out_fft_M_imag_V_address0 = zext_ln1057_fu_205_p1;

assign out_fft_M_real_V_address0 = zext_ln1057_fu_205_p1;

assign p_Result_10_fu_440_p2 = (tmp_V_5_reg_859 & lshr_ln1047_1_fu_434_p2);

assign p_Result_11_fu_611_p3 = tmp_V_5_reg_859_pp0_iter2_reg[add_ln1049_1_fu_606_p2];

assign p_Result_12_fu_695_p3 = m_5_fu_679_p2[32'd12];

assign p_Result_14_fu_233_p3 = out_fft_M_real_V_q0[32'd15];

assign p_Result_15_fu_303_p3 = {{16'd65535}, {p_Result_s_reg_844}};

assign p_Result_16_fu_731_p5 = {{tmp_s_fu_724_p3}, {zext_ln1062_fu_711_p1[9:0]}};

assign p_Result_17_fu_271_p3 = out_fft_M_imag_V_q0[32'd15];

assign p_Result_18_fu_379_p3 = {{16'd65535}, {p_Result_8_reg_867}};

assign p_Result_19_fu_763_p5 = {{tmp_2_fu_756_p3}, {zext_ln1062_1_fu_743_p1[9:0]}};

assign p_Result_3_fu_483_p3 = tmp_V_4_reg_836_pp0_iter2_reg[add_ln1049_fu_478_p2];

assign p_Result_4_fu_364_p2 = (tmp_V_4_reg_836 & lshr_ln1047_fu_358_p2);

assign p_Result_5_fu_567_p3 = m_3_fu_551_p2[32'd12];

integer ap_tvar_int_0;

always @ (tmp_V_5_fu_285_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            p_Result_8_fu_293_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_8_fu_293_p4[ap_tvar_int_0] = tmp_V_5_fu_285_p3[15 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (tmp_V_4_fu_247_p3) begin
    for (ap_tvar_int_1 = 16 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 15 - 0) begin
            p_Result_s_fu_255_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_s_fu_255_p4[ap_tvar_int_1] = tmp_V_4_fu_247_p3[15 - ap_tvar_int_1];
        end
    end
end

assign select_ln1043_1_fu_703_p3 = ((p_Result_12_fu_695_p3[0:0] == 1'b1) ? 5'd15 : 5'd14);

assign select_ln1043_fu_575_p3 = ((p_Result_5_fu_567_p3[0:0] == 1'b1) ? 5'd15 : 5'd14);

assign select_ln174_1_fu_782_p3 = ((icmp_ln1035_1_reg_849_pp0_iter3_reg[0:0] == 1'b1) ? 16'd0 : p_Result_19_fu_763_p5);

assign select_ln174_fu_775_p3 = ((icmp_ln1035_reg_826_pp0_iter3_reg[0:0] == 1'b1) ? 16'd0 : p_Result_16_fu_731_p5);

assign select_ln202_fu_197_p3 = ((icmp_ln1057_3_fu_191_p2[0:0] == 1'b1) ? 8'd0 : ap_sig_allocacmp_y_load);

assign shl_ln1059_1_fu_666_p2 = tmp_V_5_reg_859_pp0_iter2_reg << sub_ln1059_1cast_fu_662_p1;

assign shl_ln1059_fu_538_p2 = tmp_V_4_reg_836_pp0_iter2_reg << sub_ln1059cast_fu_534_p1;

assign sub_ln1044_1_fu_394_p2 = (32'd16 - l_1_fu_386_p3);

assign sub_ln1044_fu_318_p2 = (32'd16 - l_fu_310_p3);

assign sub_ln1047_1_fu_424_p2 = ($signed(5'd28) - $signed(trunc_ln1047_1_fu_420_p1));

assign sub_ln1047_fu_348_p2 = ($signed(5'd28) - $signed(trunc_ln1047_fu_344_p1));

assign sub_ln1059_1_fu_657_p2 = (32'd12 - sub_ln1044_1_reg_904);

assign sub_ln1059_1cast_fu_662_p1 = sub_ln1059_1_fu_657_p2[15:0];

assign sub_ln1059_fu_529_p2 = (32'd12 - sub_ln1044_reg_872);

assign sub_ln1059cast_fu_534_p1 = sub_ln1059_fu_529_p2[15:0];

assign sub_ln1064_1_fu_746_p2 = (5'd1 - trunc_ln1043_1_reg_931_pp0_iter3_reg);

assign sub_ln1064_fu_714_p2 = (5'd1 - trunc_ln1043_reg_899_pp0_iter3_reg);

assign tmp_2_fu_756_p3 = {{p_Result_17_reg_854_pp0_iter3_reg}, {add_ln1064_1_fu_751_p2}};

assign tmp_5_fu_460_p3 = lsb_index_reg_883[32'd31];

assign tmp_9_fu_588_p3 = lsb_index_1_reg_915[32'd31];

assign tmp_V_2_fu_279_p2 = (16'd0 - out_fft_M_imag_V_q0);

assign tmp_V_4_fu_247_p3 = ((p_Result_14_fu_233_p3[0:0] == 1'b1) ? tmp_V_fu_241_p2 : out_fft_M_real_V_q0);

assign tmp_V_5_fu_285_p3 = ((p_Result_17_fu_271_p3[0:0] == 1'b1) ? tmp_V_2_fu_279_p2 : out_fft_M_imag_V_q0);

assign tmp_V_fu_241_p2 = (16'd0 - out_fft_M_real_V_q0);

assign tmp_s_fu_724_p3 = {{p_Result_14_reg_831_pp0_iter3_reg}, {add_ln1064_fu_719_p2}};

assign trunc_ln1043_1_fu_451_p1 = l_1_fu_386_p3[4:0];

assign trunc_ln1043_fu_375_p1 = l_fu_310_p3[4:0];

assign trunc_ln1044_1_fu_400_p1 = sub_ln1044_1_fu_394_p2[15:0];

assign trunc_ln1044_fu_324_p1 = sub_ln1044_fu_318_p2[15:0];

assign trunc_ln1047_1_fu_420_p1 = sub_ln1044_1_fu_394_p2[4:0];

assign trunc_ln1047_fu_344_p1 = sub_ln1044_fu_318_p2[4:0];

assign xor_ln1049_1_fu_595_p2 = (tmp_9_fu_588_p3 ^ 1'd1);

assign xor_ln1049_fu_467_p2 = (tmp_5_fu_460_p3 ^ 1'd1);

assign zext_ln1047_1_fu_430_p1 = sub_ln1047_1_fu_424_p2;

assign zext_ln1047_fu_354_p1 = sub_ln1047_fu_348_p2;

assign zext_ln1057_fu_205_p1 = select_ln202_fu_197_p3;

assign zext_ln1062_1_fu_743_p1 = m_reg_946;

assign zext_ln1062_fu_711_p1 = m_8_reg_936;

always @ (posedge ap_clk) begin
    select_ln1043_reg_941[4:1] <= 4'b0111;
    select_ln1043_1_reg_951[4:1] <= 4'b0111;
end

endmodule //fwd_fft_compute_fft_write
