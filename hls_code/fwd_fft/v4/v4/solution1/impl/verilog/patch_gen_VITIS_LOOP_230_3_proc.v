// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module patch_gen_VITIS_LOOP_230_3_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ctrl1_reg,
        ctrl2_reg,
        pny_2,
        layer2_reg,
        burst_buffer11_address0,
        burst_buffer11_ce0,
        burst_buffer11_we0,
        burst_buffer11_d0,
        burst_buffer22_address0,
        burst_buffer22_ce0,
        burst_buffer22_we0,
        burst_buffer22_d0,
        in1_TDATA,
        in1_TVALID,
        in1_TREADY,
        in1_TKEEP,
        in1_TSTRB,
        in1_TLAST,
        in2_TDATA,
        in2_TVALID,
        in2_TREADY,
        in2_TKEEP,
        in2_TSTRB,
        in2_TLAST,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] ctrl1_reg;
input  [31:0] ctrl2_reg;
input  [7:0] pny_2;
input  [31:0] layer2_reg;
output  [13:0] burst_buffer11_address0;
output   burst_buffer11_ce0;
output   burst_buffer11_we0;
output  [15:0] burst_buffer11_d0;
output  [13:0] burst_buffer22_address0;
output   burst_buffer22_ce0;
output   burst_buffer22_we0;
output  [15:0] burst_buffer22_d0;
input  [15:0] in1_TDATA;
input   in1_TVALID;
output   in1_TREADY;
input  [1:0] in1_TKEEP;
input  [1:0] in1_TSTRB;
input  [0:0] in1_TLAST;
input  [15:0] in2_TDATA;
input   in2_TVALID;
output   in2_TREADY;
input  [1:0] in2_TKEEP;
input  [1:0] in2_TSTRB;
input  [0:0] in2_TLAST;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] burst_buffer11_address0;
reg burst_buffer11_ce0;
reg burst_buffer11_we0;
reg[15:0] burst_buffer11_d0;
reg[13:0] burst_buffer22_address0;
reg burst_buffer22_ce0;
reg burst_buffer22_we0;
reg[15:0] burst_buffer22_d0;
reg in1_TREADY;
reg in2_TREADY;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    in1_TDATA_blk_n;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln1057_5_fu_321_p2;
wire   [0:0] or_ln239_fu_346_p2;
reg    in2_TDATA_blk_n;
wire   [7:0] p_cast1_fu_204_p4;
reg   [7:0] p_cast1_reg_416;
wire   [7:0] empty_fu_214_p1;
reg   [7:0] empty_reg_422;
wire   [15:0] zext_ln230_fu_222_p1;
reg   [15:0] zext_ln230_reg_427;
wire   [15:0] mul_i_i268_fu_226_p2;
reg   [15:0] mul_i_i268_reg_432;
reg   [15:0] p_cast_reg_437;
wire   [13:0] tmp_cast_fu_254_p3;
reg   [13:0] tmp_cast_reg_443;
wire    ap_CS_fsm_state2;
wire   [7:0] add_ln230_fu_267_p2;
reg   [7:0] add_ln230_reg_452;
wire   [0:0] cmp_i_not_i_fu_282_p2;
reg   [0:0] cmp_i_not_i_reg_457;
wire   [0:0] icmp_ln1057_fu_262_p2;
wire   [7:0] pnx_3_fu_302_p2;
reg   [7:0] pnx_3_reg_465;
wire    ap_CS_fsm_state3;
wire   [15:0] lhs_fu_312_p2;
reg   [15:0] lhs_reg_470;
wire   [0:0] icmp_ln1057_4_fu_297_p2;
wire   [7:0] lsx_fu_326_p2;
reg    ap_predicate_op65_read_state4;
reg    ap_predicate_op74_read_state4;
reg    ap_block_state4;
reg   [7:0] pnx_reg_182;
reg   [7:0] rhs_reg_193;
wire   [63:0] zext_ln241_fu_360_p1;
wire   [63:0] zext_ln246_fu_384_p1;
reg   [7:0] lsy_fu_86;
reg    ap_block_state1;
wire   [15:0] bitcast_ln246_fu_370_p1;
wire   [15:0] bitcast_ln247_fu_394_p1;
wire   [7:0] mul_i_i268_fu_226_p0;
wire   [7:0] mul_i_i268_fu_226_p1;
wire   [5:0] trunc_ln241_fu_250_p1;
wire   [15:0] lsy_cast_i_fu_273_p1;
wire   [15:0] add_i_i251_i_fu_277_p2;
wire   [7:0] lhs_fu_312_p0;
wire   [7:0] lhs_fu_312_p1;
wire   [15:0] zext_ln1525_fu_332_p1;
wire   [15:0] ret_fu_336_p2;
wire   [0:0] icmp_ln239_fu_341_p2;
wire   [13:0] trunc_ln241_1_fu_351_p1;
wire   [13:0] add_ln241_fu_355_p2;
wire   [13:0] trunc_ln246_fu_375_p1;
wire   [13:0] add_ln246_fu_379_p2;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire   [15:0] lhs_fu_312_p00;
wire   [15:0] mul_i_i268_fu_226_p00;
wire   [15:0] mul_i_i268_fu_226_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
end

patch_gen_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U1(
    .din0(mul_i_i268_fu_226_p0),
    .din1(mul_i_i268_fu_226_p1),
    .dout(mul_i_i268_fu_226_p2)
);

patch_gen_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U2(
    .din0(lhs_fu_312_p0),
    .din1(lhs_fu_312_p1),
    .dout(lhs_fu_312_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln1057_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if (((icmp_ln1057_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_return_0_preg <= ctrl1_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if (((icmp_ln1057_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_return_1_preg <= ctrl2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lsy_fu_86 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1057_4_fu_297_p2 == 1'd1))) begin
        lsy_fu_86 <= add_ln230_reg_452;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (icmp_ln1057_5_fu_321_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        pnx_reg_182 <= pnx_3_reg_465;
    end else if (((icmp_ln1057_fu_262_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        pnx_reg_182 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        rhs_reg_193 <= lsx_fu_326_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1057_4_fu_297_p2 == 1'd0))) begin
        rhs_reg_193 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln230_reg_452 <= add_ln230_fu_267_p2;
        tmp_cast_reg_443[13 : 8] <= tmp_cast_fu_254_p3[13 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_fu_262_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        cmp_i_not_i_reg_457 <= cmp_i_not_i_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_422 <= empty_fu_214_p1;
        mul_i_i268_reg_432 <= mul_i_i268_fu_226_p2;
        p_cast1_reg_416 <= {{ctrl1_reg[31:24]}};
        p_cast_reg_437 <= {{layer2_reg[31:16]}};
        zext_ln230_reg_427[7 : 0] <= zext_ln230_fu_222_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1057_4_fu_297_p2 == 1'd0))) begin
        lhs_reg_470 <= lhs_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        pnx_3_reg_465 <= pnx_3_fu_302_p2;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1)))) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1057_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1057_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1057_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_return_0 = ctrl1_reg;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((icmp_ln1057_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_return_1 = ctrl2_reg;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        if ((or_ln239_fu_346_p2 == 1'd1)) begin
            burst_buffer11_address0 = zext_ln246_fu_384_p1;
        end else if ((or_ln239_fu_346_p2 == 1'd0)) begin
            burst_buffer11_address0 = zext_ln241_fu_360_p1;
        end else begin
            burst_buffer11_address0 = 'bx;
        end
    end else begin
        burst_buffer11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (or_ln239_fu_346_p2 == 1'd1) & (icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (or_ln239_fu_346_p2 == 1'd0) & (icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        burst_buffer11_ce0 = 1'b1;
    end else begin
        burst_buffer11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        if ((or_ln239_fu_346_p2 == 1'd1)) begin
            burst_buffer11_d0 = bitcast_ln246_fu_370_p1;
        end else if ((or_ln239_fu_346_p2 == 1'd0)) begin
            burst_buffer11_d0 = 16'd0;
        end else begin
            burst_buffer11_d0 = 'bx;
        end
    end else begin
        burst_buffer11_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (or_ln239_fu_346_p2 == 1'd1) & (icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (or_ln239_fu_346_p2 == 1'd0) & (icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        burst_buffer11_we0 = 1'b1;
    end else begin
        burst_buffer11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        if ((or_ln239_fu_346_p2 == 1'd1)) begin
            burst_buffer22_address0 = zext_ln246_fu_384_p1;
        end else if ((or_ln239_fu_346_p2 == 1'd0)) begin
            burst_buffer22_address0 = zext_ln241_fu_360_p1;
        end else begin
            burst_buffer22_address0 = 'bx;
        end
    end else begin
        burst_buffer22_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (or_ln239_fu_346_p2 == 1'd1) & (icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (or_ln239_fu_346_p2 == 1'd0) & (icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        burst_buffer22_ce0 = 1'b1;
    end else begin
        burst_buffer22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        if ((or_ln239_fu_346_p2 == 1'd1)) begin
            burst_buffer22_d0 = bitcast_ln247_fu_394_p1;
        end else if ((or_ln239_fu_346_p2 == 1'd0)) begin
            burst_buffer22_d0 = 16'd0;
        end else begin
            burst_buffer22_d0 = 'bx;
        end
    end else begin
        burst_buffer22_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (or_ln239_fu_346_p2 == 1'd1) & (icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (or_ln239_fu_346_p2 == 1'd0) & (icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        burst_buffer22_we0 = 1'b1;
    end else begin
        burst_buffer22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln239_fu_346_p2 == 1'd1) & (icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        in1_TDATA_blk_n = in1_TVALID;
    end else begin
        in1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (1'b1 == ap_CS_fsm_state4) & (ap_predicate_op65_read_state4 == 1'b1))) begin
        in1_TREADY = 1'b1;
    end else begin
        in1_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln239_fu_346_p2 == 1'd1) & (icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        in2_TDATA_blk_n = in2_TVALID;
    end else begin
        in2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (1'b1 == ap_CS_fsm_state4) & (ap_predicate_op74_read_state4 == 1'b1))) begin
        in2_TREADY = 1'b1;
    end else begin
        in2_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln1057_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1057_4_fu_297_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (icmp_ln1057_5_fu_321_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~(((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1))) & (icmp_ln1057_5_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_i_i251_i_fu_277_p2 = (mul_i_i268_reg_432 + lsy_cast_i_fu_273_p1);

assign add_ln230_fu_267_p2 = (lsy_fu_86 + 8'd1);

assign add_ln241_fu_355_p2 = (tmp_cast_reg_443 + trunc_ln241_1_fu_351_p1);

assign add_ln246_fu_379_p2 = (tmp_cast_reg_443 + trunc_ln246_fu_375_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state4 = (((in2_TVALID == 1'b0) & (ap_predicate_op74_read_state4 == 1'b1)) | ((in1_TVALID == 1'b0) & (ap_predicate_op65_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_predicate_op65_read_state4 = ((or_ln239_fu_346_p2 == 1'd1) & (icmp_ln1057_5_fu_321_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op74_read_state4 = ((or_ln239_fu_346_p2 == 1'd1) & (icmp_ln1057_5_fu_321_p2 == 1'd0));
end

assign bitcast_ln246_fu_370_p1 = in1_TDATA;

assign bitcast_ln247_fu_394_p1 = in2_TDATA;

assign cmp_i_not_i_fu_282_p2 = ((add_i_i251_i_fu_277_p2 < p_cast_reg_437) ? 1'b1 : 1'b0);

assign empty_fu_214_p1 = ctrl2_reg[7:0];

assign icmp_ln1057_4_fu_297_p2 = ((pnx_reg_182 == empty_reg_422) ? 1'b1 : 1'b0);

assign icmp_ln1057_5_fu_321_p2 = ((rhs_reg_193 == p_cast1_reg_416) ? 1'b1 : 1'b0);

assign icmp_ln1057_fu_262_p2 = ((lsy_fu_86 == p_cast1_reg_416) ? 1'b1 : 1'b0);

assign icmp_ln239_fu_341_p2 = ((ret_fu_336_p2 < p_cast_reg_437) ? 1'b1 : 1'b0);

assign lhs_fu_312_p0 = lhs_fu_312_p00;

assign lhs_fu_312_p00 = pnx_reg_182;

assign lhs_fu_312_p1 = zext_ln230_reg_427;

assign lsx_fu_326_p2 = (rhs_reg_193 + 8'd1);

assign lsy_cast_i_fu_273_p1 = lsy_fu_86;

assign mul_i_i268_fu_226_p0 = mul_i_i268_fu_226_p00;

assign mul_i_i268_fu_226_p00 = pny_2;

assign mul_i_i268_fu_226_p1 = mul_i_i268_fu_226_p10;

assign mul_i_i268_fu_226_p10 = p_cast1_fu_204_p4;

assign or_ln239_fu_346_p2 = (icmp_ln239_fu_341_p2 | cmp_i_not_i_reg_457);

assign p_cast1_fu_204_p4 = {{ctrl1_reg[31:24]}};

assign pnx_3_fu_302_p2 = (pnx_reg_182 + 8'd1);

assign ret_fu_336_p2 = (lhs_reg_470 + zext_ln1525_fu_332_p1);

assign tmp_cast_fu_254_p3 = {{trunc_ln241_fu_250_p1}, {8'd0}};

assign trunc_ln241_1_fu_351_p1 = ret_fu_336_p2[13:0];

assign trunc_ln241_fu_250_p1 = lsy_fu_86[5:0];

assign trunc_ln246_fu_375_p1 = ret_fu_336_p2[13:0];

assign zext_ln1525_fu_332_p1 = rhs_reg_193;

assign zext_ln230_fu_222_p1 = p_cast1_fu_204_p4;

assign zext_ln241_fu_360_p1 = add_ln241_fu_355_p2;

assign zext_ln246_fu_384_p1 = add_ln246_fu_379_p2;

always @ (posedge ap_clk) begin
    zext_ln230_reg_427[15:8] <= 8'b00000000;
    tmp_cast_reg_443[7:0] <= 8'b00000000;
end

endmodule //patch_gen_VITIS_LOOP_230_3_proc
