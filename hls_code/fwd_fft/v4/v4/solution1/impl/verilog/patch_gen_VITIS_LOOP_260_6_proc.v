// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module patch_gen_VITIS_LOOP_260_6_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        burst_buffer11_address0,
        burst_buffer11_ce0,
        burst_buffer11_q0,
        burst_buffer22_address0,
        burst_buffer22_ce0,
        burst_buffer22_q0,
        col_ov_pix_out_V_din,
        col_ov_pix_out_V_full_n,
        col_ov_pix_out_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
input  [31:0] p_read1;
output  [13:0] burst_buffer11_address0;
output   burst_buffer11_ce0;
input  [15:0] burst_buffer11_q0;
output  [13:0] burst_buffer22_address0;
output   burst_buffer22_ce0;
input  [15:0] burst_buffer22_q0;
output  [31:0] col_ov_pix_out_V_din;
input   col_ov_pix_out_V_full_n;
output   col_ov_pix_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg col_ov_pix_out_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] empty_fu_77_p1;
reg   [7:0] empty_reg_150;
wire   [7:0] p_cast_fu_81_p4;
reg   [7:0] p_cast_reg_155;
wire   [0:0] icmp_ln1057_fu_91_p2;
reg   [0:0] icmp_ln1057_reg_160;
wire   [13:0] p_cast37_cast_fu_97_p1;
reg   [13:0] p_cast37_cast_reg_164;
wire   [15:0] bound_fu_105_p2;
reg   [15:0] bound_reg_169;
wire   [7:0] pnx_2_fu_124_p2;
reg   [7:0] pnx_2_reg_177;
wire    ap_CS_fsm_state2;
wire   [13:0] mul_ln263_fu_134_p2;
reg   [13:0] mul_ln263_reg_182;
wire   [0:0] icmp_ln1057_1_fu_119_p2;
wire    grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_start;
wire    grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_done;
wire    grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_idle;
wire    grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_ready;
wire   [31:0] grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_col_ov_pix_out_V_din;
wire    grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_col_ov_pix_out_V_write;
wire   [13:0] grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_burst_buffer11_address0;
wire    grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_burst_buffer11_ce0;
wire   [13:0] grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_burst_buffer22_address0;
wire    grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_burst_buffer22_ce0;
reg    grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [7:0] pnx_1_fu_48;
reg    ap_block_state4_on_subcall_done;
reg    ap_block_state1;
wire   [7:0] bound_fu_105_p0;
wire   [15:0] cast_fu_101_p1;
wire   [7:0] bound_fu_105_p1;
wire   [7:0] mul_ln263_fu_134_p0;
wire   [7:0] mul_ln263_fu_134_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire   [13:0] mul_ln263_fu_134_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_start_reg = 1'b0;
end

patch_gen_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8 grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_start),
    .ap_done(grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_done),
    .ap_idle(grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_idle),
    .ap_ready(grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_ready),
    .col_ov_pix_out_V_din(grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_col_ov_pix_out_V_din),
    .col_ov_pix_out_V_full_n(col_ov_pix_out_V_full_n),
    .col_ov_pix_out_V_write(grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_col_ov_pix_out_V_write),
    .bound(bound_reg_169),
    .p_cast(p_cast_reg_155),
    .mul_ln263(mul_ln263_reg_182),
    .burst_buffer11_address0(grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_burst_buffer11_address0),
    .burst_buffer11_ce0(grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_burst_buffer11_ce0),
    .burst_buffer11_q0(burst_buffer11_q0),
    .burst_buffer22_address0(grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_burst_buffer22_address0),
    .burst_buffer22_ce0(grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_burst_buffer22_ce0),
    .burst_buffer22_q0(burst_buffer22_q0)
);

patch_gen_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U28(
    .din0(bound_fu_105_p0),
    .din1(bound_fu_105_p1),
    .dout(bound_fu_105_p2)
);

patch_gen_mul_8ns_8ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 14 ))
mul_8ns_8ns_14_1_1_U29(
    .din0(mul_ln263_fu_134_p0),
    .din1(mul_ln263_fu_134_p1),
    .dout(mul_ln263_fu_134_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln1057_1_fu_119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_start_reg <= 1'b1;
        end else if ((grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_ready == 1'b1)) begin
            grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        pnx_1_fu_48 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
        pnx_1_fu_48 <= pnx_2_reg_177;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        bound_reg_169 <= bound_fu_105_p2;
        empty_reg_150 <= empty_fu_77_p1;
        icmp_ln1057_reg_160 <= icmp_ln1057_fu_91_p2;
        p_cast37_cast_reg_164[7 : 0] <= p_cast37_cast_fu_97_p1[7 : 0];
        p_cast_reg_155 <= {{p_read1[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_1_fu_119_p2 == 1'd0) & (icmp_ln1057_reg_160 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        mul_ln263_reg_182 <= mul_ln263_fu_134_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        pnx_2_reg_177 <= pnx_2_fu_124_p2;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state4_on_subcall_done)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1057_1_fu_119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1057_1_fu_119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1057_reg_160 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        col_ov_pix_out_V_write = grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_col_ov_pix_out_V_write;
    end else begin
        col_ov_pix_out_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln1057_1_fu_119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln1057_1_fu_119_p2 == 1'd0) & (icmp_ln1057_reg_160 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state4_on_subcall_done = ((grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_done == 1'b0) & (icmp_ln1057_reg_160 == 1'd0));
end

assign bound_fu_105_p0 = cast_fu_101_p1;

assign bound_fu_105_p1 = cast_fu_101_p1;

assign burst_buffer11_address0 = grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_burst_buffer11_address0;

assign burst_buffer11_ce0 = grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_burst_buffer11_ce0;

assign burst_buffer22_address0 = grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_burst_buffer22_address0;

assign burst_buffer22_ce0 = grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_burst_buffer22_ce0;

assign cast_fu_101_p1 = p_cast_fu_81_p4;

assign col_ov_pix_out_V_din = grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_col_ov_pix_out_V_din;

assign empty_fu_77_p1 = p_read[7:0];

assign grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_start = grp_VITIS_LOOP_260_6_proc_Pipeline_VITIS_LOOP_263_7_VITIS_LOOP_266_8_fu_64_ap_start_reg;

assign icmp_ln1057_1_fu_119_p2 = ((pnx_1_fu_48 == empty_reg_150) ? 1'b1 : 1'b0);

assign icmp_ln1057_fu_91_p2 = ((p_cast_fu_81_p4 == 8'd0) ? 1'b1 : 1'b0);

assign mul_ln263_fu_134_p0 = mul_ln263_fu_134_p00;

assign mul_ln263_fu_134_p00 = pnx_1_fu_48;

assign mul_ln263_fu_134_p1 = p_cast37_cast_reg_164;

assign p_cast37_cast_fu_97_p1 = p_cast_fu_81_p4;

assign p_cast_fu_81_p4 = {{p_read1[31:24]}};

assign pnx_2_fu_124_p2 = (pnx_1_fu_48 + 8'd1);

always @ (posedge ap_clk) begin
    p_cast37_cast_reg_164[13:8] <= 6'b000000;
end

endmodule //patch_gen_VITIS_LOOP_260_6_proc
