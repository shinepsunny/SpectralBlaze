// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fwd_fft_fft16 (
        ap_clk,
        ap_rst,
        c_ifmap_col_op_st_dout,
        c_ifmap_col_op_st_empty_n,
        c_ifmap_col_op_st_read,
        c_fft_row_op_st_din,
        c_fft_row_op_st_full_n,
        c_fft_row_op_st_write,
        ctrl1_reg_dout,
        ctrl1_reg_empty_n,
        ctrl1_reg_read,
        ctrl1_reg_c191_din,
        ctrl1_reg_c191_full_n,
        ctrl1_reg_c191_write,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_clk;
input   ap_rst;
input  [31:0] c_ifmap_col_op_st_dout;
input   c_ifmap_col_op_st_empty_n;
output   c_ifmap_col_op_st_read;
output  [31:0] c_fft_row_op_st_din;
input   c_fft_row_op_st_full_n;
output   c_fft_row_op_st_write;
input  [31:0] ctrl1_reg_dout;
input   ctrl1_reg_empty_n;
output   ctrl1_reg_read;
output  [31:0] ctrl1_reg_c191_din;
input   ctrl1_reg_c191_full_n;
output   ctrl1_reg_c191_write;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire   [31:0] input_data_i_q0;
wire   [31:0] input_data_i_q1;
wire   [31:0] input_data_t_q0;
wire   [31:0] input_data_t_q1;
wire   [31:0] out_data_1_i_q0;
wire   [31:0] out_data_1_i_q1;
wire   [31:0] out_data_1_t_q0;
wire   [31:0] out_data_1_t_q1;
wire   [31:0] out_data_2_i_q0;
wire   [31:0] out_data_2_i_q1;
wire   [31:0] out_data_2_t_q0;
wire   [31:0] out_data_2_t_q1;
wire   [31:0] out_data_3_i_q0;
wire   [31:0] out_data_3_i_q1;
wire   [31:0] out_data_3_t_q0;
wire   [31:0] out_data_3_t_q1;
wire   [31:0] out_data_4_i_q0;
wire   [31:0] out_data_4_i_q1;
wire   [31:0] out_data_4_t_q0;
wire   [31:0] out_data_4_t_q1;
wire   [31:0] out_data_5_i_q0;
wire   [31:0] out_data_5_i_q1;
wire   [31:0] out_data_5_t_q0;
wire   [31:0] out_data_5_t_q1;
wire   [31:0] out_data_6_i_q0;
wire   [31:0] out_data_6_t_q0;
wire    stream_2_buf17_U0_ap_start;
wire    stream_2_buf17_U0_ap_done;
wire    stream_2_buf17_U0_ap_continue;
wire    stream_2_buf17_U0_ap_idle;
wire    stream_2_buf17_U0_ap_ready;
wire    stream_2_buf17_U0_c_ifmap_col_op_st_read;
wire   [5:0] stream_2_buf17_U0_input_buffer_address0;
wire    stream_2_buf17_U0_input_buffer_ce0;
wire    stream_2_buf17_U0_input_buffer_we0;
wire   [31:0] stream_2_buf17_U0_input_buffer_d0;
wire    stream_2_buf17_U0_ctrl1_reg_read;
wire   [31:0] stream_2_buf17_U0_ctrl1_reg_c191_din;
wire    stream_2_buf17_U0_ctrl1_reg_c191_write;
wire   [31:0] stream_2_buf17_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c24_channel;
wire    ctrl1_reg_c24_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c24_channel;
wire    ap_sync_channel_write_ctrl1_reg_c24_channel;
wire    ap_channel_done_input_data;
wire    stream_2_buf17_U0_input_buffer_full_n;
reg    ap_sync_reg_channel_write_input_data;
wire    ap_sync_channel_write_input_data;
wire    fft_stage1018_U0_ap_start;
wire    fft_stage1018_U0_ap_done;
wire    fft_stage1018_U0_ap_continue;
wire    fft_stage1018_U0_ap_idle;
wire    fft_stage1018_U0_ap_ready;
wire   [5:0] fft_stage1018_U0_IN_r_address0;
wire    fft_stage1018_U0_IN_r_ce0;
wire   [5:0] fft_stage1018_U0_IN_r_address1;
wire    fft_stage1018_U0_IN_r_ce1;
wire   [5:0] fft_stage1018_U0_OUT_r_address0;
wire    fft_stage1018_U0_OUT_r_ce0;
wire    fft_stage1018_U0_OUT_r_we0;
wire   [31:0] fft_stage1018_U0_OUT_r_d0;
wire   [5:0] fft_stage1018_U0_OUT_r_address1;
wire    fft_stage1018_U0_OUT_r_ce1;
wire    fft_stage1018_U0_OUT_r_we1;
wire   [31:0] fft_stage1018_U0_OUT_r_d1;
wire   [31:0] fft_stage1018_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c23_channel;
wire    ctrl1_reg_c23_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c23_channel;
wire    ap_sync_channel_write_ctrl1_reg_c23_channel;
wire    ap_channel_done_out_data_1;
wire    fft_stage1018_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_1;
wire    ap_sync_channel_write_out_data_1;
wire    fft_stage1119_U0_ap_start;
wire    fft_stage1119_U0_ap_done;
wire    fft_stage1119_U0_ap_continue;
wire    fft_stage1119_U0_ap_idle;
wire    fft_stage1119_U0_ap_ready;
wire   [5:0] fft_stage1119_U0_IN_r_address0;
wire    fft_stage1119_U0_IN_r_ce0;
wire   [5:0] fft_stage1119_U0_IN_r_address1;
wire    fft_stage1119_U0_IN_r_ce1;
wire   [5:0] fft_stage1119_U0_OUT_r_address0;
wire    fft_stage1119_U0_OUT_r_ce0;
wire    fft_stage1119_U0_OUT_r_we0;
wire   [31:0] fft_stage1119_U0_OUT_r_d0;
wire   [5:0] fft_stage1119_U0_OUT_r_address1;
wire    fft_stage1119_U0_OUT_r_ce1;
wire    fft_stage1119_U0_OUT_r_we1;
wire   [31:0] fft_stage1119_U0_OUT_r_d1;
wire   [31:0] fft_stage1119_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c22_channel;
wire    ctrl1_reg_c22_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c22_channel;
wire    ap_sync_channel_write_ctrl1_reg_c22_channel;
wire    ap_channel_done_out_data_2;
wire    fft_stage1119_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_2;
wire    ap_sync_channel_write_out_data_2;
wire    fft_stage1220_U0_ap_start;
wire    fft_stage1220_U0_ap_done;
wire    fft_stage1220_U0_ap_continue;
wire    fft_stage1220_U0_ap_idle;
wire    fft_stage1220_U0_ap_ready;
wire   [5:0] fft_stage1220_U0_IN_r_address0;
wire    fft_stage1220_U0_IN_r_ce0;
wire   [5:0] fft_stage1220_U0_IN_r_address1;
wire    fft_stage1220_U0_IN_r_ce1;
wire   [5:0] fft_stage1220_U0_OUT_r_address0;
wire    fft_stage1220_U0_OUT_r_ce0;
wire    fft_stage1220_U0_OUT_r_we0;
wire   [31:0] fft_stage1220_U0_OUT_r_d0;
wire   [5:0] fft_stage1220_U0_OUT_r_address1;
wire    fft_stage1220_U0_OUT_r_ce1;
wire    fft_stage1220_U0_OUT_r_we1;
wire   [31:0] fft_stage1220_U0_OUT_r_d1;
wire   [15:0] fft_stage1220_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c21_channel;
wire    ctrl1_reg_c21_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c21_channel;
wire    ap_sync_channel_write_ctrl1_reg_c21_channel;
wire    ap_channel_done_out_data_3;
wire    fft_stage1220_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_3;
wire    ap_sync_channel_write_out_data_3;
wire    fft_stage1321_U0_ap_start;
wire    fft_stage1321_U0_ap_done;
wire    fft_stage1321_U0_ap_continue;
wire    fft_stage1321_U0_ap_idle;
wire    fft_stage1321_U0_ap_ready;
wire   [5:0] fft_stage1321_U0_IN_r_address0;
wire    fft_stage1321_U0_IN_r_ce0;
wire   [5:0] fft_stage1321_U0_IN_r_address1;
wire    fft_stage1321_U0_IN_r_ce1;
wire   [5:0] fft_stage1321_U0_OUT_r_address0;
wire    fft_stage1321_U0_OUT_r_ce0;
wire    fft_stage1321_U0_OUT_r_we0;
wire   [31:0] fft_stage1321_U0_OUT_r_d0;
wire   [5:0] fft_stage1321_U0_OUT_r_address1;
wire    fft_stage1321_U0_OUT_r_ce1;
wire    fft_stage1321_U0_OUT_r_we1;
wire   [31:0] fft_stage1321_U0_OUT_r_d1;
wire   [15:0] fft_stage1321_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c20_channel;
wire    ctrl1_reg_c20_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c20_channel;
wire    ap_sync_channel_write_ctrl1_reg_c20_channel;
wire    ap_channel_done_out_data_4;
wire    fft_stage1321_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_4;
wire    ap_sync_channel_write_out_data_4;
wire    fft_stage1422_U0_ap_start;
wire    fft_stage1422_U0_ap_done;
wire    fft_stage1422_U0_ap_continue;
wire    fft_stage1422_U0_ap_idle;
wire    fft_stage1422_U0_ap_ready;
wire   [5:0] fft_stage1422_U0_IN_r_address0;
wire    fft_stage1422_U0_IN_r_ce0;
wire   [5:0] fft_stage1422_U0_IN_r_address1;
wire    fft_stage1422_U0_IN_r_ce1;
wire   [5:0] fft_stage1422_U0_OUT_r_address0;
wire    fft_stage1422_U0_OUT_r_ce0;
wire    fft_stage1422_U0_OUT_r_we0;
wire   [31:0] fft_stage1422_U0_OUT_r_d0;
wire   [5:0] fft_stage1422_U0_OUT_r_address1;
wire    fft_stage1422_U0_OUT_r_ce1;
wire    fft_stage1422_U0_OUT_r_we1;
wire   [31:0] fft_stage1422_U0_OUT_r_d1;
wire   [15:0] fft_stage1422_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c19_channel;
wire    ctrl1_reg_c19_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c19_channel;
wire    ap_sync_channel_write_ctrl1_reg_c19_channel;
wire    ap_channel_done_out_data_5;
wire    fft_stage1422_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_5;
wire    ap_sync_channel_write_out_data_5;
wire    fft_stage1523_U0_ap_start;
wire    fft_stage1523_U0_ap_done;
wire    fft_stage1523_U0_ap_continue;
wire    fft_stage1523_U0_ap_idle;
wire    fft_stage1523_U0_ap_ready;
wire   [5:0] fft_stage1523_U0_IN_r_address0;
wire    fft_stage1523_U0_IN_r_ce0;
wire   [5:0] fft_stage1523_U0_IN_r_address1;
wire    fft_stage1523_U0_IN_r_ce1;
wire   [5:0] fft_stage1523_U0_OUT_r_address0;
wire    fft_stage1523_U0_OUT_r_ce0;
wire    fft_stage1523_U0_OUT_r_we0;
wire   [31:0] fft_stage1523_U0_OUT_r_d0;
wire   [5:0] fft_stage1523_U0_OUT_r_address1;
wire    fft_stage1523_U0_OUT_r_ce1;
wire    fft_stage1523_U0_OUT_r_we1;
wire   [31:0] fft_stage1523_U0_OUT_r_d1;
wire   [7:0] fft_stage1523_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c_channel;
wire    ctrl1_reg_c_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c_channel;
wire    ap_sync_channel_write_ctrl1_reg_c_channel;
wire    ap_channel_done_out_data_6;
wire    fft_stage1523_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_6;
wire    ap_sync_channel_write_out_data_6;
wire    buf_2_stream24_U0_ap_start;
wire    buf_2_stream24_U0_ap_done;
wire    buf_2_stream24_U0_ap_continue;
wire    buf_2_stream24_U0_ap_idle;
wire    buf_2_stream24_U0_ap_ready;
wire   [31:0] buf_2_stream24_U0_c_fft_row_op_st_din;
wire    buf_2_stream24_U0_c_fft_row_op_st_write;
wire   [5:0] buf_2_stream24_U0_output_buffer_address0;
wire    buf_2_stream24_U0_output_buffer_ce0;
wire    input_data_i_full_n;
wire    input_data_t_empty_n;
wire    out_data_1_i_full_n;
wire    out_data_1_t_empty_n;
wire    out_data_2_i_full_n;
wire    out_data_2_t_empty_n;
wire    out_data_3_i_full_n;
wire    out_data_3_t_empty_n;
wire    out_data_4_i_full_n;
wire    out_data_4_t_empty_n;
wire    out_data_5_i_full_n;
wire    out_data_5_t_empty_n;
wire    out_data_6_i_full_n;
wire    out_data_6_t_empty_n;
wire   [31:0] ctrl1_reg_c24_channel_dout;
wire    ctrl1_reg_c24_channel_empty_n;
wire   [31:0] ctrl1_reg_c23_channel_dout;
wire    ctrl1_reg_c23_channel_empty_n;
wire   [31:0] ctrl1_reg_c22_channel_dout;
wire    ctrl1_reg_c22_channel_empty_n;
wire   [15:0] ctrl1_reg_c21_channel_dout;
wire    ctrl1_reg_c21_channel_empty_n;
wire   [15:0] ctrl1_reg_c20_channel_dout;
wire    ctrl1_reg_c20_channel_empty_n;
wire   [15:0] ctrl1_reg_c19_channel_dout;
wire    ctrl1_reg_c19_channel_empty_n;
wire   [7:0] ctrl1_reg_c_channel_dout;
wire    ctrl1_reg_c_channel_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_ctrl1_reg_c24_channel = 1'b0;
#0 ap_sync_reg_channel_write_input_data = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c23_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_1 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c22_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_2 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c21_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_3 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c20_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_4 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c19_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_5 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_6 = 1'b0;
end

fwd_fft_fft16_input_data #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
input_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(stream_2_buf17_U0_input_buffer_address0),
    .i_ce0(stream_2_buf17_U0_input_buffer_ce0),
    .i_we0(stream_2_buf17_U0_input_buffer_we0),
    .i_d0(stream_2_buf17_U0_input_buffer_d0),
    .i_q0(input_data_i_q0),
    .i_address1(6'd0),
    .i_ce1(1'b0),
    .i_q1(input_data_i_q1),
    .t_address0(fft_stage1018_U0_IN_r_address0),
    .t_ce0(fft_stage1018_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(input_data_t_q0),
    .t_address1(fft_stage1018_U0_IN_r_address1),
    .t_ce1(fft_stage1018_U0_IN_r_ce1),
    .t_q1(input_data_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(input_data_i_full_n),
    .i_write(ap_channel_done_input_data),
    .t_empty_n(input_data_t_empty_n),
    .t_read(fft_stage1018_U0_ap_ready)
);

fwd_fft_fft16_out_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage1018_U0_OUT_r_address0),
    .i_ce0(fft_stage1018_U0_OUT_r_ce0),
    .i_we0(fft_stage1018_U0_OUT_r_we0),
    .i_d0(fft_stage1018_U0_OUT_r_d0),
    .i_q0(out_data_1_i_q0),
    .i_address1(fft_stage1018_U0_OUT_r_address1),
    .i_ce1(fft_stage1018_U0_OUT_r_ce1),
    .i_we1(fft_stage1018_U0_OUT_r_we1),
    .i_d1(fft_stage1018_U0_OUT_r_d1),
    .i_q1(out_data_1_i_q1),
    .t_address0(fft_stage1119_U0_IN_r_address0),
    .t_ce0(fft_stage1119_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(out_data_1_t_q0),
    .t_address1(fft_stage1119_U0_IN_r_address1),
    .t_ce1(fft_stage1119_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(out_data_1_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_1_i_full_n),
    .i_write(ap_channel_done_out_data_1),
    .t_empty_n(out_data_1_t_empty_n),
    .t_read(fft_stage1119_U0_ap_ready)
);

fwd_fft_fft16_out_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage1119_U0_OUT_r_address0),
    .i_ce0(fft_stage1119_U0_OUT_r_ce0),
    .i_we0(fft_stage1119_U0_OUT_r_we0),
    .i_d0(fft_stage1119_U0_OUT_r_d0),
    .i_q0(out_data_2_i_q0),
    .i_address1(fft_stage1119_U0_OUT_r_address1),
    .i_ce1(fft_stage1119_U0_OUT_r_ce1),
    .i_we1(fft_stage1119_U0_OUT_r_we1),
    .i_d1(fft_stage1119_U0_OUT_r_d1),
    .i_q1(out_data_2_i_q1),
    .t_address0(fft_stage1220_U0_IN_r_address0),
    .t_ce0(fft_stage1220_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(out_data_2_t_q0),
    .t_address1(fft_stage1220_U0_IN_r_address1),
    .t_ce1(fft_stage1220_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(out_data_2_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_2_i_full_n),
    .i_write(ap_channel_done_out_data_2),
    .t_empty_n(out_data_2_t_empty_n),
    .t_read(fft_stage1220_U0_ap_ready)
);

fwd_fft_fft16_out_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage1220_U0_OUT_r_address0),
    .i_ce0(fft_stage1220_U0_OUT_r_ce0),
    .i_we0(fft_stage1220_U0_OUT_r_we0),
    .i_d0(fft_stage1220_U0_OUT_r_d0),
    .i_q0(out_data_3_i_q0),
    .i_address1(fft_stage1220_U0_OUT_r_address1),
    .i_ce1(fft_stage1220_U0_OUT_r_ce1),
    .i_we1(fft_stage1220_U0_OUT_r_we1),
    .i_d1(fft_stage1220_U0_OUT_r_d1),
    .i_q1(out_data_3_i_q1),
    .t_address0(fft_stage1321_U0_IN_r_address0),
    .t_ce0(fft_stage1321_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(out_data_3_t_q0),
    .t_address1(fft_stage1321_U0_IN_r_address1),
    .t_ce1(fft_stage1321_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(out_data_3_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_3_i_full_n),
    .i_write(ap_channel_done_out_data_3),
    .t_empty_n(out_data_3_t_empty_n),
    .t_read(fft_stage1321_U0_ap_ready)
);

fwd_fft_fft16_out_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage1321_U0_OUT_r_address0),
    .i_ce0(fft_stage1321_U0_OUT_r_ce0),
    .i_we0(fft_stage1321_U0_OUT_r_we0),
    .i_d0(fft_stage1321_U0_OUT_r_d0),
    .i_q0(out_data_4_i_q0),
    .i_address1(fft_stage1321_U0_OUT_r_address1),
    .i_ce1(fft_stage1321_U0_OUT_r_ce1),
    .i_we1(fft_stage1321_U0_OUT_r_we1),
    .i_d1(fft_stage1321_U0_OUT_r_d1),
    .i_q1(out_data_4_i_q1),
    .t_address0(fft_stage1422_U0_IN_r_address0),
    .t_ce0(fft_stage1422_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(out_data_4_t_q0),
    .t_address1(fft_stage1422_U0_IN_r_address1),
    .t_ce1(fft_stage1422_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(out_data_4_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_4_i_full_n),
    .i_write(ap_channel_done_out_data_4),
    .t_empty_n(out_data_4_t_empty_n),
    .t_read(fft_stage1422_U0_ap_ready)
);

fwd_fft_fft16_out_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage1422_U0_OUT_r_address0),
    .i_ce0(fft_stage1422_U0_OUT_r_ce0),
    .i_we0(fft_stage1422_U0_OUT_r_we0),
    .i_d0(fft_stage1422_U0_OUT_r_d0),
    .i_q0(out_data_5_i_q0),
    .i_address1(fft_stage1422_U0_OUT_r_address1),
    .i_ce1(fft_stage1422_U0_OUT_r_ce1),
    .i_we1(fft_stage1422_U0_OUT_r_we1),
    .i_d1(fft_stage1422_U0_OUT_r_d1),
    .i_q1(out_data_5_i_q1),
    .t_address0(fft_stage1523_U0_IN_r_address0),
    .t_ce0(fft_stage1523_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(out_data_5_t_q0),
    .t_address1(fft_stage1523_U0_IN_r_address1),
    .t_ce1(fft_stage1523_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(out_data_5_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_5_i_full_n),
    .i_write(ap_channel_done_out_data_5),
    .t_empty_n(out_data_5_t_empty_n),
    .t_read(fft_stage1523_U0_ap_ready)
);

fwd_fft_fft16_out_data_6 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage1523_U0_OUT_r_address0),
    .i_ce0(fft_stage1523_U0_OUT_r_ce0),
    .i_we0(fft_stage1523_U0_OUT_r_we0),
    .i_d0(fft_stage1523_U0_OUT_r_d0),
    .i_q0(out_data_6_i_q0),
    .i_address1(fft_stage1523_U0_OUT_r_address1),
    .i_ce1(fft_stage1523_U0_OUT_r_ce1),
    .i_we1(fft_stage1523_U0_OUT_r_we1),
    .i_d1(fft_stage1523_U0_OUT_r_d1),
    .t_address0(buf_2_stream24_U0_output_buffer_address0),
    .t_ce0(buf_2_stream24_U0_output_buffer_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(out_data_6_t_q0),
    .t_address1(6'd0),
    .t_ce1(1'b0),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_6_i_full_n),
    .i_write(ap_channel_done_out_data_6),
    .t_empty_n(out_data_6_t_empty_n),
    .t_read(buf_2_stream24_U0_ap_ready)
);

fwd_fft_stream_2_buf17 stream_2_buf17_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(stream_2_buf17_U0_ap_start),
    .ap_done(stream_2_buf17_U0_ap_done),
    .ap_continue(stream_2_buf17_U0_ap_continue),
    .ap_idle(stream_2_buf17_U0_ap_idle),
    .ap_ready(stream_2_buf17_U0_ap_ready),
    .c_ifmap_col_op_st_dout(c_ifmap_col_op_st_dout),
    .c_ifmap_col_op_st_empty_n(c_ifmap_col_op_st_empty_n),
    .c_ifmap_col_op_st_read(stream_2_buf17_U0_c_ifmap_col_op_st_read),
    .input_buffer_address0(stream_2_buf17_U0_input_buffer_address0),
    .input_buffer_ce0(stream_2_buf17_U0_input_buffer_ce0),
    .input_buffer_we0(stream_2_buf17_U0_input_buffer_we0),
    .input_buffer_d0(stream_2_buf17_U0_input_buffer_d0),
    .ctrl1_reg_dout(ctrl1_reg_dout),
    .ctrl1_reg_empty_n(ctrl1_reg_empty_n),
    .ctrl1_reg_read(stream_2_buf17_U0_ctrl1_reg_read),
    .ctrl1_reg_c191_din(stream_2_buf17_U0_ctrl1_reg_c191_din),
    .ctrl1_reg_c191_full_n(ctrl1_reg_c191_full_n),
    .ctrl1_reg_c191_write(stream_2_buf17_U0_ctrl1_reg_c191_write),
    .ap_return(stream_2_buf17_U0_ap_return)
);

fwd_fft_fft_stage1018 fft_stage1018_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage1018_U0_ap_start),
    .ap_done(fft_stage1018_U0_ap_done),
    .ap_continue(fft_stage1018_U0_ap_continue),
    .ap_idle(fft_stage1018_U0_ap_idle),
    .ap_ready(fft_stage1018_U0_ap_ready),
    .IN_r_address0(fft_stage1018_U0_IN_r_address0),
    .IN_r_ce0(fft_stage1018_U0_IN_r_ce0),
    .IN_r_q0(input_data_t_q0),
    .IN_r_address1(fft_stage1018_U0_IN_r_address1),
    .IN_r_ce1(fft_stage1018_U0_IN_r_ce1),
    .IN_r_q1(input_data_t_q1),
    .OUT_r_address0(fft_stage1018_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage1018_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage1018_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage1018_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage1018_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage1018_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage1018_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage1018_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c24_channel_dout),
    .ap_return(fft_stage1018_U0_ap_return)
);

fwd_fft_fft_stage1119 fft_stage1119_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage1119_U0_ap_start),
    .ap_done(fft_stage1119_U0_ap_done),
    .ap_continue(fft_stage1119_U0_ap_continue),
    .ap_idle(fft_stage1119_U0_ap_idle),
    .ap_ready(fft_stage1119_U0_ap_ready),
    .IN_r_address0(fft_stage1119_U0_IN_r_address0),
    .IN_r_ce0(fft_stage1119_U0_IN_r_ce0),
    .IN_r_q0(out_data_1_t_q0),
    .IN_r_address1(fft_stage1119_U0_IN_r_address1),
    .IN_r_ce1(fft_stage1119_U0_IN_r_ce1),
    .IN_r_q1(out_data_1_t_q1),
    .OUT_r_address0(fft_stage1119_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage1119_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage1119_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage1119_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage1119_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage1119_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage1119_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage1119_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c23_channel_dout),
    .ap_return(fft_stage1119_U0_ap_return)
);

fwd_fft_fft_stage1220 fft_stage1220_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage1220_U0_ap_start),
    .ap_done(fft_stage1220_U0_ap_done),
    .ap_continue(fft_stage1220_U0_ap_continue),
    .ap_idle(fft_stage1220_U0_ap_idle),
    .ap_ready(fft_stage1220_U0_ap_ready),
    .IN_r_address0(fft_stage1220_U0_IN_r_address0),
    .IN_r_ce0(fft_stage1220_U0_IN_r_ce0),
    .IN_r_q0(out_data_2_t_q0),
    .IN_r_address1(fft_stage1220_U0_IN_r_address1),
    .IN_r_ce1(fft_stage1220_U0_IN_r_ce1),
    .IN_r_q1(out_data_2_t_q1),
    .OUT_r_address0(fft_stage1220_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage1220_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage1220_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage1220_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage1220_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage1220_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage1220_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage1220_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c22_channel_dout),
    .ap_return(fft_stage1220_U0_ap_return)
);

fwd_fft_fft_stage1321 fft_stage1321_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage1321_U0_ap_start),
    .ap_done(fft_stage1321_U0_ap_done),
    .ap_continue(fft_stage1321_U0_ap_continue),
    .ap_idle(fft_stage1321_U0_ap_idle),
    .ap_ready(fft_stage1321_U0_ap_ready),
    .IN_r_address0(fft_stage1321_U0_IN_r_address0),
    .IN_r_ce0(fft_stage1321_U0_IN_r_ce0),
    .IN_r_q0(out_data_3_t_q0),
    .IN_r_address1(fft_stage1321_U0_IN_r_address1),
    .IN_r_ce1(fft_stage1321_U0_IN_r_ce1),
    .IN_r_q1(out_data_3_t_q1),
    .OUT_r_address0(fft_stage1321_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage1321_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage1321_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage1321_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage1321_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage1321_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage1321_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage1321_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c21_channel_dout),
    .ap_return(fft_stage1321_U0_ap_return)
);

fwd_fft_fft_stage1422 fft_stage1422_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage1422_U0_ap_start),
    .ap_done(fft_stage1422_U0_ap_done),
    .ap_continue(fft_stage1422_U0_ap_continue),
    .ap_idle(fft_stage1422_U0_ap_idle),
    .ap_ready(fft_stage1422_U0_ap_ready),
    .IN_r_address0(fft_stage1422_U0_IN_r_address0),
    .IN_r_ce0(fft_stage1422_U0_IN_r_ce0),
    .IN_r_q0(out_data_4_t_q0),
    .IN_r_address1(fft_stage1422_U0_IN_r_address1),
    .IN_r_ce1(fft_stage1422_U0_IN_r_ce1),
    .IN_r_q1(out_data_4_t_q1),
    .OUT_r_address0(fft_stage1422_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage1422_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage1422_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage1422_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage1422_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage1422_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage1422_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage1422_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c20_channel_dout),
    .ap_return(fft_stage1422_U0_ap_return)
);

fwd_fft_fft_stage1523 fft_stage1523_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage1523_U0_ap_start),
    .ap_done(fft_stage1523_U0_ap_done),
    .ap_continue(fft_stage1523_U0_ap_continue),
    .ap_idle(fft_stage1523_U0_ap_idle),
    .ap_ready(fft_stage1523_U0_ap_ready),
    .IN_r_address0(fft_stage1523_U0_IN_r_address0),
    .IN_r_ce0(fft_stage1523_U0_IN_r_ce0),
    .IN_r_q0(out_data_5_t_q0),
    .IN_r_address1(fft_stage1523_U0_IN_r_address1),
    .IN_r_ce1(fft_stage1523_U0_IN_r_ce1),
    .IN_r_q1(out_data_5_t_q1),
    .OUT_r_address0(fft_stage1523_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage1523_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage1523_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage1523_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage1523_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage1523_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage1523_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage1523_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c19_channel_dout),
    .ap_return(fft_stage1523_U0_ap_return)
);

fwd_fft_buf_2_stream24 buf_2_stream24_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(buf_2_stream24_U0_ap_start),
    .ap_done(buf_2_stream24_U0_ap_done),
    .ap_continue(buf_2_stream24_U0_ap_continue),
    .ap_idle(buf_2_stream24_U0_ap_idle),
    .ap_ready(buf_2_stream24_U0_ap_ready),
    .c_fft_row_op_st_din(buf_2_stream24_U0_c_fft_row_op_st_din),
    .c_fft_row_op_st_full_n(c_fft_row_op_st_full_n),
    .c_fft_row_op_st_write(buf_2_stream24_U0_c_fft_row_op_st_write),
    .output_buffer_address0(buf_2_stream24_U0_output_buffer_address0),
    .output_buffer_ce0(buf_2_stream24_U0_output_buffer_ce0),
    .output_buffer_q0(out_data_6_t_q0),
    .p_read(ctrl1_reg_c_channel_dout)
);

fwd_fft_fifo_w32_d2_S ctrl1_reg_c24_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(stream_2_buf17_U0_ap_return),
    .if_full_n(ctrl1_reg_c24_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c24_channel),
    .if_dout(ctrl1_reg_c24_channel_dout),
    .if_empty_n(ctrl1_reg_c24_channel_empty_n),
    .if_read(fft_stage1018_U0_ap_ready)
);

fwd_fft_fifo_w32_d2_S ctrl1_reg_c23_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage1018_U0_ap_return),
    .if_full_n(ctrl1_reg_c23_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c23_channel),
    .if_dout(ctrl1_reg_c23_channel_dout),
    .if_empty_n(ctrl1_reg_c23_channel_empty_n),
    .if_read(fft_stage1119_U0_ap_ready)
);

fwd_fft_fifo_w32_d2_S ctrl1_reg_c22_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage1119_U0_ap_return),
    .if_full_n(ctrl1_reg_c22_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c22_channel),
    .if_dout(ctrl1_reg_c22_channel_dout),
    .if_empty_n(ctrl1_reg_c22_channel_empty_n),
    .if_read(fft_stage1220_U0_ap_ready)
);

fwd_fft_fifo_w16_d2_S ctrl1_reg_c21_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage1220_U0_ap_return),
    .if_full_n(ctrl1_reg_c21_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c21_channel),
    .if_dout(ctrl1_reg_c21_channel_dout),
    .if_empty_n(ctrl1_reg_c21_channel_empty_n),
    .if_read(fft_stage1321_U0_ap_ready)
);

fwd_fft_fifo_w16_d2_S ctrl1_reg_c20_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage1321_U0_ap_return),
    .if_full_n(ctrl1_reg_c20_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c20_channel),
    .if_dout(ctrl1_reg_c20_channel_dout),
    .if_empty_n(ctrl1_reg_c20_channel_empty_n),
    .if_read(fft_stage1422_U0_ap_ready)
);

fwd_fft_fifo_w16_d2_S ctrl1_reg_c19_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage1422_U0_ap_return),
    .if_full_n(ctrl1_reg_c19_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c19_channel),
    .if_dout(ctrl1_reg_c19_channel_dout),
    .if_empty_n(ctrl1_reg_c19_channel_empty_n),
    .if_read(fft_stage1523_U0_ap_ready)
);

fwd_fft_fifo_w8_d2_S ctrl1_reg_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage1523_U0_ap_return),
    .if_full_n(ctrl1_reg_c_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c_channel),
    .if_dout(ctrl1_reg_c_channel_dout),
    .if_empty_n(ctrl1_reg_c_channel_empty_n),
    .if_read(buf_2_stream24_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c19_channel <= 1'b0;
    end else begin
        if (((fft_stage1422_U0_ap_done & fft_stage1422_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c19_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c19_channel <= ap_sync_channel_write_ctrl1_reg_c19_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c20_channel <= 1'b0;
    end else begin
        if (((fft_stage1321_U0_ap_done & fft_stage1321_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c20_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c20_channel <= ap_sync_channel_write_ctrl1_reg_c20_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c21_channel <= 1'b0;
    end else begin
        if (((fft_stage1220_U0_ap_done & fft_stage1220_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c21_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c21_channel <= ap_sync_channel_write_ctrl1_reg_c21_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c22_channel <= 1'b0;
    end else begin
        if (((fft_stage1119_U0_ap_done & fft_stage1119_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c22_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c22_channel <= ap_sync_channel_write_ctrl1_reg_c22_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c23_channel <= 1'b0;
    end else begin
        if (((fft_stage1018_U0_ap_done & fft_stage1018_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c23_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c23_channel <= ap_sync_channel_write_ctrl1_reg_c23_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c24_channel <= 1'b0;
    end else begin
        if (((stream_2_buf17_U0_ap_done & stream_2_buf17_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c24_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c24_channel <= ap_sync_channel_write_ctrl1_reg_c24_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c_channel <= 1'b0;
    end else begin
        if (((fft_stage1523_U0_ap_done & fft_stage1523_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c_channel <= ap_sync_channel_write_ctrl1_reg_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_input_data <= 1'b0;
    end else begin
        if (((stream_2_buf17_U0_ap_done & stream_2_buf17_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_input_data <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_input_data <= ap_sync_channel_write_input_data;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_1 <= 1'b0;
    end else begin
        if (((fft_stage1018_U0_ap_done & fft_stage1018_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_1 <= ap_sync_channel_write_out_data_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_2 <= 1'b0;
    end else begin
        if (((fft_stage1119_U0_ap_done & fft_stage1119_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_2 <= ap_sync_channel_write_out_data_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_3 <= 1'b0;
    end else begin
        if (((fft_stage1220_U0_ap_done & fft_stage1220_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_3 <= ap_sync_channel_write_out_data_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_4 <= 1'b0;
    end else begin
        if (((fft_stage1321_U0_ap_done & fft_stage1321_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_4 <= ap_sync_channel_write_out_data_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_5 <= 1'b0;
    end else begin
        if (((fft_stage1422_U0_ap_done & fft_stage1422_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_5 <= ap_sync_channel_write_out_data_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_6 <= 1'b0;
    end else begin
        if (((fft_stage1523_U0_ap_done & fft_stage1523_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_6 <= ap_sync_channel_write_out_data_6;
        end
    end
end

assign ap_channel_done_ctrl1_reg_c19_channel = (fft_stage1422_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c19_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c20_channel = (fft_stage1321_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c20_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c21_channel = (fft_stage1220_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c21_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c22_channel = (fft_stage1119_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c22_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c23_channel = (fft_stage1018_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c23_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c24_channel = (stream_2_buf17_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c24_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c_channel = (fft_stage1523_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c_channel ^ 1'b1));

assign ap_channel_done_input_data = (stream_2_buf17_U0_ap_done & (ap_sync_reg_channel_write_input_data ^ 1'b1));

assign ap_channel_done_out_data_1 = (fft_stage1018_U0_ap_done & (ap_sync_reg_channel_write_out_data_1 ^ 1'b1));

assign ap_channel_done_out_data_2 = (fft_stage1119_U0_ap_done & (ap_sync_reg_channel_write_out_data_2 ^ 1'b1));

assign ap_channel_done_out_data_3 = (fft_stage1220_U0_ap_done & (ap_sync_reg_channel_write_out_data_3 ^ 1'b1));

assign ap_channel_done_out_data_4 = (fft_stage1321_U0_ap_done & (ap_sync_reg_channel_write_out_data_4 ^ 1'b1));

assign ap_channel_done_out_data_5 = (fft_stage1422_U0_ap_done & (ap_sync_reg_channel_write_out_data_5 ^ 1'b1));

assign ap_channel_done_out_data_6 = (fft_stage1523_U0_ap_done & (ap_sync_reg_channel_write_out_data_6 ^ 1'b1));

assign ap_done = buf_2_stream24_U0_ap_done;

assign ap_idle = (stream_2_buf17_U0_ap_idle & fft_stage1523_U0_ap_idle & fft_stage1422_U0_ap_idle & fft_stage1321_U0_ap_idle & fft_stage1220_U0_ap_idle & fft_stage1119_U0_ap_idle & fft_stage1018_U0_ap_idle & (ctrl1_reg_c_channel_empty_n ^ 1'b1) & (ctrl1_reg_c19_channel_empty_n ^ 1'b1) & (ctrl1_reg_c20_channel_empty_n ^ 1'b1) & (ctrl1_reg_c21_channel_empty_n ^ 1'b1) & (ctrl1_reg_c22_channel_empty_n ^ 1'b1) & (ctrl1_reg_c23_channel_empty_n ^ 1'b1) & (ctrl1_reg_c24_channel_empty_n ^ 1'b1) & (out_data_6_t_empty_n ^ 1'b1) & (out_data_5_t_empty_n ^ 1'b1) & (out_data_4_t_empty_n ^ 1'b1) & (out_data_3_t_empty_n ^ 1'b1) & (out_data_2_t_empty_n ^ 1'b1) & (out_data_1_t_empty_n ^ 1'b1) & (input_data_t_empty_n ^ 1'b1) & buf_2_stream24_U0_ap_idle);

assign ap_ready = stream_2_buf17_U0_ap_ready;

assign ap_sync_channel_write_ctrl1_reg_c19_channel = ((ctrl1_reg_c19_channel_full_n & ap_channel_done_ctrl1_reg_c19_channel) | ap_sync_reg_channel_write_ctrl1_reg_c19_channel);

assign ap_sync_channel_write_ctrl1_reg_c20_channel = ((ctrl1_reg_c20_channel_full_n & ap_channel_done_ctrl1_reg_c20_channel) | ap_sync_reg_channel_write_ctrl1_reg_c20_channel);

assign ap_sync_channel_write_ctrl1_reg_c21_channel = ((ctrl1_reg_c21_channel_full_n & ap_channel_done_ctrl1_reg_c21_channel) | ap_sync_reg_channel_write_ctrl1_reg_c21_channel);

assign ap_sync_channel_write_ctrl1_reg_c22_channel = ((ctrl1_reg_c22_channel_full_n & ap_channel_done_ctrl1_reg_c22_channel) | ap_sync_reg_channel_write_ctrl1_reg_c22_channel);

assign ap_sync_channel_write_ctrl1_reg_c23_channel = ((ctrl1_reg_c23_channel_full_n & ap_channel_done_ctrl1_reg_c23_channel) | ap_sync_reg_channel_write_ctrl1_reg_c23_channel);

assign ap_sync_channel_write_ctrl1_reg_c24_channel = ((ctrl1_reg_c24_channel_full_n & ap_channel_done_ctrl1_reg_c24_channel) | ap_sync_reg_channel_write_ctrl1_reg_c24_channel);

assign ap_sync_channel_write_ctrl1_reg_c_channel = ((ctrl1_reg_c_channel_full_n & ap_channel_done_ctrl1_reg_c_channel) | ap_sync_reg_channel_write_ctrl1_reg_c_channel);

assign ap_sync_channel_write_input_data = ((stream_2_buf17_U0_input_buffer_full_n & ap_channel_done_input_data) | ap_sync_reg_channel_write_input_data);

assign ap_sync_channel_write_out_data_1 = ((fft_stage1018_U0_OUT_r_full_n & ap_channel_done_out_data_1) | ap_sync_reg_channel_write_out_data_1);

assign ap_sync_channel_write_out_data_2 = ((fft_stage1119_U0_OUT_r_full_n & ap_channel_done_out_data_2) | ap_sync_reg_channel_write_out_data_2);

assign ap_sync_channel_write_out_data_3 = ((fft_stage1220_U0_OUT_r_full_n & ap_channel_done_out_data_3) | ap_sync_reg_channel_write_out_data_3);

assign ap_sync_channel_write_out_data_4 = ((fft_stage1321_U0_OUT_r_full_n & ap_channel_done_out_data_4) | ap_sync_reg_channel_write_out_data_4);

assign ap_sync_channel_write_out_data_5 = ((fft_stage1422_U0_OUT_r_full_n & ap_channel_done_out_data_5) | ap_sync_reg_channel_write_out_data_5);

assign ap_sync_channel_write_out_data_6 = ((fft_stage1523_U0_OUT_r_full_n & ap_channel_done_out_data_6) | ap_sync_reg_channel_write_out_data_6);

assign buf_2_stream24_U0_ap_continue = ap_continue;

assign buf_2_stream24_U0_ap_start = (out_data_6_t_empty_n & ctrl1_reg_c_channel_empty_n);

assign c_fft_row_op_st_din = buf_2_stream24_U0_c_fft_row_op_st_din;

assign c_fft_row_op_st_write = buf_2_stream24_U0_c_fft_row_op_st_write;

assign c_ifmap_col_op_st_read = stream_2_buf17_U0_c_ifmap_col_op_st_read;

assign ctrl1_reg_c191_din = stream_2_buf17_U0_ctrl1_reg_c191_din;

assign ctrl1_reg_c191_write = stream_2_buf17_U0_ctrl1_reg_c191_write;

assign ctrl1_reg_read = stream_2_buf17_U0_ctrl1_reg_read;

assign fft_stage1018_U0_OUT_r_full_n = out_data_1_i_full_n;

assign fft_stage1018_U0_ap_continue = (ap_sync_channel_write_out_data_1 & ap_sync_channel_write_ctrl1_reg_c23_channel);

assign fft_stage1018_U0_ap_start = (input_data_t_empty_n & ctrl1_reg_c24_channel_empty_n);

assign fft_stage1119_U0_OUT_r_full_n = out_data_2_i_full_n;

assign fft_stage1119_U0_ap_continue = (ap_sync_channel_write_out_data_2 & ap_sync_channel_write_ctrl1_reg_c22_channel);

assign fft_stage1119_U0_ap_start = (out_data_1_t_empty_n & ctrl1_reg_c23_channel_empty_n);

assign fft_stage1220_U0_OUT_r_full_n = out_data_3_i_full_n;

assign fft_stage1220_U0_ap_continue = (ap_sync_channel_write_out_data_3 & ap_sync_channel_write_ctrl1_reg_c21_channel);

assign fft_stage1220_U0_ap_start = (out_data_2_t_empty_n & ctrl1_reg_c22_channel_empty_n);

assign fft_stage1321_U0_OUT_r_full_n = out_data_4_i_full_n;

assign fft_stage1321_U0_ap_continue = (ap_sync_channel_write_out_data_4 & ap_sync_channel_write_ctrl1_reg_c20_channel);

assign fft_stage1321_U0_ap_start = (out_data_3_t_empty_n & ctrl1_reg_c21_channel_empty_n);

assign fft_stage1422_U0_OUT_r_full_n = out_data_5_i_full_n;

assign fft_stage1422_U0_ap_continue = (ap_sync_channel_write_out_data_5 & ap_sync_channel_write_ctrl1_reg_c19_channel);

assign fft_stage1422_U0_ap_start = (out_data_4_t_empty_n & ctrl1_reg_c20_channel_empty_n);

assign fft_stage1523_U0_OUT_r_full_n = out_data_6_i_full_n;

assign fft_stage1523_U0_ap_continue = (ap_sync_channel_write_out_data_6 & ap_sync_channel_write_ctrl1_reg_c_channel);

assign fft_stage1523_U0_ap_start = (out_data_5_t_empty_n & ctrl1_reg_c19_channel_empty_n);

assign stream_2_buf17_U0_ap_continue = (ap_sync_channel_write_input_data & ap_sync_channel_write_ctrl1_reg_c24_channel);

assign stream_2_buf17_U0_ap_start = ap_start;

assign stream_2_buf17_U0_input_buffer_full_n = input_data_i_full_n;

endmodule //fwd_fft_fft16
