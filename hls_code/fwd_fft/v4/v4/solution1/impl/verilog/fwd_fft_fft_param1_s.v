// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fwd_fft_fft_param1_s (
        xn_0_address0,
        xn_0_ce0,
        xn_0_d0,
        xn_0_q0,
        xn_0_we0,
        xn_0_address1,
        xn_0_ce1,
        xn_0_d1,
        xn_0_q1,
        xn_0_we1,
        xn_1_address0,
        xn_1_ce0,
        xn_1_d0,
        xn_1_q0,
        xn_1_we0,
        xn_1_address1,
        xn_1_ce1,
        xn_1_d1,
        xn_1_q1,
        xn_1_we1,
        out_fft_din,
        out_fft_full_n,
        out_fft_write,
        p_read,
        ap_clk,
        ap_rst,
        xn_0_empty_n,
        xn_0_read,
        xn_1_empty_n,
        xn_1_read,
        p_read_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


output  [5:0] xn_0_address0;
output   xn_0_ce0;
output  [31:0] xn_0_d0;
input  [31:0] xn_0_q0;
output   xn_0_we0;
output  [5:0] xn_0_address1;
output   xn_0_ce1;
output  [31:0] xn_0_d1;
input  [31:0] xn_0_q1;
output   xn_0_we1;
output  [5:0] xn_1_address0;
output   xn_1_ce0;
output  [31:0] xn_1_d0;
input  [31:0] xn_1_q0;
output   xn_1_we0;
output  [5:0] xn_1_address1;
output   xn_1_ce1;
output  [31:0] xn_1_d1;
input  [31:0] xn_1_q1;
output   xn_1_we1;
output  [63:0] out_fft_din;
input   out_fft_full_n;
output   out_fft_write;
input  [15:0] p_read;
input   ap_clk;
input   ap_rst;
input   xn_0_empty_n;
output   xn_0_read;
input   xn_1_empty_n;
output   xn_1_read;
input   p_read_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    fft_copy_param1_complex_float_16_U0_ap_start;
wire    fft_copy_param1_complex_float_16_U0_start_full_n;
wire    fft_copy_param1_complex_float_16_U0_ap_done;
wire    fft_copy_param1_complex_float_16_U0_ap_continue;
wire    fft_copy_param1_complex_float_16_U0_ap_idle;
wire    fft_copy_param1_complex_float_16_U0_ap_ready;
wire    fft_copy_param1_complex_float_16_U0_start_out;
wire    fft_copy_param1_complex_float_16_U0_start_write;
wire   [5:0] fft_copy_param1_complex_float_16_U0_in_0_address0;
wire    fft_copy_param1_complex_float_16_U0_in_0_ce0;
wire   [5:0] fft_copy_param1_complex_float_16_U0_in_1_address0;
wire    fft_copy_param1_complex_float_16_U0_in_1_ce0;
wire   [63:0] fft_copy_param1_complex_float_16_U0_xn1_din;
wire    fft_copy_param1_complex_float_16_U0_xn1_write;
wire   [15:0] fft_copy_param1_complex_float_16_U0_config_s2_din;
wire    fft_copy_param1_complex_float_16_U0_config_s2_write;
wire    fft_copy_param1_complex_float_16_U0_in_0_write;
wire    fft_copy_param1_complex_float_16_U0_in_1_write;
wire    fft_syn_param1_32_32_16_1_1_U0_ap_start;
wire    fft_syn_param1_32_32_16_1_1_U0_ap_done;
wire    fft_syn_param1_32_32_16_1_1_U0_ap_idle;
wire    fft_syn_param1_32_32_16_1_1_U0_ap_ready;
wire    fft_syn_param1_32_32_16_1_1_U0_ap_continue;
wire    fft_syn_param1_32_32_16_1_1_U0_xn_read;
wire   [63:0] fft_syn_param1_32_32_16_1_1_U0_xk_din;
wire    fft_syn_param1_32_32_16_1_1_U0_xk_write;
wire   [7:0] fft_syn_param1_32_32_16_1_1_U0_status_data_V_din;
wire    fft_syn_param1_32_32_16_1_1_U0_status_data_V_write;
wire    fft_syn_param1_32_32_16_1_1_U0_config_ch_data_V_read;
wire    ap_sync_continue;
wire    fft_param1_Block_split25_proc8_U0_ap_start;
wire    fft_param1_Block_split25_proc8_U0_ap_done;
wire    fft_param1_Block_split25_proc8_U0_ap_continue;
wire    fft_param1_Block_split25_proc8_U0_ap_idle;
wire    fft_param1_Block_split25_proc8_U0_ap_ready;
wire    fft_param1_Block_split25_proc8_U0_status_s_read;
wire    xn1_full_n;
wire   [63:0] xn1_dout;
wire    xn1_empty_n;
wire    config_s_full_n;
wire   [15:0] config_s_dout;
wire    config_s_empty_n;
wire    status_s_full_n;
wire   [7:0] status_s_dout;
wire    status_s_empty_n;
wire    ap_sync_done;
wire   [0:0] start_for_fft_syn_param1_32_32_16_1_1_U0_din;
wire    start_for_fft_syn_param1_32_32_16_1_1_U0_full_n;
wire   [0:0] start_for_fft_syn_param1_32_32_16_1_1_U0_dout;
wire    start_for_fft_syn_param1_32_32_16_1_1_U0_empty_n;
wire   [0:0] start_for_fft_param1_Block_split25_proc8_U0_din;
wire    start_for_fft_param1_Block_split25_proc8_U0_full_n;
wire   [0:0] start_for_fft_param1_Block_split25_proc8_U0_dout;
wire    start_for_fft_param1_Block_split25_proc8_U0_empty_n;

fwd_fft_fft_copy_param1_complex_float_16_s fft_copy_param1_complex_float_16_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_copy_param1_complex_float_16_U0_ap_start),
    .start_full_n(fft_copy_param1_complex_float_16_U0_start_full_n),
    .ap_done(fft_copy_param1_complex_float_16_U0_ap_done),
    .ap_continue(fft_copy_param1_complex_float_16_U0_ap_continue),
    .ap_idle(fft_copy_param1_complex_float_16_U0_ap_idle),
    .ap_ready(fft_copy_param1_complex_float_16_U0_ap_ready),
    .start_out(fft_copy_param1_complex_float_16_U0_start_out),
    .start_write(fft_copy_param1_complex_float_16_U0_start_write),
    .in_0_address0(fft_copy_param1_complex_float_16_U0_in_0_address0),
    .in_0_ce0(fft_copy_param1_complex_float_16_U0_in_0_ce0),
    .in_0_q0(xn_0_q0),
    .in_1_address0(fft_copy_param1_complex_float_16_U0_in_1_address0),
    .in_1_ce0(fft_copy_param1_complex_float_16_U0_in_1_ce0),
    .in_1_q0(xn_1_q0),
    .xn1_din(fft_copy_param1_complex_float_16_U0_xn1_din),
    .xn1_full_n(xn1_full_n),
    .xn1_write(fft_copy_param1_complex_float_16_U0_xn1_write),
    .p_read(p_read),
    .config_s2_din(fft_copy_param1_complex_float_16_U0_config_s2_din),
    .config_s2_full_n(config_s_full_n),
    .config_s2_write(fft_copy_param1_complex_float_16_U0_config_s2_write)
);

fwd_fft_fft_syn_param1_32_32_16_1_1_s fft_syn_param1_32_32_16_1_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_syn_param1_32_32_16_1_1_U0_ap_start),
    .ap_ce(1'b1),
    .ap_done(fft_syn_param1_32_32_16_1_1_U0_ap_done),
    .ap_idle(fft_syn_param1_32_32_16_1_1_U0_ap_idle),
    .ap_ready(fft_syn_param1_32_32_16_1_1_U0_ap_ready),
    .ap_continue(fft_syn_param1_32_32_16_1_1_U0_ap_continue),
    .xn_dout(xn1_dout),
    .xn_empty_n(xn1_empty_n),
    .xn_read(fft_syn_param1_32_32_16_1_1_U0_xn_read),
    .xk_din(fft_syn_param1_32_32_16_1_1_U0_xk_din),
    .xk_full_n(out_fft_full_n),
    .xk_write(fft_syn_param1_32_32_16_1_1_U0_xk_write),
    .status_data_V_din(fft_syn_param1_32_32_16_1_1_U0_status_data_V_din),
    .status_data_V_full_n(status_s_full_n),
    .status_data_V_write(fft_syn_param1_32_32_16_1_1_U0_status_data_V_write),
    .config_ch_data_V_dout(config_s_dout),
    .config_ch_data_V_empty_n(config_s_empty_n),
    .config_ch_data_V_read(fft_syn_param1_32_32_16_1_1_U0_config_ch_data_V_read)
);

fwd_fft_fft_param1_Block_split25_proc8 fft_param1_Block_split25_proc8_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_param1_Block_split25_proc8_U0_ap_start),
    .ap_done(fft_param1_Block_split25_proc8_U0_ap_done),
    .ap_continue(fft_param1_Block_split25_proc8_U0_ap_continue),
    .ap_idle(fft_param1_Block_split25_proc8_U0_ap_idle),
    .ap_ready(fft_param1_Block_split25_proc8_U0_ap_ready),
    .status_s_dout(status_s_dout),
    .status_s_empty_n(status_s_empty_n),
    .status_s_read(fft_param1_Block_split25_proc8_U0_status_s_read)
);

fwd_fft_fifo_w64_d16_S xn1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_copy_param1_complex_float_16_U0_xn1_din),
    .if_full_n(xn1_full_n),
    .if_write(fft_copy_param1_complex_float_16_U0_xn1_write),
    .if_dout(xn1_dout),
    .if_empty_n(xn1_empty_n),
    .if_read(fft_syn_param1_32_32_16_1_1_U0_xn_read)
);

fwd_fft_fifo_w16_d2_S config_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_copy_param1_complex_float_16_U0_config_s2_din),
    .if_full_n(config_s_full_n),
    .if_write(fft_copy_param1_complex_float_16_U0_config_s2_write),
    .if_dout(config_s_dout),
    .if_empty_n(config_s_empty_n),
    .if_read(fft_syn_param1_32_32_16_1_1_U0_config_ch_data_V_read)
);

fwd_fft_fifo_w8_d2_S status_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_syn_param1_32_32_16_1_1_U0_status_data_V_din),
    .if_full_n(status_s_full_n),
    .if_write(fft_syn_param1_32_32_16_1_1_U0_status_data_V_write),
    .if_dout(status_s_dout),
    .if_empty_n(status_s_empty_n),
    .if_read(fft_param1_Block_split25_proc8_U0_status_s_read)
);

fwd_fft_start_for_fft_syn_param1_32_32_16_1_1_U0 start_for_fft_syn_param1_32_32_16_1_1_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_fft_syn_param1_32_32_16_1_1_U0_din),
    .if_full_n(start_for_fft_syn_param1_32_32_16_1_1_U0_full_n),
    .if_write(fft_copy_param1_complex_float_16_U0_start_write),
    .if_dout(start_for_fft_syn_param1_32_32_16_1_1_U0_dout),
    .if_empty_n(start_for_fft_syn_param1_32_32_16_1_1_U0_empty_n),
    .if_read(fft_syn_param1_32_32_16_1_1_U0_ap_ready)
);

fwd_fft_start_for_fft_param1_Block_split25_proc8_U0 start_for_fft_param1_Block_split25_proc8_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_fft_param1_Block_split25_proc8_U0_din),
    .if_full_n(start_for_fft_param1_Block_split25_proc8_U0_full_n),
    .if_write(fft_copy_param1_complex_float_16_U0_start_write),
    .if_dout(start_for_fft_param1_Block_split25_proc8_U0_dout),
    .if_empty_n(start_for_fft_param1_Block_split25_proc8_U0_empty_n),
    .if_read(fft_param1_Block_split25_proc8_U0_ap_ready)
);

assign ap_done = ap_sync_done;

assign ap_idle = (fft_syn_param1_32_32_16_1_1_U0_ap_idle & fft_param1_Block_split25_proc8_U0_ap_idle & fft_copy_param1_complex_float_16_U0_ap_idle);

assign ap_ready = fft_copy_param1_complex_float_16_U0_ap_ready;

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (fft_syn_param1_32_32_16_1_1_U0_ap_done & fft_param1_Block_split25_proc8_U0_ap_done);

assign fft_copy_param1_complex_float_16_U0_ap_continue = 1'b1;

assign fft_copy_param1_complex_float_16_U0_ap_start = ap_start;

assign fft_copy_param1_complex_float_16_U0_in_0_write = 1'b0;

assign fft_copy_param1_complex_float_16_U0_in_1_write = 1'b0;

assign fft_copy_param1_complex_float_16_U0_start_full_n = (start_for_fft_syn_param1_32_32_16_1_1_U0_full_n & start_for_fft_param1_Block_split25_proc8_U0_full_n);

assign fft_param1_Block_split25_proc8_U0_ap_continue = ap_sync_continue;

assign fft_param1_Block_split25_proc8_U0_ap_start = start_for_fft_param1_Block_split25_proc8_U0_empty_n;

assign fft_syn_param1_32_32_16_1_1_U0_ap_continue = ap_sync_continue;

assign fft_syn_param1_32_32_16_1_1_U0_ap_start = start_for_fft_syn_param1_32_32_16_1_1_U0_empty_n;

assign out_fft_din = fft_syn_param1_32_32_16_1_1_U0_xk_din;

assign out_fft_write = fft_syn_param1_32_32_16_1_1_U0_xk_write;

assign start_for_fft_param1_Block_split25_proc8_U0_din = 1'b1;

assign start_for_fft_syn_param1_32_32_16_1_1_U0_din = 1'b1;

assign xn_0_address0 = fft_copy_param1_complex_float_16_U0_in_0_address0;

assign xn_0_address1 = 6'd0;

assign xn_0_ce0 = fft_copy_param1_complex_float_16_U0_in_0_ce0;

assign xn_0_ce1 = 1'b0;

assign xn_0_d0 = 32'd0;

assign xn_0_d1 = 32'd0;

assign xn_0_read = fft_copy_param1_complex_float_16_U0_in_0_write;

assign xn_0_we0 = 1'b0;

assign xn_0_we1 = 1'b0;

assign xn_1_address0 = fft_copy_param1_complex_float_16_U0_in_1_address0;

assign xn_1_address1 = 6'd0;

assign xn_1_ce0 = fft_copy_param1_complex_float_16_U0_in_1_ce0;

assign xn_1_ce1 = 1'b0;

assign xn_1_d0 = 32'd0;

assign xn_1_d1 = 32'd0;

assign xn_1_read = fft_copy_param1_complex_float_16_U0_in_1_write;

assign xn_1_we0 = 1'b0;

assign xn_1_we1 = 1'b0;

endmodule //fwd_fft_fft_param1_s
