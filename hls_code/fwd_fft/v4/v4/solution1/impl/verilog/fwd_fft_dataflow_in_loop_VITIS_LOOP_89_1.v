// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fwd_fft_dataflow_in_loop_VITIS_LOOP_89_1 (
        ap_clk,
        ap_rst,
        c_ifmap_col_op_st_dout,
        c_ifmap_col_op_st_empty_n,
        c_ifmap_col_op_st_read,
        p_read,
        c_fft_row_op_st_din,
        c_fft_row_op_st_full_n,
        c_fft_row_op_st_write,
        p_read_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_clk;
input   ap_rst;
input  [63:0] c_ifmap_col_op_st_dout;
input   c_ifmap_col_op_st_empty_n;
output   c_ifmap_col_op_st_read;
input  [31:0] p_read;
output  [63:0] c_fft_row_op_st_din;
input   c_fft_row_op_st_full_n;
output   c_fft_row_op_st_write;
input   p_read_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire   [63:0] input_data1_i_q0;
wire   [63:0] input_data1_t_q0;
wire   [63:0] input_data_rev2_i_q0;
wire   [63:0] input_data_rev2_i_q1;
wire   [63:0] input_data_rev2_t_q0;
wire   [63:0] input_data_rev2_t_q1;
wire   [63:0] out_data_13_i_q0;
wire   [63:0] out_data_13_i_q1;
wire   [63:0] out_data_13_t_q0;
wire   [63:0] out_data_13_t_q1;
wire   [63:0] out_data_24_i_q0;
wire   [63:0] out_data_24_i_q1;
wire   [63:0] out_data_24_t_q0;
wire   [63:0] out_data_24_t_q1;
wire   [63:0] out_data_35_i_q0;
wire   [63:0] out_data_35_i_q1;
wire   [63:0] out_data_35_t_q0;
wire   [63:0] out_data_35_t_q1;
wire   [63:0] out_data_46_i_q0;
wire   [63:0] out_data_46_i_q1;
wire   [63:0] out_data_46_t_q0;
wire   [63:0] out_data_46_t_q1;
wire   [63:0] out_data_57_i_q0;
wire   [63:0] out_data_57_i_q1;
wire   [63:0] out_data_57_t_q0;
wire   [63:0] out_data_57_t_q1;
wire   [63:0] out_data_68_i_q0;
wire   [63:0] out_data_68_t_q0;
wire    stream_2_buf18_U0_ap_start;
wire    stream_2_buf18_U0_ap_done;
wire    stream_2_buf18_U0_ap_continue;
wire    stream_2_buf18_U0_ap_idle;
wire    stream_2_buf18_U0_ap_ready;
wire    stream_2_buf18_U0_c_row_op_trans_st_read;
wire   [5:0] stream_2_buf18_U0_input_buffer_address0;
wire    stream_2_buf18_U0_input_buffer_ce0;
wire    stream_2_buf18_U0_input_buffer_we0;
wire   [63:0] stream_2_buf18_U0_input_buffer_d0;
wire   [31:0] stream_2_buf18_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c7_channel;
wire    ctrl1_reg_c7_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c7_channel;
wire    ap_sync_channel_write_ctrl1_reg_c7_channel;
wire    ap_channel_done_input_data1;
wire    stream_2_buf18_U0_input_buffer_full_n;
reg    ap_sync_reg_channel_write_input_data1;
wire    ap_sync_channel_write_input_data1;
wire    bit_reversal19_U0_ap_start;
wire    bit_reversal19_U0_ap_done;
wire    bit_reversal19_U0_ap_continue;
wire    bit_reversal19_U0_ap_idle;
wire    bit_reversal19_U0_ap_ready;
wire   [5:0] bit_reversal19_U0_IN_r_address0;
wire    bit_reversal19_U0_IN_r_ce0;
wire   [5:0] bit_reversal19_U0_OUT_r_address0;
wire    bit_reversal19_U0_OUT_r_ce0;
wire    bit_reversal19_U0_OUT_r_we0;
wire   [63:0] bit_reversal19_U0_OUT_r_d0;
wire   [31:0] bit_reversal19_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c6_channel;
wire    ctrl1_reg_c6_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c6_channel;
wire    ap_sync_channel_write_ctrl1_reg_c6_channel;
wire    ap_channel_done_input_data_rev2;
wire    bit_reversal19_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_input_data_rev2;
wire    ap_sync_channel_write_input_data_rev2;
wire    fft_stage_0_020_U0_ap_start;
wire    fft_stage_0_020_U0_ap_done;
wire    fft_stage_0_020_U0_ap_continue;
wire    fft_stage_0_020_U0_ap_idle;
wire    fft_stage_0_020_U0_ap_ready;
wire   [5:0] fft_stage_0_020_U0_IN_r_address0;
wire    fft_stage_0_020_U0_IN_r_ce0;
wire   [5:0] fft_stage_0_020_U0_IN_r_address1;
wire    fft_stage_0_020_U0_IN_r_ce1;
wire   [5:0] fft_stage_0_020_U0_OUT_r_address0;
wire    fft_stage_0_020_U0_OUT_r_ce0;
wire    fft_stage_0_020_U0_OUT_r_we0;
wire   [63:0] fft_stage_0_020_U0_OUT_r_d0;
wire   [5:0] fft_stage_0_020_U0_OUT_r_address1;
wire    fft_stage_0_020_U0_OUT_r_ce1;
wire    fft_stage_0_020_U0_OUT_r_we1;
wire   [63:0] fft_stage_0_020_U0_OUT_r_d1;
wire   [31:0] fft_stage_0_020_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c5_channel;
wire    ctrl1_reg_c5_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c5_channel;
wire    ap_sync_channel_write_ctrl1_reg_c5_channel;
wire    ap_channel_done_out_data_13;
wire    fft_stage_0_020_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_13;
wire    ap_sync_channel_write_out_data_13;
wire    fft_stage_1_021_U0_ap_start;
wire    fft_stage_1_021_U0_ap_done;
wire    fft_stage_1_021_U0_ap_continue;
wire    fft_stage_1_021_U0_ap_idle;
wire    fft_stage_1_021_U0_ap_ready;
wire   [5:0] fft_stage_1_021_U0_IN_r_address0;
wire    fft_stage_1_021_U0_IN_r_ce0;
wire   [5:0] fft_stage_1_021_U0_IN_r_address1;
wire    fft_stage_1_021_U0_IN_r_ce1;
wire   [5:0] fft_stage_1_021_U0_OUT_r_address0;
wire    fft_stage_1_021_U0_OUT_r_ce0;
wire    fft_stage_1_021_U0_OUT_r_we0;
wire   [63:0] fft_stage_1_021_U0_OUT_r_d0;
wire   [5:0] fft_stage_1_021_U0_OUT_r_address1;
wire    fft_stage_1_021_U0_OUT_r_ce1;
wire    fft_stage_1_021_U0_OUT_r_we1;
wire   [63:0] fft_stage_1_021_U0_OUT_r_d1;
wire   [31:0] fft_stage_1_021_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c4_channel;
wire    ctrl1_reg_c4_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c4_channel;
wire    ap_sync_channel_write_ctrl1_reg_c4_channel;
wire    ap_channel_done_out_data_24;
wire    fft_stage_1_021_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_24;
wire    ap_sync_channel_write_out_data_24;
wire    fft_stage_2_022_U0_ap_start;
wire    fft_stage_2_022_U0_ap_done;
wire    fft_stage_2_022_U0_ap_continue;
wire    fft_stage_2_022_U0_ap_idle;
wire    fft_stage_2_022_U0_ap_ready;
wire   [5:0] fft_stage_2_022_U0_IN_r_address0;
wire    fft_stage_2_022_U0_IN_r_ce0;
wire   [5:0] fft_stage_2_022_U0_IN_r_address1;
wire    fft_stage_2_022_U0_IN_r_ce1;
wire   [5:0] fft_stage_2_022_U0_OUT_r_address0;
wire    fft_stage_2_022_U0_OUT_r_ce0;
wire    fft_stage_2_022_U0_OUT_r_we0;
wire   [63:0] fft_stage_2_022_U0_OUT_r_d0;
wire   [5:0] fft_stage_2_022_U0_OUT_r_address1;
wire    fft_stage_2_022_U0_OUT_r_ce1;
wire    fft_stage_2_022_U0_OUT_r_we1;
wire   [63:0] fft_stage_2_022_U0_OUT_r_d1;
wire   [15:0] fft_stage_2_022_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c3_channel;
wire    ctrl1_reg_c3_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c3_channel;
wire    ap_sync_channel_write_ctrl1_reg_c3_channel;
wire    ap_channel_done_out_data_35;
wire    fft_stage_2_022_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_35;
wire    ap_sync_channel_write_out_data_35;
wire    fft_stage_3_023_U0_ap_start;
wire    fft_stage_3_023_U0_ap_done;
wire    fft_stage_3_023_U0_ap_continue;
wire    fft_stage_3_023_U0_ap_idle;
wire    fft_stage_3_023_U0_ap_ready;
wire   [5:0] fft_stage_3_023_U0_IN_r_address0;
wire    fft_stage_3_023_U0_IN_r_ce0;
wire   [5:0] fft_stage_3_023_U0_IN_r_address1;
wire    fft_stage_3_023_U0_IN_r_ce1;
wire   [5:0] fft_stage_3_023_U0_OUT_r_address0;
wire    fft_stage_3_023_U0_OUT_r_ce0;
wire    fft_stage_3_023_U0_OUT_r_we0;
wire   [63:0] fft_stage_3_023_U0_OUT_r_d0;
wire   [5:0] fft_stage_3_023_U0_OUT_r_address1;
wire    fft_stage_3_023_U0_OUT_r_ce1;
wire    fft_stage_3_023_U0_OUT_r_we1;
wire   [63:0] fft_stage_3_023_U0_OUT_r_d1;
wire   [15:0] fft_stage_3_023_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c2_channel;
wire    ctrl1_reg_c2_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c2_channel;
wire    ap_sync_channel_write_ctrl1_reg_c2_channel;
wire    ap_channel_done_out_data_46;
wire    fft_stage_3_023_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_46;
wire    ap_sync_channel_write_out_data_46;
wire    fft_stage_4_024_U0_ap_start;
wire    fft_stage_4_024_U0_ap_done;
wire    fft_stage_4_024_U0_ap_continue;
wire    fft_stage_4_024_U0_ap_idle;
wire    fft_stage_4_024_U0_ap_ready;
wire   [5:0] fft_stage_4_024_U0_IN_r_address0;
wire    fft_stage_4_024_U0_IN_r_ce0;
wire   [5:0] fft_stage_4_024_U0_IN_r_address1;
wire    fft_stage_4_024_U0_IN_r_ce1;
wire   [5:0] fft_stage_4_024_U0_OUT_r_address0;
wire    fft_stage_4_024_U0_OUT_r_ce0;
wire    fft_stage_4_024_U0_OUT_r_we0;
wire   [63:0] fft_stage_4_024_U0_OUT_r_d0;
wire   [5:0] fft_stage_4_024_U0_OUT_r_address1;
wire    fft_stage_4_024_U0_OUT_r_ce1;
wire    fft_stage_4_024_U0_OUT_r_we1;
wire   [63:0] fft_stage_4_024_U0_OUT_r_d1;
wire   [15:0] fft_stage_4_024_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c1_channel;
wire    ctrl1_reg_c1_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c1_channel;
wire    ap_sync_channel_write_ctrl1_reg_c1_channel;
wire    ap_channel_done_out_data_57;
wire    fft_stage_4_024_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_57;
wire    ap_sync_channel_write_out_data_57;
wire    fft_stage_5_025_U0_ap_start;
wire    fft_stage_5_025_U0_ap_done;
wire    fft_stage_5_025_U0_ap_continue;
wire    fft_stage_5_025_U0_ap_idle;
wire    fft_stage_5_025_U0_ap_ready;
wire   [5:0] fft_stage_5_025_U0_IN_r_address0;
wire    fft_stage_5_025_U0_IN_r_ce0;
wire   [5:0] fft_stage_5_025_U0_IN_r_address1;
wire    fft_stage_5_025_U0_IN_r_ce1;
wire   [5:0] fft_stage_5_025_U0_OUT_r_address0;
wire    fft_stage_5_025_U0_OUT_r_ce0;
wire    fft_stage_5_025_U0_OUT_r_we0;
wire   [63:0] fft_stage_5_025_U0_OUT_r_d0;
wire   [5:0] fft_stage_5_025_U0_OUT_r_address1;
wire    fft_stage_5_025_U0_OUT_r_ce1;
wire    fft_stage_5_025_U0_OUT_r_we1;
wire   [63:0] fft_stage_5_025_U0_OUT_r_d1;
wire   [7:0] fft_stage_5_025_U0_ap_return;
wire    ap_channel_done_ctrl1_reg_c_channel;
wire    ctrl1_reg_c_channel_full_n;
reg    ap_sync_reg_channel_write_ctrl1_reg_c_channel;
wire    ap_sync_channel_write_ctrl1_reg_c_channel;
wire    ap_channel_done_out_data_68;
wire    fft_stage_5_025_U0_OUT_r_full_n;
reg    ap_sync_reg_channel_write_out_data_68;
wire    ap_sync_channel_write_out_data_68;
wire    buf_2_stream26_U0_ap_start;
wire    buf_2_stream26_U0_ap_done;
wire    buf_2_stream26_U0_ap_continue;
wire    buf_2_stream26_U0_ap_idle;
wire    buf_2_stream26_U0_ap_ready;
wire   [63:0] buf_2_stream26_U0_c_fft_col_op_st_din;
wire    buf_2_stream26_U0_c_fft_col_op_st_write;
wire   [5:0] buf_2_stream26_U0_output_buffer_address0;
wire    buf_2_stream26_U0_output_buffer_ce0;
wire    input_data1_i_full_n;
wire    input_data1_t_empty_n;
wire    input_data_rev2_i_full_n;
wire    input_data_rev2_t_empty_n;
wire    out_data_13_i_full_n;
wire    out_data_13_t_empty_n;
wire    out_data_24_i_full_n;
wire    out_data_24_t_empty_n;
wire    out_data_35_i_full_n;
wire    out_data_35_t_empty_n;
wire    out_data_46_i_full_n;
wire    out_data_46_t_empty_n;
wire    out_data_57_i_full_n;
wire    out_data_57_t_empty_n;
wire    out_data_68_i_full_n;
wire    out_data_68_t_empty_n;
wire   [31:0] ctrl1_reg_c7_channel_dout;
wire    ctrl1_reg_c7_channel_empty_n;
wire   [31:0] ctrl1_reg_c6_channel_dout;
wire    ctrl1_reg_c6_channel_empty_n;
wire   [31:0] ctrl1_reg_c5_channel_dout;
wire    ctrl1_reg_c5_channel_empty_n;
wire   [31:0] ctrl1_reg_c4_channel_dout;
wire    ctrl1_reg_c4_channel_empty_n;
wire   [15:0] ctrl1_reg_c3_channel_dout;
wire    ctrl1_reg_c3_channel_empty_n;
wire   [15:0] ctrl1_reg_c2_channel_dout;
wire    ctrl1_reg_c2_channel_empty_n;
wire   [15:0] ctrl1_reg_c1_channel_dout;
wire    ctrl1_reg_c1_channel_empty_n;
wire   [7:0] ctrl1_reg_c_channel_dout;
wire    ctrl1_reg_c_channel_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_ctrl1_reg_c7_channel = 1'b0;
#0 ap_sync_reg_channel_write_input_data1 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c6_channel = 1'b0;
#0 ap_sync_reg_channel_write_input_data_rev2 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c5_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_13 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c4_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_24 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c3_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_35 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c2_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_46 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c1_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_57 = 1'b0;
#0 ap_sync_reg_channel_write_ctrl1_reg_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_out_data_68 = 1'b0;
end

fwd_fft_dataflow_in_loop_VITIS_LOOP_89_1_input_data1 #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
input_data1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(stream_2_buf18_U0_input_buffer_address0),
    .i_ce0(stream_2_buf18_U0_input_buffer_ce0),
    .i_we0(stream_2_buf18_U0_input_buffer_we0),
    .i_d0(stream_2_buf18_U0_input_buffer_d0),
    .i_q0(input_data1_i_q0),
    .t_address0(bit_reversal19_U0_IN_r_address0),
    .t_ce0(bit_reversal19_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(64'd0),
    .t_q0(input_data1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(input_data1_i_full_n),
    .i_write(ap_channel_done_input_data1),
    .t_empty_n(input_data1_t_empty_n),
    .t_read(bit_reversal19_U0_ap_ready)
);

fwd_fft_dataflow_in_loop_VITIS_LOOP_89_1_input_data_rev2 #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
input_data_rev2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(bit_reversal19_U0_OUT_r_address0),
    .i_ce0(bit_reversal19_U0_OUT_r_ce0),
    .i_we0(bit_reversal19_U0_OUT_r_we0),
    .i_d0(bit_reversal19_U0_OUT_r_d0),
    .i_q0(input_data_rev2_i_q0),
    .i_address1(6'd0),
    .i_ce1(1'b0),
    .i_q1(input_data_rev2_i_q1),
    .t_address0(fft_stage_0_020_U0_IN_r_address0),
    .t_ce0(fft_stage_0_020_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(64'd0),
    .t_q0(input_data_rev2_t_q0),
    .t_address1(fft_stage_0_020_U0_IN_r_address1),
    .t_ce1(fft_stage_0_020_U0_IN_r_ce1),
    .t_q1(input_data_rev2_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(input_data_rev2_i_full_n),
    .i_write(ap_channel_done_input_data_rev2),
    .t_empty_n(input_data_rev2_t_empty_n),
    .t_read(fft_stage_0_020_U0_ap_ready)
);

fwd_fft_dataflow_in_loop_VITIS_LOOP_89_1_out_data_13 #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_0_020_U0_OUT_r_address0),
    .i_ce0(fft_stage_0_020_U0_OUT_r_ce0),
    .i_we0(fft_stage_0_020_U0_OUT_r_we0),
    .i_d0(fft_stage_0_020_U0_OUT_r_d0),
    .i_q0(out_data_13_i_q0),
    .i_address1(fft_stage_0_020_U0_OUT_r_address1),
    .i_ce1(fft_stage_0_020_U0_OUT_r_ce1),
    .i_we1(fft_stage_0_020_U0_OUT_r_we1),
    .i_d1(fft_stage_0_020_U0_OUT_r_d1),
    .i_q1(out_data_13_i_q1),
    .t_address0(fft_stage_1_021_U0_IN_r_address0),
    .t_ce0(fft_stage_1_021_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(64'd0),
    .t_q0(out_data_13_t_q0),
    .t_address1(fft_stage_1_021_U0_IN_r_address1),
    .t_ce1(fft_stage_1_021_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(64'd0),
    .t_q1(out_data_13_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_13_i_full_n),
    .i_write(ap_channel_done_out_data_13),
    .t_empty_n(out_data_13_t_empty_n),
    .t_read(fft_stage_1_021_U0_ap_ready)
);

fwd_fft_dataflow_in_loop_VITIS_LOOP_89_1_out_data_13 #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_1_021_U0_OUT_r_address0),
    .i_ce0(fft_stage_1_021_U0_OUT_r_ce0),
    .i_we0(fft_stage_1_021_U0_OUT_r_we0),
    .i_d0(fft_stage_1_021_U0_OUT_r_d0),
    .i_q0(out_data_24_i_q0),
    .i_address1(fft_stage_1_021_U0_OUT_r_address1),
    .i_ce1(fft_stage_1_021_U0_OUT_r_ce1),
    .i_we1(fft_stage_1_021_U0_OUT_r_we1),
    .i_d1(fft_stage_1_021_U0_OUT_r_d1),
    .i_q1(out_data_24_i_q1),
    .t_address0(fft_stage_2_022_U0_IN_r_address0),
    .t_ce0(fft_stage_2_022_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(64'd0),
    .t_q0(out_data_24_t_q0),
    .t_address1(fft_stage_2_022_U0_IN_r_address1),
    .t_ce1(fft_stage_2_022_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(64'd0),
    .t_q1(out_data_24_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_24_i_full_n),
    .i_write(ap_channel_done_out_data_24),
    .t_empty_n(out_data_24_t_empty_n),
    .t_read(fft_stage_2_022_U0_ap_ready)
);

fwd_fft_dataflow_in_loop_VITIS_LOOP_89_1_out_data_13 #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_35_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_2_022_U0_OUT_r_address0),
    .i_ce0(fft_stage_2_022_U0_OUT_r_ce0),
    .i_we0(fft_stage_2_022_U0_OUT_r_we0),
    .i_d0(fft_stage_2_022_U0_OUT_r_d0),
    .i_q0(out_data_35_i_q0),
    .i_address1(fft_stage_2_022_U0_OUT_r_address1),
    .i_ce1(fft_stage_2_022_U0_OUT_r_ce1),
    .i_we1(fft_stage_2_022_U0_OUT_r_we1),
    .i_d1(fft_stage_2_022_U0_OUT_r_d1),
    .i_q1(out_data_35_i_q1),
    .t_address0(fft_stage_3_023_U0_IN_r_address0),
    .t_ce0(fft_stage_3_023_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(64'd0),
    .t_q0(out_data_35_t_q0),
    .t_address1(fft_stage_3_023_U0_IN_r_address1),
    .t_ce1(fft_stage_3_023_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(64'd0),
    .t_q1(out_data_35_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_35_i_full_n),
    .i_write(ap_channel_done_out_data_35),
    .t_empty_n(out_data_35_t_empty_n),
    .t_read(fft_stage_3_023_U0_ap_ready)
);

fwd_fft_dataflow_in_loop_VITIS_LOOP_89_1_out_data_13 #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_46_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_3_023_U0_OUT_r_address0),
    .i_ce0(fft_stage_3_023_U0_OUT_r_ce0),
    .i_we0(fft_stage_3_023_U0_OUT_r_we0),
    .i_d0(fft_stage_3_023_U0_OUT_r_d0),
    .i_q0(out_data_46_i_q0),
    .i_address1(fft_stage_3_023_U0_OUT_r_address1),
    .i_ce1(fft_stage_3_023_U0_OUT_r_ce1),
    .i_we1(fft_stage_3_023_U0_OUT_r_we1),
    .i_d1(fft_stage_3_023_U0_OUT_r_d1),
    .i_q1(out_data_46_i_q1),
    .t_address0(fft_stage_4_024_U0_IN_r_address0),
    .t_ce0(fft_stage_4_024_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(64'd0),
    .t_q0(out_data_46_t_q0),
    .t_address1(fft_stage_4_024_U0_IN_r_address1),
    .t_ce1(fft_stage_4_024_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(64'd0),
    .t_q1(out_data_46_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_46_i_full_n),
    .i_write(ap_channel_done_out_data_46),
    .t_empty_n(out_data_46_t_empty_n),
    .t_read(fft_stage_4_024_U0_ap_ready)
);

fwd_fft_dataflow_in_loop_VITIS_LOOP_89_1_out_data_13 #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_57_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_4_024_U0_OUT_r_address0),
    .i_ce0(fft_stage_4_024_U0_OUT_r_ce0),
    .i_we0(fft_stage_4_024_U0_OUT_r_we0),
    .i_d0(fft_stage_4_024_U0_OUT_r_d0),
    .i_q0(out_data_57_i_q0),
    .i_address1(fft_stage_4_024_U0_OUT_r_address1),
    .i_ce1(fft_stage_4_024_U0_OUT_r_ce1),
    .i_we1(fft_stage_4_024_U0_OUT_r_we1),
    .i_d1(fft_stage_4_024_U0_OUT_r_d1),
    .i_q1(out_data_57_i_q1),
    .t_address0(fft_stage_5_025_U0_IN_r_address0),
    .t_ce0(fft_stage_5_025_U0_IN_r_ce0),
    .t_we0(1'b0),
    .t_d0(64'd0),
    .t_q0(out_data_57_t_q0),
    .t_address1(fft_stage_5_025_U0_IN_r_address1),
    .t_ce1(fft_stage_5_025_U0_IN_r_ce1),
    .t_we1(1'b0),
    .t_d1(64'd0),
    .t_q1(out_data_57_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_57_i_full_n),
    .i_write(ap_channel_done_out_data_57),
    .t_empty_n(out_data_57_t_empty_n),
    .t_read(fft_stage_5_025_U0_ap_ready)
);

fwd_fft_dataflow_in_loop_VITIS_LOOP_89_1_out_data_68 #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
out_data_68_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_5_025_U0_OUT_r_address0),
    .i_ce0(fft_stage_5_025_U0_OUT_r_ce0),
    .i_we0(fft_stage_5_025_U0_OUT_r_we0),
    .i_d0(fft_stage_5_025_U0_OUT_r_d0),
    .i_q0(out_data_68_i_q0),
    .i_address1(fft_stage_5_025_U0_OUT_r_address1),
    .i_ce1(fft_stage_5_025_U0_OUT_r_ce1),
    .i_we1(fft_stage_5_025_U0_OUT_r_we1),
    .i_d1(fft_stage_5_025_U0_OUT_r_d1),
    .t_address0(buf_2_stream26_U0_output_buffer_address0),
    .t_ce0(buf_2_stream26_U0_output_buffer_ce0),
    .t_we0(1'b0),
    .t_d0(64'd0),
    .t_q0(out_data_68_t_q0),
    .t_address1(6'd0),
    .t_ce1(1'b0),
    .t_we1(1'b0),
    .t_d1(64'd0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_data_68_i_full_n),
    .i_write(ap_channel_done_out_data_68),
    .t_empty_n(out_data_68_t_empty_n),
    .t_read(buf_2_stream26_U0_ap_ready)
);

fwd_fft_stream_2_buf18 stream_2_buf18_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(stream_2_buf18_U0_ap_start),
    .ap_done(stream_2_buf18_U0_ap_done),
    .ap_continue(stream_2_buf18_U0_ap_continue),
    .ap_idle(stream_2_buf18_U0_ap_idle),
    .ap_ready(stream_2_buf18_U0_ap_ready),
    .c_row_op_trans_st_dout(c_ifmap_col_op_st_dout),
    .c_row_op_trans_st_empty_n(c_ifmap_col_op_st_empty_n),
    .c_row_op_trans_st_read(stream_2_buf18_U0_c_row_op_trans_st_read),
    .input_buffer_address0(stream_2_buf18_U0_input_buffer_address0),
    .input_buffer_ce0(stream_2_buf18_U0_input_buffer_ce0),
    .input_buffer_we0(stream_2_buf18_U0_input_buffer_we0),
    .input_buffer_d0(stream_2_buf18_U0_input_buffer_d0),
    .p_read(p_read),
    .ap_return(stream_2_buf18_U0_ap_return)
);

fwd_fft_bit_reversal19 bit_reversal19_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(bit_reversal19_U0_ap_start),
    .ap_done(bit_reversal19_U0_ap_done),
    .ap_continue(bit_reversal19_U0_ap_continue),
    .ap_idle(bit_reversal19_U0_ap_idle),
    .ap_ready(bit_reversal19_U0_ap_ready),
    .IN_r_address0(bit_reversal19_U0_IN_r_address0),
    .IN_r_ce0(bit_reversal19_U0_IN_r_ce0),
    .IN_r_q0(input_data1_t_q0),
    .OUT_r_address0(bit_reversal19_U0_OUT_r_address0),
    .OUT_r_ce0(bit_reversal19_U0_OUT_r_ce0),
    .OUT_r_we0(bit_reversal19_U0_OUT_r_we0),
    .OUT_r_d0(bit_reversal19_U0_OUT_r_d0),
    .p_read(ctrl1_reg_c7_channel_dout),
    .ap_return(bit_reversal19_U0_ap_return)
);

fwd_fft_fft_stage_0_020 fft_stage_0_020_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_0_020_U0_ap_start),
    .ap_done(fft_stage_0_020_U0_ap_done),
    .ap_continue(fft_stage_0_020_U0_ap_continue),
    .ap_idle(fft_stage_0_020_U0_ap_idle),
    .ap_ready(fft_stage_0_020_U0_ap_ready),
    .IN_r_address0(fft_stage_0_020_U0_IN_r_address0),
    .IN_r_ce0(fft_stage_0_020_U0_IN_r_ce0),
    .IN_r_q0(input_data_rev2_t_q0),
    .IN_r_address1(fft_stage_0_020_U0_IN_r_address1),
    .IN_r_ce1(fft_stage_0_020_U0_IN_r_ce1),
    .IN_r_q1(input_data_rev2_t_q1),
    .OUT_r_address0(fft_stage_0_020_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage_0_020_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage_0_020_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage_0_020_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage_0_020_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage_0_020_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage_0_020_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage_0_020_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c6_channel_dout),
    .ap_return(fft_stage_0_020_U0_ap_return)
);

fwd_fft_fft_stage_1_021 fft_stage_1_021_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_1_021_U0_ap_start),
    .ap_done(fft_stage_1_021_U0_ap_done),
    .ap_continue(fft_stage_1_021_U0_ap_continue),
    .ap_idle(fft_stage_1_021_U0_ap_idle),
    .ap_ready(fft_stage_1_021_U0_ap_ready),
    .IN_r_address0(fft_stage_1_021_U0_IN_r_address0),
    .IN_r_ce0(fft_stage_1_021_U0_IN_r_ce0),
    .IN_r_q0(out_data_13_t_q0),
    .IN_r_address1(fft_stage_1_021_U0_IN_r_address1),
    .IN_r_ce1(fft_stage_1_021_U0_IN_r_ce1),
    .IN_r_q1(out_data_13_t_q1),
    .OUT_r_address0(fft_stage_1_021_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage_1_021_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage_1_021_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage_1_021_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage_1_021_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage_1_021_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage_1_021_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage_1_021_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c5_channel_dout),
    .ap_return(fft_stage_1_021_U0_ap_return)
);

fwd_fft_fft_stage_2_022 fft_stage_2_022_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_2_022_U0_ap_start),
    .ap_done(fft_stage_2_022_U0_ap_done),
    .ap_continue(fft_stage_2_022_U0_ap_continue),
    .ap_idle(fft_stage_2_022_U0_ap_idle),
    .ap_ready(fft_stage_2_022_U0_ap_ready),
    .IN_r_address0(fft_stage_2_022_U0_IN_r_address0),
    .IN_r_ce0(fft_stage_2_022_U0_IN_r_ce0),
    .IN_r_q0(out_data_24_t_q0),
    .IN_r_address1(fft_stage_2_022_U0_IN_r_address1),
    .IN_r_ce1(fft_stage_2_022_U0_IN_r_ce1),
    .IN_r_q1(out_data_24_t_q1),
    .OUT_r_address0(fft_stage_2_022_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage_2_022_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage_2_022_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage_2_022_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage_2_022_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage_2_022_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage_2_022_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage_2_022_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c4_channel_dout),
    .ap_return(fft_stage_2_022_U0_ap_return)
);

fwd_fft_fft_stage_3_023 fft_stage_3_023_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_3_023_U0_ap_start),
    .ap_done(fft_stage_3_023_U0_ap_done),
    .ap_continue(fft_stage_3_023_U0_ap_continue),
    .ap_idle(fft_stage_3_023_U0_ap_idle),
    .ap_ready(fft_stage_3_023_U0_ap_ready),
    .IN_r_address0(fft_stage_3_023_U0_IN_r_address0),
    .IN_r_ce0(fft_stage_3_023_U0_IN_r_ce0),
    .IN_r_q0(out_data_35_t_q0),
    .IN_r_address1(fft_stage_3_023_U0_IN_r_address1),
    .IN_r_ce1(fft_stage_3_023_U0_IN_r_ce1),
    .IN_r_q1(out_data_35_t_q1),
    .OUT_r_address0(fft_stage_3_023_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage_3_023_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage_3_023_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage_3_023_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage_3_023_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage_3_023_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage_3_023_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage_3_023_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c3_channel_dout),
    .ap_return(fft_stage_3_023_U0_ap_return)
);

fwd_fft_fft_stage_4_024 fft_stage_4_024_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_4_024_U0_ap_start),
    .ap_done(fft_stage_4_024_U0_ap_done),
    .ap_continue(fft_stage_4_024_U0_ap_continue),
    .ap_idle(fft_stage_4_024_U0_ap_idle),
    .ap_ready(fft_stage_4_024_U0_ap_ready),
    .IN_r_address0(fft_stage_4_024_U0_IN_r_address0),
    .IN_r_ce0(fft_stage_4_024_U0_IN_r_ce0),
    .IN_r_q0(out_data_46_t_q0),
    .IN_r_address1(fft_stage_4_024_U0_IN_r_address1),
    .IN_r_ce1(fft_stage_4_024_U0_IN_r_ce1),
    .IN_r_q1(out_data_46_t_q1),
    .OUT_r_address0(fft_stage_4_024_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage_4_024_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage_4_024_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage_4_024_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage_4_024_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage_4_024_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage_4_024_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage_4_024_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c2_channel_dout),
    .ap_return(fft_stage_4_024_U0_ap_return)
);

fwd_fft_fft_stage_5_025 fft_stage_5_025_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_5_025_U0_ap_start),
    .ap_done(fft_stage_5_025_U0_ap_done),
    .ap_continue(fft_stage_5_025_U0_ap_continue),
    .ap_idle(fft_stage_5_025_U0_ap_idle),
    .ap_ready(fft_stage_5_025_U0_ap_ready),
    .IN_r_address0(fft_stage_5_025_U0_IN_r_address0),
    .IN_r_ce0(fft_stage_5_025_U0_IN_r_ce0),
    .IN_r_q0(out_data_57_t_q0),
    .IN_r_address1(fft_stage_5_025_U0_IN_r_address1),
    .IN_r_ce1(fft_stage_5_025_U0_IN_r_ce1),
    .IN_r_q1(out_data_57_t_q1),
    .OUT_r_address0(fft_stage_5_025_U0_OUT_r_address0),
    .OUT_r_ce0(fft_stage_5_025_U0_OUT_r_ce0),
    .OUT_r_we0(fft_stage_5_025_U0_OUT_r_we0),
    .OUT_r_d0(fft_stage_5_025_U0_OUT_r_d0),
    .OUT_r_address1(fft_stage_5_025_U0_OUT_r_address1),
    .OUT_r_ce1(fft_stage_5_025_U0_OUT_r_ce1),
    .OUT_r_we1(fft_stage_5_025_U0_OUT_r_we1),
    .OUT_r_d1(fft_stage_5_025_U0_OUT_r_d1),
    .p_read(ctrl1_reg_c1_channel_dout),
    .ap_return(fft_stage_5_025_U0_ap_return)
);

fwd_fft_buf_2_stream26 buf_2_stream26_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(buf_2_stream26_U0_ap_start),
    .ap_done(buf_2_stream26_U0_ap_done),
    .ap_continue(buf_2_stream26_U0_ap_continue),
    .ap_idle(buf_2_stream26_U0_ap_idle),
    .ap_ready(buf_2_stream26_U0_ap_ready),
    .c_fft_col_op_st_din(buf_2_stream26_U0_c_fft_col_op_st_din),
    .c_fft_col_op_st_full_n(c_fft_row_op_st_full_n),
    .c_fft_col_op_st_write(buf_2_stream26_U0_c_fft_col_op_st_write),
    .output_buffer_address0(buf_2_stream26_U0_output_buffer_address0),
    .output_buffer_ce0(buf_2_stream26_U0_output_buffer_ce0),
    .output_buffer_q0(out_data_68_t_q0),
    .p_read(ctrl1_reg_c_channel_dout)
);

fwd_fft_fifo_w32_d2_S ctrl1_reg_c7_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(stream_2_buf18_U0_ap_return),
    .if_full_n(ctrl1_reg_c7_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c7_channel),
    .if_dout(ctrl1_reg_c7_channel_dout),
    .if_empty_n(ctrl1_reg_c7_channel_empty_n),
    .if_read(bit_reversal19_U0_ap_ready)
);

fwd_fft_fifo_w32_d2_S ctrl1_reg_c6_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(bit_reversal19_U0_ap_return),
    .if_full_n(ctrl1_reg_c6_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c6_channel),
    .if_dout(ctrl1_reg_c6_channel_dout),
    .if_empty_n(ctrl1_reg_c6_channel_empty_n),
    .if_read(fft_stage_0_020_U0_ap_ready)
);

fwd_fft_fifo_w32_d2_S ctrl1_reg_c5_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage_0_020_U0_ap_return),
    .if_full_n(ctrl1_reg_c5_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c5_channel),
    .if_dout(ctrl1_reg_c5_channel_dout),
    .if_empty_n(ctrl1_reg_c5_channel_empty_n),
    .if_read(fft_stage_1_021_U0_ap_ready)
);

fwd_fft_fifo_w32_d2_S ctrl1_reg_c4_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage_1_021_U0_ap_return),
    .if_full_n(ctrl1_reg_c4_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c4_channel),
    .if_dout(ctrl1_reg_c4_channel_dout),
    .if_empty_n(ctrl1_reg_c4_channel_empty_n),
    .if_read(fft_stage_2_022_U0_ap_ready)
);

fwd_fft_fifo_w16_d2_S ctrl1_reg_c3_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage_2_022_U0_ap_return),
    .if_full_n(ctrl1_reg_c3_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c3_channel),
    .if_dout(ctrl1_reg_c3_channel_dout),
    .if_empty_n(ctrl1_reg_c3_channel_empty_n),
    .if_read(fft_stage_3_023_U0_ap_ready)
);

fwd_fft_fifo_w16_d2_S ctrl1_reg_c2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage_3_023_U0_ap_return),
    .if_full_n(ctrl1_reg_c2_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c2_channel),
    .if_dout(ctrl1_reg_c2_channel_dout),
    .if_empty_n(ctrl1_reg_c2_channel_empty_n),
    .if_read(fft_stage_4_024_U0_ap_ready)
);

fwd_fft_fifo_w16_d2_S ctrl1_reg_c1_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage_4_024_U0_ap_return),
    .if_full_n(ctrl1_reg_c1_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c1_channel),
    .if_dout(ctrl1_reg_c1_channel_dout),
    .if_empty_n(ctrl1_reg_c1_channel_empty_n),
    .if_read(fft_stage_5_025_U0_ap_ready)
);

fwd_fft_fifo_w8_d2_S ctrl1_reg_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_stage_5_025_U0_ap_return),
    .if_full_n(ctrl1_reg_c_channel_full_n),
    .if_write(ap_channel_done_ctrl1_reg_c_channel),
    .if_dout(ctrl1_reg_c_channel_dout),
    .if_empty_n(ctrl1_reg_c_channel_empty_n),
    .if_read(buf_2_stream26_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c1_channel <= 1'b0;
    end else begin
        if (((fft_stage_4_024_U0_ap_done & fft_stage_4_024_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c1_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c1_channel <= ap_sync_channel_write_ctrl1_reg_c1_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c2_channel <= 1'b0;
    end else begin
        if (((fft_stage_3_023_U0_ap_done & fft_stage_3_023_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c2_channel <= ap_sync_channel_write_ctrl1_reg_c2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c3_channel <= 1'b0;
    end else begin
        if (((fft_stage_2_022_U0_ap_done & fft_stage_2_022_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c3_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c3_channel <= ap_sync_channel_write_ctrl1_reg_c3_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c4_channel <= 1'b0;
    end else begin
        if (((fft_stage_1_021_U0_ap_done & fft_stage_1_021_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c4_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c4_channel <= ap_sync_channel_write_ctrl1_reg_c4_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c5_channel <= 1'b0;
    end else begin
        if (((fft_stage_0_020_U0_ap_done & fft_stage_0_020_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c5_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c5_channel <= ap_sync_channel_write_ctrl1_reg_c5_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c6_channel <= 1'b0;
    end else begin
        if (((bit_reversal19_U0_ap_done & bit_reversal19_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c6_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c6_channel <= ap_sync_channel_write_ctrl1_reg_c6_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c7_channel <= 1'b0;
    end else begin
        if (((stream_2_buf18_U0_ap_done & stream_2_buf18_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c7_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c7_channel <= ap_sync_channel_write_ctrl1_reg_c7_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ctrl1_reg_c_channel <= 1'b0;
    end else begin
        if (((fft_stage_5_025_U0_ap_done & fft_stage_5_025_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ctrl1_reg_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ctrl1_reg_c_channel <= ap_sync_channel_write_ctrl1_reg_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_input_data1 <= 1'b0;
    end else begin
        if (((stream_2_buf18_U0_ap_done & stream_2_buf18_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_input_data1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_input_data1 <= ap_sync_channel_write_input_data1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_input_data_rev2 <= 1'b0;
    end else begin
        if (((bit_reversal19_U0_ap_done & bit_reversal19_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_input_data_rev2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_input_data_rev2 <= ap_sync_channel_write_input_data_rev2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_13 <= 1'b0;
    end else begin
        if (((fft_stage_0_020_U0_ap_done & fft_stage_0_020_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_13 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_13 <= ap_sync_channel_write_out_data_13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_24 <= 1'b0;
    end else begin
        if (((fft_stage_1_021_U0_ap_done & fft_stage_1_021_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_24 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_24 <= ap_sync_channel_write_out_data_24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_35 <= 1'b0;
    end else begin
        if (((fft_stage_2_022_U0_ap_done & fft_stage_2_022_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_35 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_35 <= ap_sync_channel_write_out_data_35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_46 <= 1'b0;
    end else begin
        if (((fft_stage_3_023_U0_ap_done & fft_stage_3_023_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_46 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_46 <= ap_sync_channel_write_out_data_46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_57 <= 1'b0;
    end else begin
        if (((fft_stage_4_024_U0_ap_done & fft_stage_4_024_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_57 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_57 <= ap_sync_channel_write_out_data_57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_out_data_68 <= 1'b0;
    end else begin
        if (((fft_stage_5_025_U0_ap_done & fft_stage_5_025_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_out_data_68 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_out_data_68 <= ap_sync_channel_write_out_data_68;
        end
    end
end

assign ap_channel_done_ctrl1_reg_c1_channel = (fft_stage_4_024_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c1_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c2_channel = (fft_stage_3_023_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c2_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c3_channel = (fft_stage_2_022_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c3_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c4_channel = (fft_stage_1_021_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c4_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c5_channel = (fft_stage_0_020_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c5_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c6_channel = ((ap_sync_reg_channel_write_ctrl1_reg_c6_channel ^ 1'b1) & bit_reversal19_U0_ap_done);

assign ap_channel_done_ctrl1_reg_c7_channel = (stream_2_buf18_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c7_channel ^ 1'b1));

assign ap_channel_done_ctrl1_reg_c_channel = (fft_stage_5_025_U0_ap_done & (ap_sync_reg_channel_write_ctrl1_reg_c_channel ^ 1'b1));

assign ap_channel_done_input_data1 = (stream_2_buf18_U0_ap_done & (ap_sync_reg_channel_write_input_data1 ^ 1'b1));

assign ap_channel_done_input_data_rev2 = ((ap_sync_reg_channel_write_input_data_rev2 ^ 1'b1) & bit_reversal19_U0_ap_done);

assign ap_channel_done_out_data_13 = (fft_stage_0_020_U0_ap_done & (ap_sync_reg_channel_write_out_data_13 ^ 1'b1));

assign ap_channel_done_out_data_24 = (fft_stage_1_021_U0_ap_done & (ap_sync_reg_channel_write_out_data_24 ^ 1'b1));

assign ap_channel_done_out_data_35 = (fft_stage_2_022_U0_ap_done & (ap_sync_reg_channel_write_out_data_35 ^ 1'b1));

assign ap_channel_done_out_data_46 = (fft_stage_3_023_U0_ap_done & (ap_sync_reg_channel_write_out_data_46 ^ 1'b1));

assign ap_channel_done_out_data_57 = (fft_stage_4_024_U0_ap_done & (ap_sync_reg_channel_write_out_data_57 ^ 1'b1));

assign ap_channel_done_out_data_68 = (fft_stage_5_025_U0_ap_done & (ap_sync_reg_channel_write_out_data_68 ^ 1'b1));

assign ap_done = buf_2_stream26_U0_ap_done;

assign ap_idle = (stream_2_buf18_U0_ap_idle & fft_stage_5_025_U0_ap_idle & fft_stage_4_024_U0_ap_idle & fft_stage_3_023_U0_ap_idle & fft_stage_2_022_U0_ap_idle & fft_stage_1_021_U0_ap_idle & fft_stage_0_020_U0_ap_idle & (ctrl1_reg_c_channel_empty_n ^ 1'b1) & (ctrl1_reg_c1_channel_empty_n ^ 1'b1) & (ctrl1_reg_c2_channel_empty_n ^ 1'b1) & (ctrl1_reg_c3_channel_empty_n ^ 1'b1) & (ctrl1_reg_c4_channel_empty_n ^ 1'b1) & (ctrl1_reg_c5_channel_empty_n ^ 1'b1) & (ctrl1_reg_c6_channel_empty_n ^ 1'b1) & (ctrl1_reg_c7_channel_empty_n ^ 1'b1) & (out_data_68_t_empty_n ^ 1'b1) & (out_data_57_t_empty_n ^ 1'b1) & (out_data_46_t_empty_n ^ 1'b1) & (out_data_35_t_empty_n ^ 1'b1) & (out_data_24_t_empty_n ^ 1'b1) & (out_data_13_t_empty_n ^ 1'b1) & (input_data_rev2_t_empty_n ^ 1'b1) & (input_data1_t_empty_n ^ 1'b1) & buf_2_stream26_U0_ap_idle & bit_reversal19_U0_ap_idle);

assign ap_ready = stream_2_buf18_U0_ap_ready;

assign ap_sync_channel_write_ctrl1_reg_c1_channel = ((ctrl1_reg_c1_channel_full_n & ap_channel_done_ctrl1_reg_c1_channel) | ap_sync_reg_channel_write_ctrl1_reg_c1_channel);

assign ap_sync_channel_write_ctrl1_reg_c2_channel = ((ctrl1_reg_c2_channel_full_n & ap_channel_done_ctrl1_reg_c2_channel) | ap_sync_reg_channel_write_ctrl1_reg_c2_channel);

assign ap_sync_channel_write_ctrl1_reg_c3_channel = ((ctrl1_reg_c3_channel_full_n & ap_channel_done_ctrl1_reg_c3_channel) | ap_sync_reg_channel_write_ctrl1_reg_c3_channel);

assign ap_sync_channel_write_ctrl1_reg_c4_channel = ((ctrl1_reg_c4_channel_full_n & ap_channel_done_ctrl1_reg_c4_channel) | ap_sync_reg_channel_write_ctrl1_reg_c4_channel);

assign ap_sync_channel_write_ctrl1_reg_c5_channel = ((ctrl1_reg_c5_channel_full_n & ap_channel_done_ctrl1_reg_c5_channel) | ap_sync_reg_channel_write_ctrl1_reg_c5_channel);

assign ap_sync_channel_write_ctrl1_reg_c6_channel = ((ctrl1_reg_c6_channel_full_n & ap_channel_done_ctrl1_reg_c6_channel) | ap_sync_reg_channel_write_ctrl1_reg_c6_channel);

assign ap_sync_channel_write_ctrl1_reg_c7_channel = ((ctrl1_reg_c7_channel_full_n & ap_channel_done_ctrl1_reg_c7_channel) | ap_sync_reg_channel_write_ctrl1_reg_c7_channel);

assign ap_sync_channel_write_ctrl1_reg_c_channel = ((ctrl1_reg_c_channel_full_n & ap_channel_done_ctrl1_reg_c_channel) | ap_sync_reg_channel_write_ctrl1_reg_c_channel);

assign ap_sync_channel_write_input_data1 = ((stream_2_buf18_U0_input_buffer_full_n & ap_channel_done_input_data1) | ap_sync_reg_channel_write_input_data1);

assign ap_sync_channel_write_input_data_rev2 = ((bit_reversal19_U0_OUT_r_full_n & ap_channel_done_input_data_rev2) | ap_sync_reg_channel_write_input_data_rev2);

assign ap_sync_channel_write_out_data_13 = ((fft_stage_0_020_U0_OUT_r_full_n & ap_channel_done_out_data_13) | ap_sync_reg_channel_write_out_data_13);

assign ap_sync_channel_write_out_data_24 = ((fft_stage_1_021_U0_OUT_r_full_n & ap_channel_done_out_data_24) | ap_sync_reg_channel_write_out_data_24);

assign ap_sync_channel_write_out_data_35 = ((fft_stage_2_022_U0_OUT_r_full_n & ap_channel_done_out_data_35) | ap_sync_reg_channel_write_out_data_35);

assign ap_sync_channel_write_out_data_46 = ((fft_stage_3_023_U0_OUT_r_full_n & ap_channel_done_out_data_46) | ap_sync_reg_channel_write_out_data_46);

assign ap_sync_channel_write_out_data_57 = ((fft_stage_4_024_U0_OUT_r_full_n & ap_channel_done_out_data_57) | ap_sync_reg_channel_write_out_data_57);

assign ap_sync_channel_write_out_data_68 = ((fft_stage_5_025_U0_OUT_r_full_n & ap_channel_done_out_data_68) | ap_sync_reg_channel_write_out_data_68);

assign bit_reversal19_U0_OUT_r_full_n = input_data_rev2_i_full_n;

assign bit_reversal19_U0_ap_continue = (ap_sync_channel_write_input_data_rev2 & ap_sync_channel_write_ctrl1_reg_c6_channel);

assign bit_reversal19_U0_ap_start = (input_data1_t_empty_n & ctrl1_reg_c7_channel_empty_n);

assign buf_2_stream26_U0_ap_continue = ap_continue;

assign buf_2_stream26_U0_ap_start = (out_data_68_t_empty_n & ctrl1_reg_c_channel_empty_n);

assign c_fft_row_op_st_din = buf_2_stream26_U0_c_fft_col_op_st_din;

assign c_fft_row_op_st_write = buf_2_stream26_U0_c_fft_col_op_st_write;

assign c_ifmap_col_op_st_read = stream_2_buf18_U0_c_row_op_trans_st_read;

assign fft_stage_0_020_U0_OUT_r_full_n = out_data_13_i_full_n;

assign fft_stage_0_020_U0_ap_continue = (ap_sync_channel_write_out_data_13 & ap_sync_channel_write_ctrl1_reg_c5_channel);

assign fft_stage_0_020_U0_ap_start = (input_data_rev2_t_empty_n & ctrl1_reg_c6_channel_empty_n);

assign fft_stage_1_021_U0_OUT_r_full_n = out_data_24_i_full_n;

assign fft_stage_1_021_U0_ap_continue = (ap_sync_channel_write_out_data_24 & ap_sync_channel_write_ctrl1_reg_c4_channel);

assign fft_stage_1_021_U0_ap_start = (out_data_13_t_empty_n & ctrl1_reg_c5_channel_empty_n);

assign fft_stage_2_022_U0_OUT_r_full_n = out_data_35_i_full_n;

assign fft_stage_2_022_U0_ap_continue = (ap_sync_channel_write_out_data_35 & ap_sync_channel_write_ctrl1_reg_c3_channel);

assign fft_stage_2_022_U0_ap_start = (out_data_24_t_empty_n & ctrl1_reg_c4_channel_empty_n);

assign fft_stage_3_023_U0_OUT_r_full_n = out_data_46_i_full_n;

assign fft_stage_3_023_U0_ap_continue = (ap_sync_channel_write_out_data_46 & ap_sync_channel_write_ctrl1_reg_c2_channel);

assign fft_stage_3_023_U0_ap_start = (out_data_35_t_empty_n & ctrl1_reg_c3_channel_empty_n);

assign fft_stage_4_024_U0_OUT_r_full_n = out_data_57_i_full_n;

assign fft_stage_4_024_U0_ap_continue = (ap_sync_channel_write_out_data_57 & ap_sync_channel_write_ctrl1_reg_c1_channel);

assign fft_stage_4_024_U0_ap_start = (out_data_46_t_empty_n & ctrl1_reg_c2_channel_empty_n);

assign fft_stage_5_025_U0_OUT_r_full_n = out_data_68_i_full_n;

assign fft_stage_5_025_U0_ap_continue = (ap_sync_channel_write_out_data_68 & ap_sync_channel_write_ctrl1_reg_c_channel);

assign fft_stage_5_025_U0_ap_start = (out_data_57_t_empty_n & ctrl1_reg_c1_channel_empty_n);

assign stream_2_buf18_U0_ap_continue = (ap_sync_channel_write_input_data1 & ap_sync_channel_write_ctrl1_reg_c7_channel);

assign stream_2_buf18_U0_ap_start = ap_start;

assign stream_2_buf18_U0_input_buffer_full_n = input_data1_i_full_n;

endmodule //fwd_fft_dataflow_in_loop_VITIS_LOOP_89_1
