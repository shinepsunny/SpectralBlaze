-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fwd_fft_stream_2_buf17 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    c_ifmap_col_op_st_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    c_ifmap_col_op_st_empty_n : IN STD_LOGIC;
    c_ifmap_col_op_st_read : OUT STD_LOGIC;
    input_buffer_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_buffer_ce0 : OUT STD_LOGIC;
    input_buffer_we0 : OUT STD_LOGIC;
    input_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctrl1_reg_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl1_reg_empty_n : IN STD_LOGIC;
    ctrl1_reg_read : OUT STD_LOGIC;
    ctrl1_reg_c191_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctrl1_reg_c191_full_n : IN STD_LOGIC;
    ctrl1_reg_c191_write : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of fwd_fft_stream_2_buf17 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ctrl1_reg_blk_n : STD_LOGIC;
    signal ctrl1_reg_c191_blk_n : STD_LOGIC;
    signal ctrl1_reg_read_reg_69 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_65_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_reg_73 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_start : STD_LOGIC;
    signal grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_done : STD_LOGIC;
    signal grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_idle : STD_LOGIC;
    signal grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_ready : STD_LOGIC;
    signal grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_c_ifmap_col_op_st_read : STD_LOGIC;
    signal grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_input_buffer_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_input_buffer_ce0 : STD_LOGIC;
    signal grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_input_buffer_we0 : STD_LOGIC;
    signal grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_input_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fwd_fft_stream_2_buf17_Pipeline_VITIS_LOOP_52_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_ifmap_col_op_st_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        c_ifmap_col_op_st_empty_n : IN STD_LOGIC;
        c_ifmap_col_op_st_read : OUT STD_LOGIC;
        ctrl1_reg_load_cast : IN STD_LOGIC_VECTOR (7 downto 0);
        input_buffer_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buffer_ce0 : OUT STD_LOGIC;
        input_buffer_we0 : OUT STD_LOGIC;
        input_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56 : component fwd_fft_stream_2_buf17_Pipeline_VITIS_LOOP_52_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_start,
        ap_done => grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_done,
        ap_idle => grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_idle,
        ap_ready => grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_ready,
        c_ifmap_col_op_st_dout => c_ifmap_col_op_st_dout,
        c_ifmap_col_op_st_empty_n => c_ifmap_col_op_st_empty_n,
        c_ifmap_col_op_st_read => grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_c_ifmap_col_op_st_read,
        ctrl1_reg_load_cast => empty_reg_73,
        input_buffer_address0 => grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_input_buffer_address0,
        input_buffer_ce0 => grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_input_buffer_ce0,
        input_buffer_we0 => grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_input_buffer_we0,
        input_buffer_d0 => grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_input_buffer_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_ready = ap_const_logic_1)) then 
                    grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                ctrl1_reg_read_reg_69 <= ctrl1_reg_dout;
                empty_reg_73 <= empty_fu_65_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl1_reg_c191_full_n, grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_done, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ctrl1_reg_c191_full_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, ctrl1_reg_empty_n, ctrl1_reg_c191_full_n)
    begin
        if (((ap_start = ap_const_logic_0) or (ctrl1_reg_c191_full_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_done)
    begin
        if ((grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, ctrl1_reg_empty_n, ctrl1_reg_c191_full_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ctrl1_reg_c191_full_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_done, ap_CS_fsm_state3)
    begin
        if (((grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_done, ap_CS_fsm_state3)
    begin
        if (((grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ctrl1_reg_read_reg_69;

    c_ifmap_col_op_st_read_assign_proc : process(grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_c_ifmap_col_op_st_read, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            c_ifmap_col_op_st_read <= grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_c_ifmap_col_op_st_read;
        else 
            c_ifmap_col_op_st_read <= ap_const_logic_0;
        end if; 
    end process;


    ctrl1_reg_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_blk_n <= ctrl1_reg_empty_n;
        else 
            ctrl1_reg_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl1_reg_c191_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_c191_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_c191_blk_n <= ctrl1_reg_c191_full_n;
        else 
            ctrl1_reg_c191_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ctrl1_reg_c191_din <= ctrl1_reg_dout;

    ctrl1_reg_c191_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl1_reg_c191_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ctrl1_reg_c191_full_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_c191_write <= ap_const_logic_1;
        else 
            ctrl1_reg_c191_write <= ap_const_logic_0;
        end if; 
    end process;


    ctrl1_reg_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl1_reg_c191_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ctrl1_reg_c191_full_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_read <= ap_const_logic_1;
        else 
            ctrl1_reg_read <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_65_p1 <= ctrl1_reg_dout(8 - 1 downto 0);
    grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_start <= grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_ap_start_reg;
    input_buffer_address0 <= grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_input_buffer_address0;
    input_buffer_ce0 <= grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_input_buffer_ce0;
    input_buffer_d0 <= grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_input_buffer_d0;
    input_buffer_we0 <= grp_stream_2_buf17_Pipeline_VITIS_LOOP_52_1_fu_56_input_buffer_we0;
end behav;
