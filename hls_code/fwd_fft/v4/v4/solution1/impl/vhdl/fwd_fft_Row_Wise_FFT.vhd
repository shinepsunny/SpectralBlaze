-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fwd_fft_Row_Wise_FFT is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    c_ifmap_col_op_st_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    c_ifmap_col_op_st_empty_n : IN STD_LOGIC;
    c_ifmap_col_op_st_read : OUT STD_LOGIC;
    c_fft_row_op_st_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_fft_row_op_st_full_n : IN STD_LOGIC;
    c_fft_row_op_st_write : OUT STD_LOGIC;
    ctrl1_reg_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl1_reg_empty_n : IN STD_LOGIC;
    ctrl1_reg_read : OUT STD_LOGIC;
    ctrl2_reg_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl2_reg_empty_n : IN STD_LOGIC;
    ctrl2_reg_read : OUT STD_LOGIC;
    layer1_reg_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    layer1_reg_empty_n : IN STD_LOGIC;
    layer1_reg_read : OUT STD_LOGIC;
    ctrl1_reg_c13_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctrl1_reg_c13_full_n : IN STD_LOGIC;
    ctrl1_reg_c13_write : OUT STD_LOGIC;
    ctrl2_reg_c16_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctrl2_reg_c16_full_n : IN STD_LOGIC;
    ctrl2_reg_c16_write : OUT STD_LOGIC;
    layer1_reg_c19_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer1_reg_c19_full_n : IN STD_LOGIC;
    layer1_reg_c19_write : OUT STD_LOGIC );
end;


architecture behav of fwd_fft_Row_Wise_FFT is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal ctrl1_reg_blk_n : STD_LOGIC;
    signal ctrl2_reg_blk_n : STD_LOGIC;
    signal layer1_reg_blk_n : STD_LOGIC;
    signal ctrl1_reg_c13_blk_n : STD_LOGIC;
    signal ctrl2_reg_c16_blk_n : STD_LOGIC;
    signal layer1_reg_c19_blk_n : STD_LOGIC;
    signal empty_fu_189_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_reg_441 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctrl1_reg_read_reg_449 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_159_fu_193_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_159_reg_460 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_160_fu_197_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_160_reg_465 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_1_reg_471 : STD_LOGIC_VECTOR (7 downto 0);
    signal bound4_fu_234_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound4_reg_477 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal conv_i_i88_fu_247_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i_i88_reg_492 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal y_fu_250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_reg_497 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_259_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_reg_502 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_407_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound12_reg_507 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1057_fu_265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_reg_512 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1057_1_fu_278_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1057_1_reg_520 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln1057_5_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_5_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_4_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln149_fu_292_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln149_reg_533 : STD_LOGIC_VECTOR (7 downto 0);
    signal cmp29_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp29_reg_538 : STD_LOGIC_VECTOR (0 downto 0);
    signal pny_4_fu_306_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal pny_4_reg_543 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln149_1_fu_321_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln149_1_reg_549 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal select_ln149_2_fu_332_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln149_2_reg_554 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1057_fu_341_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1057_reg_559 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_3_fu_401_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_3_reg_568 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_start : STD_LOGIC;
    signal grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_done : STD_LOGIC;
    signal grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_idle : STD_LOGIC;
    signal grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_ready : STD_LOGIC;
    signal grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_Row_Buffer_read : STD_LOGIC;
    signal grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_c_fft_row_op_st_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_c_fft_row_op_st_write : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_c_ifmap_col_op_st_read : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_c_fft_row_op_st_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_c_fft_row_op_st_write : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_Row_Buffer_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_Row_Buffer_write : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_start : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_idle : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_continue : STD_LOGIC;
    signal y_2_reg_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_sync_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready : STD_LOGIC;
    signal ap_sync_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done : STD_LOGIC;
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_start_reg : STD_LOGIC := '0';
    signal Row_Buffer_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal Row_Buffer_empty_n : STD_LOGIC;
    signal Row_Buffer_read : STD_LOGIC;
    signal grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_start_reg : STD_LOGIC := '0';
    signal ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done : STD_LOGIC := '0';
    signal Row_Buffer_full_n : STD_LOGIC;
    signal Row_Buffer_write : STD_LOGIC;
    signal pnx_fu_88 : STD_LOGIC_VECTOR (7 downto 0);
    signal pnx_3_fu_362_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln1069_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal pny_fu_92 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten7_fu_96 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1057_1_fu_376_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar_flatten21_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound4_fu_234_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cast2_fu_231_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound4_fu_234_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal bound_fu_259_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bound_fu_259_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1057_6_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_mid1_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln149_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln157_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln157_fu_352_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1057_fu_370_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_407_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_407_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal bound_fu_259_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_fu_259_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_407_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_407_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component fwd_fft_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Row_Buffer_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        Row_Buffer_empty_n : IN STD_LOGIC;
        Row_Buffer_read : OUT STD_LOGIC;
        c_fft_row_op_st_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_fft_row_op_st_full_n : IN STD_LOGIC;
        c_fft_row_op_st_write : OUT STD_LOGIC;
        bound : IN STD_LOGIC_VECTOR (15 downto 0);
        select_ln149_2 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fwd_fft_dataflow_in_loop_VITIS_LOOP_172_6 IS
    port (
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        c_ifmap_col_op_st_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        c_ifmap_col_op_st_empty_n : IN STD_LOGIC;
        c_ifmap_col_op_st_read : OUT STD_LOGIC;
        c_fft_row_op_st_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_fft_row_op_st_full_n : IN STD_LOGIC;
        c_fft_row_op_st_write : OUT STD_LOGIC;
        pny : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
        y_6 : IN STD_LOGIC_VECTOR (31 downto 0);
        Row_Buffer_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        Row_Buffer_full_n : IN STD_LOGIC;
        Row_Buffer_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        p_read_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        pny_ap_vld : IN STD_LOGIC;
        p_read1_ap_vld : IN STD_LOGIC;
        y_6_ap_vld : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component fwd_fft_mul_8ns_8ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component fwd_fft_mul_mul_16ns_16ns_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fwd_fft_fifo_w32_d20480_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160 : component fwd_fft_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_start,
        ap_done => grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_done,
        ap_idle => grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_idle,
        ap_ready => grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_ready,
        Row_Buffer_dout => Row_Buffer_dout,
        Row_Buffer_empty_n => Row_Buffer_empty_n,
        Row_Buffer_read => grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_Row_Buffer_read,
        c_fft_row_op_st_din => grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_c_fft_row_op_st_din,
        c_fft_row_op_st_full_n => c_fft_row_op_st_full_n,
        c_fft_row_op_st_write => grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_c_fft_row_op_st_write,
        bound => bound_reg_502,
        select_ln149_2 => select_ln149_2_reg_554);

    grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169 : component fwd_fft_dataflow_in_loop_VITIS_LOOP_172_6
    port map (
        p_read => ctrl1_reg_read_reg_449,
        c_ifmap_col_op_st_dout => c_ifmap_col_op_st_dout,
        c_ifmap_col_op_st_empty_n => c_ifmap_col_op_st_empty_n,
        c_ifmap_col_op_st_read => grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_c_ifmap_col_op_st_read,
        c_fft_row_op_st_din => grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_c_fft_row_op_st_din,
        c_fft_row_op_st_full_n => c_fft_row_op_st_full_n,
        c_fft_row_op_st_write => grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_c_fft_row_op_st_write,
        pny => select_ln1057_reg_559,
        p_read1 => empty_reg_441,
        y_6 => y_2_reg_150,
        Row_Buffer_din => grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_Row_Buffer_din,
        Row_Buffer_full_n => Row_Buffer_full_n,
        Row_Buffer_write => grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_Row_Buffer_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p_read_ap_vld => ap_const_logic_1,
        ap_start => grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_start,
        ap_done => grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done,
        pny_ap_vld => ap_const_logic_1,
        p_read1_ap_vld => ap_const_logic_1,
        y_6_ap_vld => ap_const_logic_1,
        ap_ready => grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready,
        ap_idle => grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_idle,
        ap_continue => grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_continue);

    mul_8ns_8ns_16_1_1_U94 : component fwd_fft_mul_8ns_8ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => bound4_fu_234_p0,
        din1 => bound4_fu_234_p1,
        dout => bound4_fu_234_p2);

    mul_8ns_8ns_16_1_1_U95 : component fwd_fft_mul_8ns_8ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => bound_fu_259_p0,
        din1 => bound_fu_259_p1,
        dout => bound_fu_259_p2);

    mul_mul_16ns_16ns_32_4_1_U96 : component fwd_fft_mul_mul_16ns_16ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_407_p0,
        din1 => grp_fu_407_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_407_p2);

    Row_Buffer_fifo_U : component fwd_fft_fifo_w32_d20480_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_Row_Buffer_din,
        if_full_n => Row_Buffer_full_n,
        if_write => Row_Buffer_write,
        if_dout => Row_Buffer_dout,
        if_empty_n => Row_Buffer_empty_n,
        if_read => Row_Buffer_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_4_fu_273_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done <= ap_const_logic_0;
                elsif ((grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready <= ap_const_logic_0;
                elsif ((grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_ready = ap_const_logic_1)) then 
                    grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_sync_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                    grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready = ap_const_logic_1)) then 
                    grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten21_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((layer1_reg_c19_full_n = ap_const_logic_0) or (ctrl2_reg_c16_full_n = ap_const_logic_0) or (ctrl1_reg_c13_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten21_fu_100 <= ap_const_lv32_0;
            elsif (((icmp_ln1069_fu_347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                indvar_flatten21_fu_100 <= add_ln1057_1_reg_520;
            end if; 
        end if;
    end process;

    indvar_flatten7_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((layer1_reg_c19_full_n = ap_const_logic_0) or (ctrl2_reg_c16_full_n = ap_const_logic_0) or (ctrl1_reg_c13_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten7_fu_96 <= ap_const_lv16_0;
            elsif (((icmp_ln1069_fu_347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                indvar_flatten7_fu_96 <= select_ln1057_1_fu_376_p3;
            end if; 
        end if;
    end process;

    pnx_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((layer1_reg_c19_full_n = ap_const_logic_0) or (ctrl2_reg_c16_full_n = ap_const_logic_0) or (ctrl1_reg_c13_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                pnx_fu_88 <= ap_const_lv8_0;
            elsif (((icmp_ln1069_fu_347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                pnx_fu_88 <= pnx_3_fu_362_p3;
            end if; 
        end if;
    end process;

    pny_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((layer1_reg_c19_full_n = ap_const_logic_0) or (ctrl2_reg_c16_full_n = ap_const_logic_0) or (ctrl1_reg_c13_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                pny_fu_92 <= ap_const_lv8_0;
            elsif (((icmp_ln1069_fu_347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                pny_fu_92 <= select_ln1057_reg_559;
            end if; 
        end if;
    end process;

    y_2_reg_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_done = ap_const_logic_1))) then 
                y_2_reg_150 <= y_reg_497;
            elsif (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                y_2_reg_150 <= y_3_reg_568;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln1057_1_reg_520 <= add_ln1057_1_fu_278_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                bound12_reg_507 <= grp_fu_407_p2;
                bound_reg_502 <= bound_fu_259_p2;
                    conv_i_i88_reg_492(7 downto 0) <= conv_i_i88_fu_247_p1(7 downto 0);
                icmp_ln1057_reg_512 <= icmp_ln1057_fu_265_p2;
                    y_reg_497(7 downto 0) <= y_fu_250_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                bound4_reg_477 <= bound4_fu_234_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_4_fu_273_p2 = ap_const_lv1_0))) then
                cmp29_reg_538 <= cmp29_fu_300_p2;
                icmp_ln1057_5_reg_525 <= icmp_ln1057_5_fu_287_p2;
                pny_4_reg_543 <= pny_4_fu_306_p2;
                select_ln149_reg_533 <= select_ln149_fu_292_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                ctrl1_reg_read_reg_449 <= ctrl1_reg_dout;
                empty_159_reg_460 <= empty_159_fu_193_p1;
                empty_160_reg_465 <= empty_160_fu_197_p1;
                empty_reg_441 <= empty_fu_189_p1;
                y_1_reg_471 <= ctrl1_reg_dout(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                select_ln1057_reg_559 <= select_ln1057_fu_341_p3;
                select_ln149_1_reg_549 <= select_ln149_1_fu_321_p3;
                select_ln149_2_reg_554 <= select_ln149_2_fu_332_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                y_3_reg_568 <= y_3_fu_401_p2;
            end if;
        end if;
    end process;
    conv_i_i88_reg_492(31 downto 8) <= "000000000000000000000000";
    y_reg_497(31 downto 8) <= "000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c13_full_n, ctrl2_reg_c16_full_n, layer1_reg_c19_full_n, ap_CS_fsm_state6, icmp_ln1057_4_fu_273_p2, grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_done, ap_CS_fsm_state11, ap_block_state11_on_subcall_done, ap_CS_fsm_state8, ap_CS_fsm_state9, icmp_ln1069_fu_347_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((layer1_reg_c19_full_n = ap_const_logic_0) or (ctrl2_reg_c16_full_n = ap_const_logic_0) or (ctrl1_reg_c13_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_4_fu_273_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((icmp_ln1069_fu_347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    Row_Buffer_read_assign_proc : process(grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_Row_Buffer_read, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            Row_Buffer_read <= grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_Row_Buffer_read;
        else 
            Row_Buffer_read <= ap_const_logic_0;
        end if; 
    end process;


    Row_Buffer_write_assign_proc : process(grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_Row_Buffer_write, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            Row_Buffer_write <= grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_Row_Buffer_write;
        else 
            Row_Buffer_write <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1057_1_fu_278_p2 <= std_logic_vector(unsigned(indvar_flatten21_fu_100) + unsigned(ap_const_lv32_1));
    add_ln1057_fu_370_p2 <= std_logic_vector(unsigned(indvar_flatten7_fu_96) + unsigned(ap_const_lv16_1));
    add_ln157_fu_352_p2 <= std_logic_vector(unsigned(pnx_fu_88) + unsigned(ap_const_lv8_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(ap_block_state11_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state11_on_subcall_done)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c13_full_n, ctrl2_reg_c16_full_n, layer1_reg_c19_full_n)
    begin
        if (((layer1_reg_c19_full_n = ap_const_logic_0) or (ctrl2_reg_c16_full_n = ap_const_logic_0) or (ctrl1_reg_c13_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_done)
    begin
        if ((grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c13_full_n, ctrl2_reg_c16_full_n, layer1_reg_c19_full_n)
    begin
                ap_block_state1 <= ((layer1_reg_c19_full_n = ap_const_logic_0) or (ctrl2_reg_c16_full_n = ap_const_logic_0) or (ctrl1_reg_c13_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state11_on_subcall_done_assign_proc : process(ap_sync_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready, ap_sync_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done)
    begin
                ap_block_state11_on_subcall_done <= ((ap_sync_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready and ap_sync_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done) = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6, icmp_ln1057_4_fu_273_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_4_fu_273_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    ap_sync_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done <= (grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done or ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_done);
    ap_sync_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready <= (grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready or ap_sync_reg_grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_ready);
    bound4_fu_234_p0 <= cast2_fu_231_p1(8 - 1 downto 0);
    bound4_fu_234_p1 <= cast2_fu_231_p1(8 - 1 downto 0);
    bound_fu_259_p0 <= bound_fu_259_p00(8 - 1 downto 0);
    bound_fu_259_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_1_reg_471),16));
    bound_fu_259_p1 <= bound_fu_259_p10(8 - 1 downto 0);
    bound_fu_259_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_160_reg_465),16));

    c_fft_row_op_st_din_assign_proc : process(grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_c_fft_row_op_st_din, grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_c_fft_row_op_st_din, ap_CS_fsm_state11, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            c_fft_row_op_st_din <= grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_c_fft_row_op_st_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            c_fft_row_op_st_din <= grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_c_fft_row_op_st_din;
        else 
            c_fft_row_op_st_din <= grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_c_fft_row_op_st_din;
        end if; 
    end process;


    c_fft_row_op_st_write_assign_proc : process(grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_c_fft_row_op_st_write, grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_c_fft_row_op_st_write, ap_CS_fsm_state11, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            c_fft_row_op_st_write <= grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_c_fft_row_op_st_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            c_fft_row_op_st_write <= grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_c_fft_row_op_st_write;
        else 
            c_fft_row_op_st_write <= ap_const_logic_0;
        end if; 
    end process;


    c_ifmap_col_op_st_read_assign_proc : process(grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_c_ifmap_col_op_st_read, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            c_ifmap_col_op_st_read <= grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_c_ifmap_col_op_st_read;
        else 
            c_ifmap_col_op_st_read <= ap_const_logic_0;
        end if; 
    end process;

    cast2_fu_231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_441),16));
    cmp29_fu_300_p2 <= "1" when (pny_fu_92 = ap_const_lv8_0) else "0";
    cmp_mid1_fu_327_p2 <= "1" when (pny_4_reg_543 = ap_const_lv8_0) else "0";
    conv_i_i88_fu_247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_160_reg_465),32));

    ctrl1_reg_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_blk_n <= ctrl1_reg_empty_n;
        else 
            ctrl1_reg_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl1_reg_c13_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_c13_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_c13_blk_n <= ctrl1_reg_c13_full_n;
        else 
            ctrl1_reg_c13_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ctrl1_reg_c13_din <= ctrl1_reg_dout;

    ctrl1_reg_c13_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c13_full_n, ctrl2_reg_c16_full_n, layer1_reg_c19_full_n)
    begin
        if ((not(((layer1_reg_c19_full_n = ap_const_logic_0) or (ctrl2_reg_c16_full_n = ap_const_logic_0) or (ctrl1_reg_c13_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_c13_write <= ap_const_logic_1;
        else 
            ctrl1_reg_c13_write <= ap_const_logic_0;
        end if; 
    end process;


    ctrl1_reg_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c13_full_n, ctrl2_reg_c16_full_n, layer1_reg_c19_full_n)
    begin
        if ((not(((layer1_reg_c19_full_n = ap_const_logic_0) or (ctrl2_reg_c16_full_n = ap_const_logic_0) or (ctrl1_reg_c13_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_read <= ap_const_logic_1;
        else 
            ctrl1_reg_read <= ap_const_logic_0;
        end if; 
    end process;


    ctrl2_reg_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl2_reg_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl2_reg_blk_n <= ctrl2_reg_empty_n;
        else 
            ctrl2_reg_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl2_reg_c16_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl2_reg_c16_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl2_reg_c16_blk_n <= ctrl2_reg_c16_full_n;
        else 
            ctrl2_reg_c16_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ctrl2_reg_c16_din <= ctrl2_reg_dout;

    ctrl2_reg_c16_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c13_full_n, ctrl2_reg_c16_full_n, layer1_reg_c19_full_n)
    begin
        if ((not(((layer1_reg_c19_full_n = ap_const_logic_0) or (ctrl2_reg_c16_full_n = ap_const_logic_0) or (ctrl1_reg_c13_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl2_reg_c16_write <= ap_const_logic_1;
        else 
            ctrl2_reg_c16_write <= ap_const_logic_0;
        end if; 
    end process;


    ctrl2_reg_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c13_full_n, ctrl2_reg_c16_full_n, layer1_reg_c19_full_n)
    begin
        if ((not(((layer1_reg_c19_full_n = ap_const_logic_0) or (ctrl2_reg_c16_full_n = ap_const_logic_0) or (ctrl1_reg_c13_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl2_reg_read <= ap_const_logic_1;
        else 
            ctrl2_reg_read <= ap_const_logic_0;
        end if; 
    end process;

    empty_159_fu_193_p1 <= layer1_reg_dout(16 - 1 downto 0);
    empty_160_fu_197_p1 <= ctrl1_reg_dout(8 - 1 downto 0);
    empty_fu_189_p1 <= ctrl2_reg_dout(8 - 1 downto 0);
    grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_start <= grp_Row_Wise_FFT_Pipeline_VITIS_LOOP_160_4_VITIS_LOOP_163_5_fu_160_ap_start_reg;

    grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_continue_assign_proc : process(ap_CS_fsm_state11, ap_block_state11_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_continue <= ap_const_logic_1;
        else 
            grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_start <= grp_dataflow_in_loop_VITIS_LOOP_172_6_fu_169_ap_start_reg;
    grp_fu_407_p0 <= grp_fu_407_p00(16 - 1 downto 0);
    grp_fu_407_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_159_reg_460),32));
    grp_fu_407_p1 <= grp_fu_407_p10(16 - 1 downto 0);
    grp_fu_407_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound4_fu_234_p2),32));
    icmp_ln1057_4_fu_273_p2 <= "1" when (indvar_flatten21_fu_100 = bound12_reg_507) else "0";
    icmp_ln1057_5_fu_287_p2 <= "1" when (indvar_flatten7_fu_96 = bound4_reg_477) else "0";
    icmp_ln1057_6_fu_316_p2 <= "1" when (pnx_fu_88 = empty_reg_441) else "0";
    icmp_ln1057_fu_265_p2 <= "1" when (empty_reg_441 = ap_const_lv8_0) else "0";
    icmp_ln1069_fu_347_p2 <= "1" when (signed(y_2_reg_150) > signed(conv_i_i88_reg_492)) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6, icmp_ln1057_4_fu_273_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_4_fu_273_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    layer1_reg_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer1_reg_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer1_reg_blk_n <= layer1_reg_empty_n;
        else 
            layer1_reg_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer1_reg_c19_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer1_reg_c19_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer1_reg_c19_blk_n <= layer1_reg_c19_full_n;
        else 
            layer1_reg_c19_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer1_reg_c19_din <= layer1_reg_dout;

    layer1_reg_c19_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c13_full_n, ctrl2_reg_c16_full_n, layer1_reg_c19_full_n)
    begin
        if ((not(((layer1_reg_c19_full_n = ap_const_logic_0) or (ctrl2_reg_c16_full_n = ap_const_logic_0) or (ctrl1_reg_c13_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer1_reg_c19_write <= ap_const_logic_1;
        else 
            layer1_reg_c19_write <= ap_const_logic_0;
        end if; 
    end process;


    layer1_reg_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c13_full_n, ctrl2_reg_c16_full_n, layer1_reg_c19_full_n)
    begin
        if ((not(((layer1_reg_c19_full_n = ap_const_logic_0) or (ctrl2_reg_c16_full_n = ap_const_logic_0) or (ctrl1_reg_c13_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer1_reg_read <= ap_const_logic_1;
        else 
            layer1_reg_read <= ap_const_logic_0;
        end if; 
    end process;

    or_ln149_fu_312_p2 <= (icmp_ln1057_5_reg_525 or cmp29_reg_538);
    or_ln157_fu_358_p2 <= (select_ln149_1_reg_549 or icmp_ln1057_5_reg_525);
    pnx_3_fu_362_p3 <= 
        ap_const_lv8_1 when (or_ln157_fu_358_p2(0) = '1') else 
        add_ln157_fu_352_p2;
    pny_4_fu_306_p2 <= std_logic_vector(unsigned(select_ln149_fu_292_p3) + unsigned(ap_const_lv8_1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln1057_1_fu_376_p3 <= 
        ap_const_lv16_1 when (icmp_ln1057_5_reg_525(0) = '1') else 
        add_ln1057_fu_370_p2;
    select_ln1057_fu_341_p3 <= 
        pny_4_reg_543 when (select_ln149_1_fu_321_p3(0) = '1') else 
        select_ln149_reg_533;
    select_ln149_1_fu_321_p3 <= 
        icmp_ln1057_reg_512 when (icmp_ln1057_5_reg_525(0) = '1') else 
        icmp_ln1057_6_fu_316_p2;
    select_ln149_2_fu_332_p3 <= 
        cmp_mid1_fu_327_p2 when (select_ln149_1_fu_321_p3(0) = '1') else 
        or_ln149_fu_312_p2;
    select_ln149_fu_292_p3 <= 
        ap_const_lv8_0 when (icmp_ln1057_5_fu_287_p2(0) = '1') else 
        pny_fu_92;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    y_3_fu_401_p2 <= std_logic_vector(unsigned(y_2_reg_150) + unsigned(ap_const_lv32_1));
    y_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_1_reg_471),32));
end behav;
