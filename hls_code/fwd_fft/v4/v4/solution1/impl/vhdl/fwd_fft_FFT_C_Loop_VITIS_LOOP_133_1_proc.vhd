-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fwd_fft_FFT_C_Loop_VITIS_LOOP_133_1_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ctrl1_reg_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl1_reg_empty_n : IN STD_LOGIC;
    ctrl1_reg_read : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (23 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (39 downto 0);
    c_row_op_trans_st_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    c_row_op_trans_st_empty_n : IN STD_LOGIC;
    c_row_op_trans_st_read : OUT STD_LOGIC;
    c_fft_col_op_st_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_fft_col_op_st_full_n : IN STD_LOGIC;
    c_fft_col_op_st_write : OUT STD_LOGIC;
    ctrl1_reg_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctrl1_reg_c_full_n : IN STD_LOGIC;
    ctrl1_reg_c_write : OUT STD_LOGIC );
end;


architecture behav of fwd_fft_FFT_C_Loop_VITIS_LOOP_133_1_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (22 downto 0) := "00000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (22 downto 0) := "00000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (22 downto 0) := "00000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (22 downto 0) := "00000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (22 downto 0) := "00000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (22 downto 0) := "00000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (22 downto 0) := "00001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (22 downto 0) := "00010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (22 downto 0) := "00100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (22 downto 0) := "01000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv40_1 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ctrl1_reg_blk_n : STD_LOGIC;
    signal ctrl1_reg_c_blk_n : STD_LOGIC;
    signal empty_fu_211_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_reg_285 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_fu_215_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_reg_290 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal empty_183_fu_234_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal empty_183_reg_311 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal input_data1_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_data1_i_ce0 : STD_LOGIC;
    signal input_data1_i_we0 : STD_LOGIC;
    signal input_data1_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_data1_i_ce1 : STD_LOGIC;
    signal input_data1_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_12_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_12_i_ce0 : STD_LOGIC;
    signal out_data_12_i_we0 : STD_LOGIC;
    signal out_data_12_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_12_i_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_12_i_ce1 : STD_LOGIC;
    signal out_data_12_i_we1 : STD_LOGIC;
    signal out_data_12_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_63_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_63_i_ce0 : STD_LOGIC;
    signal out_data_63_i_we0 : STD_LOGIC;
    signal out_data_63_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_63_i_ce1 : STD_LOGIC;
    signal out_data_63_i_we1 : STD_LOGIC;
    signal out_data_24_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_24_i_ce0 : STD_LOGIC;
    signal out_data_24_i_we0 : STD_LOGIC;
    signal out_data_24_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_24_i_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_24_i_ce1 : STD_LOGIC;
    signal out_data_24_i_we1 : STD_LOGIC;
    signal out_data_24_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_35_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_35_i_ce0 : STD_LOGIC;
    signal out_data_35_i_we0 : STD_LOGIC;
    signal out_data_35_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_35_i_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_35_i_ce1 : STD_LOGIC;
    signal out_data_35_i_we1 : STD_LOGIC;
    signal out_data_35_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_46_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_46_i_ce0 : STD_LOGIC;
    signal out_data_46_i_we0 : STD_LOGIC;
    signal out_data_46_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_46_i_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_46_i_ce1 : STD_LOGIC;
    signal out_data_46_i_we1 : STD_LOGIC;
    signal out_data_46_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_57_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_57_i_ce0 : STD_LOGIC;
    signal out_data_57_i_we0 : STD_LOGIC;
    signal out_data_57_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_57_i_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_data_57_i_ce1 : STD_LOGIC;
    signal out_data_57_i_we1 : STD_LOGIC;
    signal out_data_57_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_start : STD_LOGIC;
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_done : STD_LOGIC;
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_idle : STD_LOGIC;
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_ready : STD_LOGIC;
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_c_row_op_trans_st_read : STD_LOGIC;
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_ce0 : STD_LOGIC;
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_we0 : STD_LOGIC;
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_fu_178_ap_start : STD_LOGIC;
    signal grp_fft_stage_fu_178_ap_done : STD_LOGIC;
    signal grp_fft_stage_fu_178_ap_idle : STD_LOGIC;
    signal grp_fft_stage_fu_178_ap_ready : STD_LOGIC;
    signal grp_fft_stage_fu_178_IN_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_fu_178_IN_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_fu_178_IN_r_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_fu_178_IN_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_fu_178_IN_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_fu_178_IN_r_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_fu_178_OUT_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_fu_178_OUT_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_fu_178_OUT_r_we0 : STD_LOGIC;
    signal grp_fft_stage_fu_178_OUT_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_fu_178_OUT_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_fu_178_OUT_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_fu_178_OUT_r_we1 : STD_LOGIC;
    signal grp_fft_stage_fu_178_OUT_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_fu_178_curr_stage_offset : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft_stage_fu_178_y_offset : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_start : STD_LOGIC;
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_done : STD_LOGIC;
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_idle : STD_LOGIC;
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_ready : STD_LOGIC;
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_c_fft_col_op_st_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_c_fft_col_op_st_write : STD_LOGIC;
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_out_data_63_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_out_data_63_i_ce0 : STD_LOGIC;
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln133_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fft_stage_fu_178_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal i_8_fu_106 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln1057_fu_248_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal p_cast_fu_228_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_259_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_cast10_fu_231_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_266_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_183_fu_234_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_259_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_266_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_259_ce : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal empty_183_fu_234_p00 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_259_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_266_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component fwd_fft_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_row_op_trans_st_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        c_row_op_trans_st_empty_n : IN STD_LOGIC;
        c_row_op_trans_st_read : OUT STD_LOGIC;
        lhs_V : IN STD_LOGIC_VECTOR (7 downto 0);
        input_data1_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_data1_i_ce0 : OUT STD_LOGIC;
        input_data1_i_we0 : OUT STD_LOGIC;
        input_data1_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fwd_fft_fft_stage IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        IN_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_r_ce0 : OUT STD_LOGIC;
        IN_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        IN_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_r_ce1 : OUT STD_LOGIC;
        IN_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        OUT_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_ce0 : OUT STD_LOGIC;
        OUT_r_we0 : OUT STD_LOGIC;
        OUT_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        OUT_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_ce1 : OUT STD_LOGIC;
        OUT_r_we1 : OUT STD_LOGIC;
        OUT_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        curr_stage_offset : IN STD_LOGIC_VECTOR (2 downto 0);
        y_offset : IN STD_LOGIC_VECTOR (6 downto 0);
        p_read : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component fwd_fft_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_fft_col_op_st_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_fft_col_op_st_full_n : IN STD_LOGIC;
        c_fft_col_op_st_write : OUT STD_LOGIC;
        lhs_V : IN STD_LOGIC_VECTOR (7 downto 0);
        out_data_63_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_data_63_i_ce0 : OUT STD_LOGIC;
        out_data_63_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fwd_fft_mul_24ns_40s_40_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (39 downto 0);
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component fwd_fft_mul_mul_8ns_16s_16_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component fwd_fft_mul_mul_16ns_24s_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component fwd_fft_FFT_R_Loop_VITIS_LOOP_93_1_proc_input_data1_i IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fwd_fft_FFT_R_Loop_VITIS_LOOP_93_1_proc_out_data_12_i IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fwd_fft_FFT_R_Loop_VITIS_LOOP_93_1_proc_out_data_63_i IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    input_data1_i_U : component fwd_fft_FFT_R_Loop_VITIS_LOOP_93_1_proc_input_data1_i
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_data1_i_address0,
        ce0 => input_data1_i_ce0,
        we0 => input_data1_i_we0,
        d0 => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_d0,
        q0 => input_data1_i_q0,
        address1 => grp_fft_stage_fu_178_IN_r_address1,
        ce1 => input_data1_i_ce1,
        q1 => input_data1_i_q1);

    out_data_12_i_U : component fwd_fft_FFT_R_Loop_VITIS_LOOP_93_1_proc_out_data_12_i
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_data_12_i_address0,
        ce0 => out_data_12_i_ce0,
        we0 => out_data_12_i_we0,
        d0 => grp_fft_stage_fu_178_OUT_r_d0,
        q0 => out_data_12_i_q0,
        address1 => out_data_12_i_address1,
        ce1 => out_data_12_i_ce1,
        we1 => out_data_12_i_we1,
        d1 => grp_fft_stage_fu_178_OUT_r_d1,
        q1 => out_data_12_i_q1);

    out_data_63_i_U : component fwd_fft_FFT_R_Loop_VITIS_LOOP_93_1_proc_out_data_63_i
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_data_63_i_address0,
        ce0 => out_data_63_i_ce0,
        we0 => out_data_63_i_we0,
        d0 => grp_fft_stage_fu_178_OUT_r_d0,
        q0 => out_data_63_i_q0,
        address1 => grp_fft_stage_fu_178_OUT_r_address1,
        ce1 => out_data_63_i_ce1,
        we1 => out_data_63_i_we1,
        d1 => grp_fft_stage_fu_178_OUT_r_d1);

    out_data_24_i_U : component fwd_fft_FFT_R_Loop_VITIS_LOOP_93_1_proc_out_data_12_i
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_data_24_i_address0,
        ce0 => out_data_24_i_ce0,
        we0 => out_data_24_i_we0,
        d0 => grp_fft_stage_fu_178_OUT_r_d0,
        q0 => out_data_24_i_q0,
        address1 => out_data_24_i_address1,
        ce1 => out_data_24_i_ce1,
        we1 => out_data_24_i_we1,
        d1 => grp_fft_stage_fu_178_OUT_r_d1,
        q1 => out_data_24_i_q1);

    out_data_35_i_U : component fwd_fft_FFT_R_Loop_VITIS_LOOP_93_1_proc_out_data_12_i
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_data_35_i_address0,
        ce0 => out_data_35_i_ce0,
        we0 => out_data_35_i_we0,
        d0 => grp_fft_stage_fu_178_OUT_r_d0,
        q0 => out_data_35_i_q0,
        address1 => out_data_35_i_address1,
        ce1 => out_data_35_i_ce1,
        we1 => out_data_35_i_we1,
        d1 => grp_fft_stage_fu_178_OUT_r_d1,
        q1 => out_data_35_i_q1);

    out_data_46_i_U : component fwd_fft_FFT_R_Loop_VITIS_LOOP_93_1_proc_out_data_12_i
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_data_46_i_address0,
        ce0 => out_data_46_i_ce0,
        we0 => out_data_46_i_we0,
        d0 => grp_fft_stage_fu_178_OUT_r_d0,
        q0 => out_data_46_i_q0,
        address1 => out_data_46_i_address1,
        ce1 => out_data_46_i_ce1,
        we1 => out_data_46_i_we1,
        d1 => grp_fft_stage_fu_178_OUT_r_d1,
        q1 => out_data_46_i_q1);

    out_data_57_i_U : component fwd_fft_FFT_R_Loop_VITIS_LOOP_93_1_proc_out_data_12_i
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_data_57_i_address0,
        ce0 => out_data_57_i_ce0,
        we0 => out_data_57_i_we0,
        d0 => grp_fft_stage_fu_178_OUT_r_d0,
        q0 => out_data_57_i_q0,
        address1 => out_data_57_i_address1,
        ce1 => out_data_57_i_ce1,
        we1 => out_data_57_i_we1,
        d1 => grp_fft_stage_fu_178_OUT_r_d1,
        q1 => out_data_57_i_q1);

    grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170 : component fwd_fft_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_start,
        ap_done => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_done,
        ap_idle => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_idle,
        ap_ready => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_ready,
        c_row_op_trans_st_dout => c_row_op_trans_st_dout,
        c_row_op_trans_st_empty_n => c_row_op_trans_st_empty_n,
        c_row_op_trans_st_read => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_c_row_op_trans_st_read,
        lhs_V => lhs_V_reg_290,
        input_data1_i_address0 => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_address0,
        input_data1_i_ce0 => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_ce0,
        input_data1_i_we0 => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_we0,
        input_data1_i_d0 => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_d0);

    grp_fft_stage_fu_178 : component fwd_fft_fft_stage
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_fu_178_ap_start,
        ap_done => grp_fft_stage_fu_178_ap_done,
        ap_idle => grp_fft_stage_fu_178_ap_idle,
        ap_ready => grp_fft_stage_fu_178_ap_ready,
        IN_r_address0 => grp_fft_stage_fu_178_IN_r_address0,
        IN_r_ce0 => grp_fft_stage_fu_178_IN_r_ce0,
        IN_r_q0 => grp_fft_stage_fu_178_IN_r_q0,
        IN_r_address1 => grp_fft_stage_fu_178_IN_r_address1,
        IN_r_ce1 => grp_fft_stage_fu_178_IN_r_ce1,
        IN_r_q1 => grp_fft_stage_fu_178_IN_r_q1,
        OUT_r_address0 => grp_fft_stage_fu_178_OUT_r_address0,
        OUT_r_ce0 => grp_fft_stage_fu_178_OUT_r_ce0,
        OUT_r_we0 => grp_fft_stage_fu_178_OUT_r_we0,
        OUT_r_d0 => grp_fft_stage_fu_178_OUT_r_d0,
        OUT_r_address1 => grp_fft_stage_fu_178_OUT_r_address1,
        OUT_r_ce1 => grp_fft_stage_fu_178_OUT_r_ce1,
        OUT_r_we1 => grp_fft_stage_fu_178_OUT_r_we1,
        OUT_r_d1 => grp_fft_stage_fu_178_OUT_r_d1,
        curr_stage_offset => grp_fft_stage_fu_178_curr_stage_offset,
        y_offset => grp_fft_stage_fu_178_y_offset,
        p_read => empty_reg_285);

    grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203 : component fwd_fft_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_start,
        ap_done => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_done,
        ap_idle => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_idle,
        ap_ready => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_ready,
        c_fft_col_op_st_din => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_c_fft_col_op_st_din,
        c_fft_col_op_st_full_n => c_fft_col_op_st_full_n,
        c_fft_col_op_st_write => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_c_fft_col_op_st_write,
        lhs_V => lhs_V_reg_290,
        out_data_63_i_address0 => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_out_data_63_i_address0,
        out_data_63_i_ce0 => grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_out_data_63_i_ce0,
        out_data_63_i_q0 => out_data_63_i_q0);

    mul_24ns_40s_40_1_1_U208 : component fwd_fft_mul_24ns_40s_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 40,
        dout_WIDTH => 40)
    port map (
        din0 => empty_183_fu_234_p0,
        din1 => p_read2,
        dout => empty_183_fu_234_p2);

    mul_mul_8ns_16s_16_4_1_U209 : component fwd_fft_mul_mul_8ns_16s_16_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_259_p0,
        din1 => p_read,
        ce => grp_fu_259_ce,
        dout => grp_fu_259_p2);

    mul_mul_16ns_24s_24_4_1_U210 : component fwd_fft_mul_mul_16ns_24s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_266_p0,
        din1 => p_read1,
        ce => ap_const_logic_1,
        dout => grp_fu_266_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln133_fu_243_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln133_fu_243_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_ready = ap_const_logic_1)) then 
                    grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_ready = ap_const_logic_1)) then 
                    grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_stage_fu_178_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_fu_178_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_fft_stage_fu_178_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_fu_178_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_fu_178_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_8_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ctrl1_reg_c_full_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_8_fu_106 <= ap_const_lv40_0;
            elsif (((icmp_ln133_fu_243_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_8_fu_106 <= add_ln1057_fu_248_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                empty_183_reg_311 <= empty_183_fu_234_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_reg_285 <= empty_fu_211_p1;
                lhs_V_reg_290 <= lhs_V_fu_215_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl1_reg_c_full_n, grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_done, grp_fft_stage_fu_178_ap_done, grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_done, ap_CS_fsm_state8, icmp_ln133_fu_243_p2, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ctrl1_reg_c_full_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln133_fu_243_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_fft_stage_fu_178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((grp_fft_stage_fu_178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_fft_stage_fu_178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_fft_stage_fu_178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((grp_fft_stage_fu_178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_fft_stage_fu_178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1057_fu_248_p2 <= std_logic_vector(unsigned(i_8_fu_106) + unsigned(ap_const_lv40_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_fft_stage_fu_178_ap_done)
    begin
        if ((grp_fft_stage_fu_178_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_fft_stage_fu_178_ap_done)
    begin
        if ((grp_fft_stage_fu_178_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_fft_stage_fu_178_ap_done)
    begin
        if ((grp_fft_stage_fu_178_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_fft_stage_fu_178_ap_done)
    begin
        if ((grp_fft_stage_fu_178_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_fft_stage_fu_178_ap_done)
    begin
        if ((grp_fft_stage_fu_178_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, ctrl1_reg_empty_n, ctrl1_reg_c_full_n)
    begin
        if (((ctrl1_reg_c_full_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_fft_stage_fu_178_ap_done)
    begin
        if ((grp_fft_stage_fu_178_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;

    ap_ST_fsm_state23_blk_assign_proc : process(grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_done)
    begin
        if ((grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_done)
    begin
        if ((grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, ctrl1_reg_empty_n, ctrl1_reg_c_full_n)
    begin
                ap_block_state1 <= ((ctrl1_reg_c_full_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state8, icmp_ln133_fu_243_p2)
    begin
        if (((icmp_ln133_fu_243_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8, icmp_ln133_fu_243_p2)
    begin
        if (((icmp_ln133_fu_243_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c_fft_col_op_st_din <= grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_c_fft_col_op_st_din;

    c_fft_col_op_st_write_assign_proc : process(grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_c_fft_col_op_st_write, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            c_fft_col_op_st_write <= grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_c_fft_col_op_st_write;
        else 
            c_fft_col_op_st_write <= ap_const_logic_0;
        end if; 
    end process;


    c_row_op_trans_st_read_assign_proc : process(grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_c_row_op_trans_st_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            c_row_op_trans_st_read <= grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_c_row_op_trans_st_read;
        else 
            c_row_op_trans_st_read <= ap_const_logic_0;
        end if; 
    end process;


    ctrl1_reg_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_blk_n <= ctrl1_reg_empty_n;
        else 
            ctrl1_reg_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl1_reg_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_c_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_c_blk_n <= ctrl1_reg_c_full_n;
        else 
            ctrl1_reg_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ctrl1_reg_c_din <= ctrl1_reg_dout;

    ctrl1_reg_c_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl1_reg_c_full_n)
    begin
        if ((not(((ctrl1_reg_c_full_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_c_write <= ap_const_logic_1;
        else 
            ctrl1_reg_c_write <= ap_const_logic_0;
        end if; 
    end process;


    ctrl1_reg_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl1_reg_c_full_n)
    begin
        if ((not(((ctrl1_reg_c_full_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_read <= ap_const_logic_1;
        else 
            ctrl1_reg_read <= ap_const_logic_0;
        end if; 
    end process;

    empty_183_fu_234_p0 <= empty_183_fu_234_p00(24 - 1 downto 0);
    empty_183_fu_234_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast10_fu_231_p0),40));
    empty_fu_211_p1 <= ctrl1_reg_dout(16 - 1 downto 0);
    grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_start <= grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_ap_start_reg;
    grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_start <= grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_ap_start_reg;

    grp_fft_stage_fu_178_IN_r_q0_assign_proc : process(input_data1_i_q0, out_data_12_i_q0, out_data_24_i_q0, out_data_35_i_q0, out_data_46_i_q0, out_data_57_i_q0, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fft_stage_fu_178_IN_r_q0 <= out_data_57_i_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fft_stage_fu_178_IN_r_q0 <= out_data_46_i_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fft_stage_fu_178_IN_r_q0 <= out_data_35_i_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fft_stage_fu_178_IN_r_q0 <= out_data_24_i_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fft_stage_fu_178_IN_r_q0 <= out_data_12_i_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fft_stage_fu_178_IN_r_q0 <= input_data1_i_q0;
        else 
            grp_fft_stage_fu_178_IN_r_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_fu_178_IN_r_q1_assign_proc : process(input_data1_i_q1, out_data_12_i_q1, out_data_24_i_q1, out_data_35_i_q1, out_data_46_i_q1, out_data_57_i_q1, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fft_stage_fu_178_IN_r_q1 <= out_data_57_i_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fft_stage_fu_178_IN_r_q1 <= out_data_46_i_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fft_stage_fu_178_IN_r_q1 <= out_data_35_i_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fft_stage_fu_178_IN_r_q1 <= out_data_24_i_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fft_stage_fu_178_IN_r_q1 <= out_data_12_i_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fft_stage_fu_178_IN_r_q1 <= input_data1_i_q1;
        else 
            grp_fft_stage_fu_178_IN_r_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fft_stage_fu_178_ap_start <= grp_fft_stage_fu_178_ap_start_reg;

    grp_fft_stage_fu_178_curr_stage_offset_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fft_stage_fu_178_curr_stage_offset <= ap_const_lv3_6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fft_stage_fu_178_curr_stage_offset <= ap_const_lv3_5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fft_stage_fu_178_curr_stage_offset <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fft_stage_fu_178_curr_stage_offset <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fft_stage_fu_178_curr_stage_offset <= ap_const_lv3_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fft_stage_fu_178_curr_stage_offset <= ap_const_lv3_1;
        else 
            grp_fft_stage_fu_178_curr_stage_offset <= "XXX";
        end if; 
    end process;


    grp_fft_stage_fu_178_y_offset_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fft_stage_fu_178_y_offset <= ap_const_lv7_40;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fft_stage_fu_178_y_offset <= ap_const_lv7_20;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fft_stage_fu_178_y_offset <= ap_const_lv7_10;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fft_stage_fu_178_y_offset <= ap_const_lv7_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fft_stage_fu_178_y_offset <= ap_const_lv7_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fft_stage_fu_178_y_offset <= ap_const_lv7_2;
        else 
            grp_fft_stage_fu_178_y_offset <= "XXXXXXX";
        end if; 
    end process;


    grp_fu_259_ce_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl1_reg_c_full_n, ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ctrl1_reg_c_full_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            grp_fu_259_ce <= ap_const_logic_1;
        else 
            grp_fu_259_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_259_p0 <= grp_fu_259_p00(8 - 1 downto 0);
    grp_fu_259_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_fu_215_p1),16));
    grp_fu_266_p0 <= grp_fu_266_p00(16 - 1 downto 0);
    grp_fu_266_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast_fu_228_p0),24));
    icmp_ln133_fu_243_p2 <= "1" when (i_8_fu_106 = empty_183_reg_311) else "0";

    input_data1_i_address0_assign_proc : process(grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_address0, grp_fft_stage_fu_178_IN_r_address0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            input_data1_i_address0 <= grp_fft_stage_fu_178_IN_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_data1_i_address0 <= grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_address0;
        else 
            input_data1_i_address0 <= "XXXXXX";
        end if; 
    end process;


    input_data1_i_ce0_assign_proc : process(grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_ce0, grp_fft_stage_fu_178_IN_r_ce0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            input_data1_i_ce0 <= grp_fft_stage_fu_178_IN_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_data1_i_ce0 <= grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_ce0;
        else 
            input_data1_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_data1_i_ce1_assign_proc : process(grp_fft_stage_fu_178_IN_r_ce1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            input_data1_i_ce1 <= grp_fft_stage_fu_178_IN_r_ce1;
        else 
            input_data1_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_data1_i_we0_assign_proc : process(grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_data1_i_we0 <= grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_52_1_fu_170_input_data1_i_we0;
        else 
            input_data1_i_we0 <= ap_const_logic_0;
        end if; 
    end process;

    lhs_V_fu_215_p1 <= ctrl1_reg_dout(8 - 1 downto 0);

    out_data_12_i_address0_assign_proc : process(grp_fft_stage_fu_178_IN_r_address0, grp_fft_stage_fu_178_OUT_r_address0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            out_data_12_i_address0 <= grp_fft_stage_fu_178_OUT_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            out_data_12_i_address0 <= grp_fft_stage_fu_178_IN_r_address0;
        else 
            out_data_12_i_address0 <= "XXXXXX";
        end if; 
    end process;


    out_data_12_i_address1_assign_proc : process(grp_fft_stage_fu_178_IN_r_address1, grp_fft_stage_fu_178_OUT_r_address1, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            out_data_12_i_address1 <= grp_fft_stage_fu_178_OUT_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            out_data_12_i_address1 <= grp_fft_stage_fu_178_IN_r_address1;
        else 
            out_data_12_i_address1 <= "XXXXXX";
        end if; 
    end process;


    out_data_12_i_ce0_assign_proc : process(grp_fft_stage_fu_178_IN_r_ce0, grp_fft_stage_fu_178_OUT_r_ce0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            out_data_12_i_ce0 <= grp_fft_stage_fu_178_OUT_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            out_data_12_i_ce0 <= grp_fft_stage_fu_178_IN_r_ce0;
        else 
            out_data_12_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_12_i_ce1_assign_proc : process(grp_fft_stage_fu_178_IN_r_ce1, grp_fft_stage_fu_178_OUT_r_ce1, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            out_data_12_i_ce1 <= grp_fft_stage_fu_178_OUT_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            out_data_12_i_ce1 <= grp_fft_stage_fu_178_IN_r_ce1;
        else 
            out_data_12_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_12_i_we0_assign_proc : process(grp_fft_stage_fu_178_OUT_r_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            out_data_12_i_we0 <= grp_fft_stage_fu_178_OUT_r_we0;
        else 
            out_data_12_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_12_i_we1_assign_proc : process(grp_fft_stage_fu_178_OUT_r_we1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            out_data_12_i_we1 <= grp_fft_stage_fu_178_OUT_r_we1;
        else 
            out_data_12_i_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_24_i_address0_assign_proc : process(grp_fft_stage_fu_178_IN_r_address0, grp_fft_stage_fu_178_OUT_r_address0, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            out_data_24_i_address0 <= grp_fft_stage_fu_178_OUT_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_data_24_i_address0 <= grp_fft_stage_fu_178_IN_r_address0;
        else 
            out_data_24_i_address0 <= "XXXXXX";
        end if; 
    end process;


    out_data_24_i_address1_assign_proc : process(grp_fft_stage_fu_178_IN_r_address1, grp_fft_stage_fu_178_OUT_r_address1, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            out_data_24_i_address1 <= grp_fft_stage_fu_178_OUT_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_data_24_i_address1 <= grp_fft_stage_fu_178_IN_r_address1;
        else 
            out_data_24_i_address1 <= "XXXXXX";
        end if; 
    end process;


    out_data_24_i_ce0_assign_proc : process(grp_fft_stage_fu_178_IN_r_ce0, grp_fft_stage_fu_178_OUT_r_ce0, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            out_data_24_i_ce0 <= grp_fft_stage_fu_178_OUT_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_data_24_i_ce0 <= grp_fft_stage_fu_178_IN_r_ce0;
        else 
            out_data_24_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_24_i_ce1_assign_proc : process(grp_fft_stage_fu_178_IN_r_ce1, grp_fft_stage_fu_178_OUT_r_ce1, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            out_data_24_i_ce1 <= grp_fft_stage_fu_178_OUT_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_data_24_i_ce1 <= grp_fft_stage_fu_178_IN_r_ce1;
        else 
            out_data_24_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_24_i_we0_assign_proc : process(grp_fft_stage_fu_178_OUT_r_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            out_data_24_i_we0 <= grp_fft_stage_fu_178_OUT_r_we0;
        else 
            out_data_24_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_24_i_we1_assign_proc : process(grp_fft_stage_fu_178_OUT_r_we1, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            out_data_24_i_we1 <= grp_fft_stage_fu_178_OUT_r_we1;
        else 
            out_data_24_i_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_35_i_address0_assign_proc : process(grp_fft_stage_fu_178_IN_r_address0, grp_fft_stage_fu_178_OUT_r_address0, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_data_35_i_address0 <= grp_fft_stage_fu_178_OUT_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_data_35_i_address0 <= grp_fft_stage_fu_178_IN_r_address0;
        else 
            out_data_35_i_address0 <= "XXXXXX";
        end if; 
    end process;


    out_data_35_i_address1_assign_proc : process(grp_fft_stage_fu_178_IN_r_address1, grp_fft_stage_fu_178_OUT_r_address1, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_data_35_i_address1 <= grp_fft_stage_fu_178_OUT_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_data_35_i_address1 <= grp_fft_stage_fu_178_IN_r_address1;
        else 
            out_data_35_i_address1 <= "XXXXXX";
        end if; 
    end process;


    out_data_35_i_ce0_assign_proc : process(grp_fft_stage_fu_178_IN_r_ce0, grp_fft_stage_fu_178_OUT_r_ce0, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_data_35_i_ce0 <= grp_fft_stage_fu_178_OUT_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_data_35_i_ce0 <= grp_fft_stage_fu_178_IN_r_ce0;
        else 
            out_data_35_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_35_i_ce1_assign_proc : process(grp_fft_stage_fu_178_IN_r_ce1, grp_fft_stage_fu_178_OUT_r_ce1, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_data_35_i_ce1 <= grp_fft_stage_fu_178_OUT_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_data_35_i_ce1 <= grp_fft_stage_fu_178_IN_r_ce1;
        else 
            out_data_35_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_35_i_we0_assign_proc : process(grp_fft_stage_fu_178_OUT_r_we0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_data_35_i_we0 <= grp_fft_stage_fu_178_OUT_r_we0;
        else 
            out_data_35_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_35_i_we1_assign_proc : process(grp_fft_stage_fu_178_OUT_r_we1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_data_35_i_we1 <= grp_fft_stage_fu_178_OUT_r_we1;
        else 
            out_data_35_i_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_46_i_address0_assign_proc : process(grp_fft_stage_fu_178_IN_r_address0, grp_fft_stage_fu_178_OUT_r_address0, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_data_46_i_address0 <= grp_fft_stage_fu_178_OUT_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_data_46_i_address0 <= grp_fft_stage_fu_178_IN_r_address0;
        else 
            out_data_46_i_address0 <= "XXXXXX";
        end if; 
    end process;


    out_data_46_i_address1_assign_proc : process(grp_fft_stage_fu_178_IN_r_address1, grp_fft_stage_fu_178_OUT_r_address1, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_data_46_i_address1 <= grp_fft_stage_fu_178_OUT_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_data_46_i_address1 <= grp_fft_stage_fu_178_IN_r_address1;
        else 
            out_data_46_i_address1 <= "XXXXXX";
        end if; 
    end process;


    out_data_46_i_ce0_assign_proc : process(grp_fft_stage_fu_178_IN_r_ce0, grp_fft_stage_fu_178_OUT_r_ce0, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_data_46_i_ce0 <= grp_fft_stage_fu_178_OUT_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_data_46_i_ce0 <= grp_fft_stage_fu_178_IN_r_ce0;
        else 
            out_data_46_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_46_i_ce1_assign_proc : process(grp_fft_stage_fu_178_IN_r_ce1, grp_fft_stage_fu_178_OUT_r_ce1, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_data_46_i_ce1 <= grp_fft_stage_fu_178_OUT_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_data_46_i_ce1 <= grp_fft_stage_fu_178_IN_r_ce1;
        else 
            out_data_46_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_46_i_we0_assign_proc : process(grp_fft_stage_fu_178_OUT_r_we0, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_data_46_i_we0 <= grp_fft_stage_fu_178_OUT_r_we0;
        else 
            out_data_46_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_46_i_we1_assign_proc : process(grp_fft_stage_fu_178_OUT_r_we1, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_data_46_i_we1 <= grp_fft_stage_fu_178_OUT_r_we1;
        else 
            out_data_46_i_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_57_i_address0_assign_proc : process(grp_fft_stage_fu_178_IN_r_address0, grp_fft_stage_fu_178_OUT_r_address0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_data_57_i_address0 <= grp_fft_stage_fu_178_OUT_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_data_57_i_address0 <= grp_fft_stage_fu_178_IN_r_address0;
        else 
            out_data_57_i_address0 <= "XXXXXX";
        end if; 
    end process;


    out_data_57_i_address1_assign_proc : process(grp_fft_stage_fu_178_IN_r_address1, grp_fft_stage_fu_178_OUT_r_address1, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_data_57_i_address1 <= grp_fft_stage_fu_178_OUT_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_data_57_i_address1 <= grp_fft_stage_fu_178_IN_r_address1;
        else 
            out_data_57_i_address1 <= "XXXXXX";
        end if; 
    end process;


    out_data_57_i_ce0_assign_proc : process(grp_fft_stage_fu_178_IN_r_ce0, grp_fft_stage_fu_178_OUT_r_ce0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_data_57_i_ce0 <= grp_fft_stage_fu_178_OUT_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_data_57_i_ce0 <= grp_fft_stage_fu_178_IN_r_ce0;
        else 
            out_data_57_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_57_i_ce1_assign_proc : process(grp_fft_stage_fu_178_IN_r_ce1, grp_fft_stage_fu_178_OUT_r_ce1, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_data_57_i_ce1 <= grp_fft_stage_fu_178_OUT_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_data_57_i_ce1 <= grp_fft_stage_fu_178_IN_r_ce1;
        else 
            out_data_57_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_57_i_we0_assign_proc : process(grp_fft_stage_fu_178_OUT_r_we0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_data_57_i_we0 <= grp_fft_stage_fu_178_OUT_r_we0;
        else 
            out_data_57_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_57_i_we1_assign_proc : process(grp_fft_stage_fu_178_OUT_r_we1, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            out_data_57_i_we1 <= grp_fft_stage_fu_178_OUT_r_we1;
        else 
            out_data_57_i_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_63_i_address0_assign_proc : process(grp_fft_stage_fu_178_OUT_r_address0, grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_out_data_63_i_address0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            out_data_63_i_address0 <= grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_out_data_63_i_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_data_63_i_address0 <= grp_fft_stage_fu_178_OUT_r_address0;
        else 
            out_data_63_i_address0 <= "XXXXXX";
        end if; 
    end process;


    out_data_63_i_ce0_assign_proc : process(grp_fft_stage_fu_178_OUT_r_ce0, grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_out_data_63_i_ce0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            out_data_63_i_ce0 <= grp_FFT_C_Loop_VITIS_LOOP_133_1_proc_Pipeline_VITIS_LOOP_61_1_fu_203_out_data_63_i_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_data_63_i_ce0 <= grp_fft_stage_fu_178_OUT_r_ce0;
        else 
            out_data_63_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_63_i_ce1_assign_proc : process(grp_fft_stage_fu_178_OUT_r_ce1, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_data_63_i_ce1 <= grp_fft_stage_fu_178_OUT_r_ce1;
        else 
            out_data_63_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_63_i_we0_assign_proc : process(grp_fft_stage_fu_178_OUT_r_we0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_data_63_i_we0 <= grp_fft_stage_fu_178_OUT_r_we0;
        else 
            out_data_63_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_data_63_i_we1_assign_proc : process(grp_fft_stage_fu_178_OUT_r_we1, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_data_63_i_we1 <= grp_fft_stage_fu_178_OUT_r_we1;
        else 
            out_data_63_i_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast10_fu_231_p0 <= grp_fu_266_p2;
    p_cast_fu_228_p0 <= grp_fu_259_p2;
end behav;
