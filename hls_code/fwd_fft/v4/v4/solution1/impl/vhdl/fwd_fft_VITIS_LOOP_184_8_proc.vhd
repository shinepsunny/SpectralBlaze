-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fwd_fft_VITIS_LOOP_184_8_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    c_fft_row_op_st_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_fft_row_op_st_full_n : IN STD_LOGIC;
    c_fft_row_op_st_write : OUT STD_LOGIC;
    pny : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
    y_6 : IN STD_LOGIC_VECTOR (31 downto 0);
    Row_Buffer_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    Row_Buffer_full_n : IN STD_LOGIC;
    Row_Buffer_write : OUT STD_LOGIC );
end;


architecture behav of fwd_fft_VITIS_LOOP_184_8_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_FFFFFFF5 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111110101";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv16_FFF5 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111110101";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_FFFFFFF4 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111110100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal c_fft_row_op_st_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal Row_Buffer_blk_n : STD_LOGIC;
    signal and_ln188_reg_839 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_182_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_reg_834 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln188_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln184_fu_251_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln184_reg_846 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln1057_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_fft_M_real_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_861 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal p_Result_39_reg_868 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_fft_M_imag_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_8_reg_874 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_42_reg_881 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_reg_887 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_V_11_fu_283_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_11_reg_892 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1044_fu_315_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1044_reg_900 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1044_fu_321_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1044_reg_907 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1047_fu_325_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1047_reg_912 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1043_fu_329_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1043_reg_917 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1035_2_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_2_reg_922 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_12_fu_343_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_12_reg_927 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1044_2_fu_375_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1044_2_reg_935 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1044_2_fu_381_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1044_2_reg_942 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1047_2_fu_385_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1047_2_reg_947 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1043_2_fu_389_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1043_2_reg_952 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln_i_fu_484_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln_i_reg_957 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln1058_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1058_reg_962 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1061_2_i_fu_589_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1061_2_i_reg_967 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1058_2_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1058_2_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_21_reg_977 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal select_ln1043_fu_661_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1043_reg_982 : STD_LOGIC_VECTOR (4 downto 0);
    signal m_reg_987 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln1043_2_fu_727_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1043_2_reg_992 : STD_LOGIC_VECTOR (4 downto 0);
    signal out_fft_M_imag_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_fft_M_imag_V_ce0 : STD_LOGIC;
    signal out_fft_M_real_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal out_fft_M_real_V_ce0 : STD_LOGIC;
    signal zext_ln149_fu_240_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fu_108 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal tmp_i_fu_813_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctrl2_reg_load_cast_cast_fu_190_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal pny_cast_fu_186_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_i_i_fu_194_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln_fu_206_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_fu_216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln188_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_fu_278_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_289_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_40_fu_299_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_307_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_7_fu_338_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_27_fu_349_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_43_fu_359_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_2_fu_367_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_393_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_398_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln1047_fu_414_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1047_fu_419_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln1047_fu_423_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_22_fu_429_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_440_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1046_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1047_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1049_fu_460_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_23_fu_465_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1046_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1061_3_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1049_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1061_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lsb_index_2_fu_498_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_503_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln1047_2_fu_519_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1047_2_fu_524_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln1047_2_fu_528_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_29_fu_534_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_545_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1046_2_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1047_2_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1049_2_fu_565_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_30_fu_570_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1046_2_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1061_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1049_2_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1061_2_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1058_fu_603_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1058cast_fu_608_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1059_fu_617_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1059cast_fu_622_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln1058_fu_612_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1059_fu_626_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal m_10_fu_631_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal m_11_fu_638_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_24_fu_653_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1058_2_fu_669_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1058_2cast_fu_674_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1059_2_fu_683_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1059_2cast_fu_688_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln1058_2_fu_678_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1059_2_fu_692_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal m_12_fu_697_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal m_13_fu_704_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_31_fu_719_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1064_fu_738_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1064_fu_743_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1062_fu_735_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_i_fu_748_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln1064_2_fu_770_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1064_2_fu_775_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1062_2_fu_767_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_i_fu_780_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_44_fu_787_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_41_fu_755_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln174_fu_799_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln174_2_fu_806_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fwd_fft_VITIS_LOOP_184_8_proc_out_fft_M_imag_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    out_fft_M_imag_V_U : component fwd_fft_VITIS_LOOP_184_8_proc_out_fft_M_imag_V
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_fft_M_imag_V_address0,
        ce0 => out_fft_M_imag_V_ce0,
        q0 => out_fft_M_imag_V_q0);

    out_fft_M_real_V_U : component fwd_fft_VITIS_LOOP_184_8_proc_out_fft_M_imag_V
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_fft_M_real_V_address0,
        ce0 => out_fft_M_real_V_ce0,
        q0 => out_fft_M_real_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln1057_fu_246_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    x_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                x_fu_108 <= ap_const_lv8_0;
            elsif ((not(((c_fft_row_op_st_full_n = ap_const_logic_0) or ((ap_const_lv1_1 = and_ln188_reg_839) and (ap_const_logic_0 = Row_Buffer_full_n)))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                x_fu_108 <= add_ln184_reg_846;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln184_reg_846 <= add_ln184_fu_251_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                and_ln188_reg_839 <= and_ln188_fu_226_p2;
                empty_reg_834 <= empty_fu_182_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_ln1035_2_reg_922 <= icmp_ln1035_2_fu_333_p2;
                icmp_ln1035_reg_887 <= icmp_ln1035_fu_273_p2;
                sub_ln1044_2_reg_935 <= sub_ln1044_2_fu_375_p2;
                sub_ln1044_reg_900 <= sub_ln1044_fu_315_p2;
                tmp_V_11_reg_892 <= tmp_V_11_fu_283_p3;
                tmp_V_12_reg_927 <= tmp_V_12_fu_343_p3;
                trunc_ln1043_2_reg_952 <= trunc_ln1043_2_fu_389_p1;
                trunc_ln1043_reg_917 <= trunc_ln1043_fu_329_p1;
                trunc_ln1044_2_reg_942 <= trunc_ln1044_2_fu_381_p1;
                trunc_ln1044_reg_907 <= trunc_ln1044_fu_321_p1;
                trunc_ln1047_2_reg_947 <= trunc_ln1047_2_fu_385_p1;
                trunc_ln1047_reg_912 <= trunc_ln1047_fu_325_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln1035_2_reg_922 = ap_const_lv1_0))) then
                icmp_ln1058_2_reg_972 <= icmp_ln1058_2_fu_597_p2;
                    or_ln1061_2_i_reg_967(0) <= or_ln1061_2_i_fu_589_p3(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1035_reg_887 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                icmp_ln1058_reg_962 <= icmp_ln1058_fu_492_p2;
                    or_ln_i_reg_957(0) <= or_ln_i_fu_484_p3(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1035_reg_887 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                m_21_reg_977 <= m_11_fu_638_p2(15 downto 1);
                    select_ln1043_reg_982(0) <= select_ln1043_fu_661_p3(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1035_2_reg_922 = ap_const_lv1_0))) then
                m_reg_987 <= m_13_fu_704_p2(15 downto 1);
                    select_ln1043_2_reg_992(0) <= select_ln1043_2_fu_727_p3(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                p_Result_39_reg_868 <= out_fft_M_real_V_q0(15 downto 15);
                p_Result_42_reg_881 <= out_fft_M_imag_V_q0(15 downto 15);
                p_Val2_8_reg_874 <= out_fft_M_imag_V_q0;
                p_Val2_s_reg_861 <= out_fft_M_real_V_q0;
            end if;
        end if;
    end process;
    or_ln_i_reg_957(15 downto 1) <= "000000000000000";
    or_ln1061_2_i_reg_967(15 downto 1) <= "000000000000000";
    select_ln1043_reg_982(4 downto 1) <= "0111";
    select_ln1043_2_reg_992(4 downto 1) <= "0111";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, c_fft_row_op_st_full_n, Row_Buffer_full_n, ap_CS_fsm_state7, and_ln188_reg_839, ap_CS_fsm_state2, icmp_ln1057_fu_246_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln1057_fu_246_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if ((not(((c_fft_row_op_st_full_n = ap_const_logic_0) or ((ap_const_lv1_1 = and_ln188_reg_839) and (ap_const_logic_0 = Row_Buffer_full_n)))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;

    Row_Buffer_blk_n_assign_proc : process(Row_Buffer_full_n, ap_CS_fsm_state7, and_ln188_reg_839)
    begin
        if (((ap_const_lv1_1 = and_ln188_reg_839) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            Row_Buffer_blk_n <= Row_Buffer_full_n;
        else 
            Row_Buffer_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    Row_Buffer_din <= tmp_i_fu_813_p3;

    Row_Buffer_write_assign_proc : process(c_fft_row_op_st_full_n, Row_Buffer_full_n, ap_CS_fsm_state7, and_ln188_reg_839)
    begin
        if ((not(((c_fft_row_op_st_full_n = ap_const_logic_0) or ((ap_const_lv1_1 = and_ln188_reg_839) and (ap_const_logic_0 = Row_Buffer_full_n)))) and (ap_const_lv1_1 = and_ln188_reg_839) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            Row_Buffer_write <= ap_const_logic_1;
        else 
            Row_Buffer_write <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1049_2_fu_565_p2 <= std_logic_vector(unsigned(trunc_ln1044_2_reg_942) + unsigned(ap_const_lv16_FFF5));
    add_ln1049_fu_460_p2 <= std_logic_vector(unsigned(trunc_ln1044_reg_907) + unsigned(ap_const_lv16_FFF5));
    add_ln1058_2_fu_669_p2 <= std_logic_vector(unsigned(sub_ln1044_2_reg_935) + unsigned(ap_const_lv32_FFFFFFF4));
    add_ln1058_2cast_fu_674_p1 <= add_ln1058_2_fu_669_p2(16 - 1 downto 0);
    add_ln1058_fu_603_p2 <= std_logic_vector(unsigned(sub_ln1044_reg_900) + unsigned(ap_const_lv32_FFFFFFF4));
    add_ln1058cast_fu_608_p1 <= add_ln1058_fu_603_p2(16 - 1 downto 0);
    add_ln1064_2_fu_775_p2 <= std_logic_vector(unsigned(sub_ln1064_2_fu_770_p2) + unsigned(select_ln1043_2_reg_992));
    add_ln1064_fu_743_p2 <= std_logic_vector(unsigned(sub_ln1064_fu_738_p2) + unsigned(select_ln1043_reg_982));
    add_ln184_fu_251_p2 <= std_logic_vector(unsigned(x_fu_108) + unsigned(ap_const_lv8_1));
    and_ln1046_2_fu_559_p2 <= (icmp_ln1047_2_fu_539_p2 and icmp_ln1046_2_fu_513_p2);
    and_ln1046_fu_454_p2 <= (icmp_ln1047_fu_434_p2 and icmp_ln1046_fu_408_p2);
    and_ln1061_2_fu_583_p2 <= (xor_ln1049_2_fu_553_p2 and or_ln1061_fu_577_p2);
    and_ln1061_fu_478_p2 <= (xor_ln1049_fu_448_p2 and or_ln1061_3_fu_472_p2);
    and_ln188_fu_226_p2 <= (icmp_ln188_fu_220_p2 and cmp_i_i_fu_200_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(c_fft_row_op_st_full_n, Row_Buffer_full_n, and_ln188_reg_839)
    begin
        if (((c_fft_row_op_st_full_n = ap_const_logic_0) or ((ap_const_lv1_1 = and_ln188_reg_839) and (ap_const_logic_0 = Row_Buffer_full_n)))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(c_fft_row_op_st_full_n, Row_Buffer_full_n, and_ln188_reg_839)
    begin
                ap_block_state7 <= ((c_fft_row_op_st_full_n = ap_const_logic_0) or ((ap_const_lv1_1 = and_ln188_reg_839) and (ap_const_logic_0 = Row_Buffer_full_n)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln1057_fu_246_p2)
    begin
        if (((icmp_ln1057_fu_246_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln1057_fu_246_p2)
    begin
        if (((icmp_ln1057_fu_246_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    c_fft_row_op_st_blk_n_assign_proc : process(c_fft_row_op_st_full_n, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            c_fft_row_op_st_blk_n <= c_fft_row_op_st_full_n;
        else 
            c_fft_row_op_st_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    c_fft_row_op_st_din <= tmp_i_fu_813_p3;

    c_fft_row_op_st_write_assign_proc : process(c_fft_row_op_st_full_n, Row_Buffer_full_n, ap_CS_fsm_state7, and_ln188_reg_839)
    begin
        if ((not(((c_fft_row_op_st_full_n = ap_const_logic_0) or ((ap_const_lv1_1 = and_ln188_reg_839) and (ap_const_logic_0 = Row_Buffer_full_n)))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            c_fft_row_op_st_write <= ap_const_logic_1;
        else 
            c_fft_row_op_st_write <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i_fu_200_p2 <= "0" when (pny_cast_fu_186_p1 = sub_i_i_fu_194_p2) else "1";
    ctrl2_reg_load_cast_cast_fu_190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1),9));
    empty_fu_182_p1 <= p_read(8 - 1 downto 0);
    icmp_ln1035_2_fu_333_p2 <= "1" when (p_Val2_8_reg_874 = ap_const_lv16_0) else "0";
    icmp_ln1035_fu_273_p2 <= "1" when (p_Val2_s_reg_861 = ap_const_lv16_0) else "0";
    icmp_ln1046_2_fu_513_p2 <= "1" when (signed(tmp_14_fu_503_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln1046_fu_408_p2 <= "1" when (signed(tmp_fu_398_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln1047_2_fu_539_p2 <= "0" when (p_Result_29_fu_534_p2 = ap_const_lv16_0) else "1";
    icmp_ln1047_fu_434_p2 <= "0" when (p_Result_22_fu_429_p2 = ap_const_lv16_0) else "1";
    icmp_ln1057_fu_246_p2 <= "1" when (x_fu_108 = empty_reg_834) else "0";
    icmp_ln1058_2_fu_597_p2 <= "1" when (signed(lsb_index_2_fu_498_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1058_fu_492_p2 <= "1" when (signed(lsb_index_fu_393_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln188_fu_220_p2 <= "1" when (signed(zext_ln1065_fu_216_p1) < signed(y_6)) else "0";
    
    l_2_fu_367_p3_proc : process(p_Result_43_fu_359_p3)
    begin
        l_2_fu_367_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_43_fu_359_p3(i) = '1' then
                l_2_fu_367_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_fu_307_p3_proc : process(p_Result_40_fu_299_p3)
    begin
        l_fu_307_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_40_fu_299_p3(i) = '1' then
                l_fu_307_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lsb_index_2_fu_498_p2 <= std_logic_vector(unsigned(sub_ln1044_2_reg_935) + unsigned(ap_const_lv32_FFFFFFF5));
    lsb_index_fu_393_p2 <= std_logic_vector(unsigned(sub_ln1044_reg_900) + unsigned(ap_const_lv32_FFFFFFF5));
    lshr_ln1047_2_fu_528_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & zext_ln1047_2_fu_524_p1(16-1 downto 0)))));
    lshr_ln1047_fu_423_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & zext_ln1047_fu_419_p1(16-1 downto 0)))));
    lshr_ln1058_2_fu_678_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_12_reg_927),to_integer(unsigned('0' & add_ln1058_2cast_fu_674_p1(16-1 downto 0)))));
    lshr_ln1058_fu_612_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_11_reg_892),to_integer(unsigned('0' & add_ln1058cast_fu_608_p1(16-1 downto 0)))));
    lshr_ln_fu_206_p4 <= p_read(31 downto 24);
    m_10_fu_631_p3 <= 
        lshr_ln1058_fu_612_p2 when (icmp_ln1058_reg_962(0) = '1') else 
        shl_ln1059_fu_626_p2;
    m_11_fu_638_p2 <= std_logic_vector(unsigned(or_ln_i_reg_957) + unsigned(m_10_fu_631_p3));
    m_12_fu_697_p3 <= 
        lshr_ln1058_2_fu_678_p2 when (icmp_ln1058_2_reg_972(0) = '1') else 
        shl_ln1059_2_fu_692_p2;
    m_13_fu_704_p2 <= std_logic_vector(unsigned(or_ln1061_2_i_reg_967) + unsigned(m_12_fu_697_p3));
    or_ln1061_2_i_fu_589_p3 <= (ap_const_lv15_0 & and_ln1061_2_fu_583_p2);
    or_ln1061_3_fu_472_p2 <= (p_Result_23_fu_465_p3 or and_ln1046_fu_454_p2);
    or_ln1061_fu_577_p2 <= (p_Result_30_fu_570_p3 or and_ln1046_2_fu_559_p2);
    or_ln_i_fu_484_p3 <= (ap_const_lv15_0 & and_ln1061_fu_478_p2);
    out_fft_M_imag_V_address0 <= zext_ln149_fu_240_p1(6 - 1 downto 0);

    out_fft_M_imag_V_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            out_fft_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            out_fft_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_fft_M_real_V_address0 <= zext_ln149_fu_240_p1(6 - 1 downto 0);

    out_fft_M_real_V_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            out_fft_M_real_V_ce0 <= ap_const_logic_1;
        else 
            out_fft_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_22_fu_429_p2 <= (tmp_V_11_reg_892 and lshr_ln1047_fu_423_p2);
    p_Result_23_fu_465_p3 <= tmp_V_11_reg_892(to_integer(unsigned(add_ln1049_fu_460_p2)) downto to_integer(unsigned(add_ln1049_fu_460_p2))) when (to_integer(unsigned(add_ln1049_fu_460_p2))>= 0 and to_integer(unsigned(add_ln1049_fu_460_p2))<=15) else "-";
    p_Result_24_fu_653_p3 <= m_11_fu_638_p2(12 downto 12);
    
    p_Result_27_fu_349_p4_proc : process(tmp_V_12_fu_343_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable p_Result_27_fu_349_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_V_12_fu_343_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for p_Result_27_fu_349_p4_i in 0 to 16-1 loop
                v0_cpy(p_Result_27_fu_349_p4_i) := tmp_V_12_fu_343_p3(16-1-p_Result_27_fu_349_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_27_fu_349_p4 <= resvalue(16-1 downto 0);
    end process;

    p_Result_29_fu_534_p2 <= (tmp_V_12_reg_927 and lshr_ln1047_2_fu_528_p2);
    p_Result_30_fu_570_p3 <= tmp_V_12_reg_927(to_integer(unsigned(add_ln1049_2_fu_565_p2)) downto to_integer(unsigned(add_ln1049_2_fu_565_p2))) when (to_integer(unsigned(add_ln1049_2_fu_565_p2))>= 0 and to_integer(unsigned(add_ln1049_2_fu_565_p2))<=15) else "-";
    p_Result_31_fu_719_p3 <= m_13_fu_704_p2(12 downto 12);
    p_Result_40_fu_299_p3 <= (ap_const_lv16_FFFF & p_Result_s_fu_289_p4);
    p_Result_41_fu_755_p5 <= (tmp_14_i_fu_748_p3 & zext_ln1062_fu_735_p1(9 downto 0));
    p_Result_43_fu_359_p3 <= (ap_const_lv16_FFFF & p_Result_27_fu_349_p4);
    p_Result_44_fu_787_p5 <= (tmp_16_i_fu_780_p3 & zext_ln1062_2_fu_767_p1(9 downto 0));
    
    p_Result_s_fu_289_p4_proc : process(tmp_V_11_fu_283_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable p_Result_s_fu_289_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_V_11_fu_283_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for p_Result_s_fu_289_p4_i in 0 to 16-1 loop
                v0_cpy(p_Result_s_fu_289_p4_i) := tmp_V_11_fu_283_p3(16-1-p_Result_s_fu_289_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_289_p4 <= resvalue(16-1 downto 0);
    end process;

    pny_cast_fu_186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pny),9));
    select_ln1043_2_fu_727_p3 <= 
        ap_const_lv5_F when (p_Result_31_fu_719_p3(0) = '1') else 
        ap_const_lv5_E;
    select_ln1043_fu_661_p3 <= 
        ap_const_lv5_F when (p_Result_24_fu_653_p3(0) = '1') else 
        ap_const_lv5_E;
    select_ln174_2_fu_806_p3 <= 
        ap_const_lv16_0 when (icmp_ln1035_reg_887(0) = '1') else 
        p_Result_41_fu_755_p5;
    select_ln174_fu_799_p3 <= 
        ap_const_lv16_0 when (icmp_ln1035_2_reg_922(0) = '1') else 
        p_Result_44_fu_787_p5;
    shl_ln1059_2_fu_692_p2 <= std_logic_vector(shift_left(unsigned(tmp_V_12_reg_927),to_integer(unsigned('0' & sub_ln1059_2cast_fu_688_p1(16-1 downto 0)))));
    shl_ln1059_fu_626_p2 <= std_logic_vector(shift_left(unsigned(tmp_V_11_reg_892),to_integer(unsigned('0' & sub_ln1059cast_fu_622_p1(16-1 downto 0)))));
    sub_i_i_fu_194_p2 <= std_logic_vector(unsigned(ctrl2_reg_load_cast_cast_fu_190_p1) + unsigned(ap_const_lv9_1FF));
    sub_ln1044_2_fu_375_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(l_2_fu_367_p3));
    sub_ln1044_fu_315_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(l_fu_307_p3));
    sub_ln1047_2_fu_519_p2 <= std_logic_vector(signed(ap_const_lv5_1C) - signed(trunc_ln1047_2_reg_947));
    sub_ln1047_fu_414_p2 <= std_logic_vector(signed(ap_const_lv5_1C) - signed(trunc_ln1047_reg_912));
    sub_ln1059_2_fu_683_p2 <= std_logic_vector(unsigned(ap_const_lv32_C) - unsigned(sub_ln1044_2_reg_935));
    sub_ln1059_2cast_fu_688_p1 <= sub_ln1059_2_fu_683_p2(16 - 1 downto 0);
    sub_ln1059_fu_617_p2 <= std_logic_vector(unsigned(ap_const_lv32_C) - unsigned(sub_ln1044_reg_900));
    sub_ln1059cast_fu_622_p1 <= sub_ln1059_fu_617_p2(16 - 1 downto 0);
    sub_ln1064_2_fu_770_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) - unsigned(trunc_ln1043_2_reg_952));
    sub_ln1064_fu_738_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) - unsigned(trunc_ln1043_reg_917));
    tmp_11_fu_440_p3 <= lsb_index_fu_393_p2(31 downto 31);
    tmp_14_fu_503_p4 <= lsb_index_2_fu_498_p2(31 downto 1);
    tmp_14_i_fu_748_p3 <= (p_Result_39_reg_868 & add_ln1064_fu_743_p2);
    tmp_15_fu_545_p3 <= lsb_index_2_fu_498_p2(31 downto 31);
    tmp_16_i_fu_780_p3 <= (p_Result_42_reg_881 & add_ln1064_2_fu_775_p2);
    tmp_V_11_fu_283_p3 <= 
        tmp_V_fu_278_p2 when (p_Result_39_reg_868(0) = '1') else 
        p_Val2_s_reg_861;
    tmp_V_12_fu_343_p3 <= 
        tmp_V_7_fu_338_p2 when (p_Result_42_reg_881(0) = '1') else 
        p_Val2_8_reg_874;
    tmp_V_7_fu_338_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Val2_8_reg_874));
    tmp_V_fu_278_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Val2_s_reg_861));
    tmp_fu_398_p4 <= lsb_index_fu_393_p2(31 downto 1);
    tmp_i_fu_813_p3 <= (select_ln174_fu_799_p3 & select_ln174_2_fu_806_p3);
    trunc_ln1043_2_fu_389_p1 <= l_2_fu_367_p3(5 - 1 downto 0);
    trunc_ln1043_fu_329_p1 <= l_fu_307_p3(5 - 1 downto 0);
    trunc_ln1044_2_fu_381_p1 <= sub_ln1044_2_fu_375_p2(16 - 1 downto 0);
    trunc_ln1044_fu_321_p1 <= sub_ln1044_fu_315_p2(16 - 1 downto 0);
    trunc_ln1047_2_fu_385_p1 <= sub_ln1044_2_fu_375_p2(5 - 1 downto 0);
    trunc_ln1047_fu_325_p1 <= sub_ln1044_fu_315_p2(5 - 1 downto 0);
    xor_ln1049_2_fu_553_p2 <= (tmp_15_fu_545_p3 xor ap_const_lv1_1);
    xor_ln1049_fu_448_p2 <= (tmp_11_fu_440_p3 xor ap_const_lv1_1);
    zext_ln1047_2_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1047_2_fu_519_p2),16));
    zext_ln1047_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1047_fu_414_p2),16));
    zext_ln1062_2_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_reg_987),16));
    zext_ln1062_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_21_reg_977),16));
    zext_ln1065_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_206_p4),32));
    zext_ln149_fu_240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_fu_108),64));
end behav;
