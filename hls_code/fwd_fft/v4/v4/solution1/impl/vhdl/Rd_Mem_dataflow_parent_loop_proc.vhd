-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Rd_Mem_dataflow_parent_loop_proc is
port (
    ctrl2_reg_load_cast : IN STD_LOGIC_VECTOR (7 downto 0);
    ctrl1_reg : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl2_reg : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_reg : IN STD_LOGIC_VECTOR (31 downto 0);
    burst_buffer1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    burst_buffer1_ce0 : OUT STD_LOGIC;
    burst_buffer1_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    burst_buffer1_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    burst_buffer1_we0 : OUT STD_LOGIC;
    burst_buffer1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    burst_buffer1_ce1 : OUT STD_LOGIC;
    burst_buffer1_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    burst_buffer1_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    burst_buffer1_we1 : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (127 downto 0);
    burst_buffer2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    burst_buffer2_ce0 : OUT STD_LOGIC;
    burst_buffer2_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    burst_buffer2_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    burst_buffer2_we0 : OUT STD_LOGIC;
    burst_buffer2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    burst_buffer2_ce1 : OUT STD_LOGIC;
    burst_buffer2_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    burst_buffer2_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
    burst_buffer2_we1 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ctrl1_reg_ap_vld : IN STD_LOGIC;
    ctrl2_reg_ap_vld : IN STD_LOGIC;
    layer2_reg_ap_vld : IN STD_LOGIC;
    in_r_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of Rd_Mem_dataflow_parent_loop_proc is 
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_ce0 : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_we0 : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_ce1 : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_d1 : STD_LOGIC_VECTOR (127 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_we1 : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_ce0 : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_we0 : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_ce1 : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_d1 : STD_LOGIC_VECTOR (127 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_we1 : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_start : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_done : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_idle : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_continue : STD_LOGIC;
    signal loop_dataflow_input_count : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal loop_dataflow_output_count : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal bound_minus_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component Rd_Mem_dataflow_in_loop_VITIS_LOOP_283_2 IS
    port (
        ctrl1_reg : IN STD_LOGIC_VECTOR (31 downto 0);
        ctrl2_reg : IN STD_LOGIC_VECTOR (31 downto 0);
        pny_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        layer2_reg : IN STD_LOGIC_VECTOR (31 downto 0);
        burst_buffer1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        burst_buffer1_ce0 : OUT STD_LOGIC;
        burst_buffer1_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        burst_buffer1_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        burst_buffer1_we0 : OUT STD_LOGIC;
        burst_buffer1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        burst_buffer1_ce1 : OUT STD_LOGIC;
        burst_buffer1_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
        burst_buffer1_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        burst_buffer1_we1 : OUT STD_LOGIC;
        in_r : IN STD_LOGIC_VECTOR (127 downto 0);
        burst_buffer2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        burst_buffer2_ce0 : OUT STD_LOGIC;
        burst_buffer2_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        burst_buffer2_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        burst_buffer2_we0 : OUT STD_LOGIC;
        burst_buffer2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        burst_buffer2_ce1 : OUT STD_LOGIC;
        burst_buffer2_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
        burst_buffer2_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        burst_buffer2_we1 : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ctrl1_reg_ap_vld : IN STD_LOGIC;
        ctrl2_reg_ap_vld : IN STD_LOGIC;
        pny_2_ap_vld : IN STD_LOGIC;
        layer2_reg_ap_vld : IN STD_LOGIC;
        in_r_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    dataflow_in_loop_VITIS_LOOP_283_2_U0 : component Rd_Mem_dataflow_in_loop_VITIS_LOOP_283_2
    port map (
        ctrl1_reg => ctrl1_reg,
        ctrl2_reg => ctrl2_reg,
        pny_2 => loop_dataflow_input_count,
        layer2_reg => layer2_reg,
        burst_buffer1_address0 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_address0,
        burst_buffer1_ce0 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_ce0,
        burst_buffer1_d0 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_d0,
        burst_buffer1_q0 => ap_const_lv128_lc_1,
        burst_buffer1_we0 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_we0,
        burst_buffer1_address1 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_address1,
        burst_buffer1_ce1 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_ce1,
        burst_buffer1_d1 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_d1,
        burst_buffer1_q1 => ap_const_lv128_lc_1,
        burst_buffer1_we1 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_we1,
        in_r => in_r,
        burst_buffer2_address0 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_address0,
        burst_buffer2_ce0 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_ce0,
        burst_buffer2_d0 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_d0,
        burst_buffer2_q0 => ap_const_lv128_lc_1,
        burst_buffer2_we0 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_we0,
        burst_buffer2_address1 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_address1,
        burst_buffer2_ce1 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_ce1,
        burst_buffer2_d1 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_d1,
        burst_buffer2_q1 => ap_const_lv128_lc_1,
        burst_buffer2_we1 => dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_we1,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ctrl1_reg_ap_vld => ctrl1_reg_ap_vld,
        ctrl2_reg_ap_vld => ctrl2_reg_ap_vld,
        pny_2_ap_vld => ap_const_logic_0,
        layer2_reg_ap_vld => layer2_reg_ap_vld,
        in_r_ap_vld => in_r_ap_vld,
        ap_start => dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_start,
        ap_done => dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_done,
        ap_ready => dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_ready,
        ap_idle => dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_idle,
        ap_continue => dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_continue);





    loop_dataflow_input_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_input_count <= ap_const_lv8_0;
            else
                if ((not((loop_dataflow_input_count = bound_minus_1)) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= std_logic_vector(unsigned(loop_dataflow_input_count) + unsigned(ap_const_lv8_1));
                elsif (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= ap_const_lv8_0;
                end if; 
            end if;
        end if;
    end process;


    loop_dataflow_output_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_output_count <= ap_const_lv8_0;
            else
                if ((not((loop_dataflow_output_count = bound_minus_1)) and (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= std_logic_vector(unsigned(loop_dataflow_output_count) + unsigned(ap_const_lv8_1));
                elsif (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= ap_const_lv8_0;
                end if; 
            end if;
        end if;
    end process;


    ap_done_assign_proc : process(dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_done, loop_dataflow_output_count, bound_minus_1)
    begin
        if (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_idle, ap_start, loop_dataflow_output_count)
    begin
        if (((loop_dataflow_output_count = ap_const_lv8_0) and (ap_start = ap_const_logic_0) and (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_idle = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_ready, ap_start, loop_dataflow_input_count, bound_minus_1)
    begin
        if (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_ready = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound_minus_1 <= std_logic_vector(unsigned(ctrl2_reg_load_cast) - unsigned(ap_const_lv8_1));
    burst_buffer1_address0 <= dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_address0;
    burst_buffer1_address1 <= ap_const_lv11_0;
    burst_buffer1_ce0 <= dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_ce0;
    burst_buffer1_ce1 <= ap_const_logic_0;
    burst_buffer1_d0 <= dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_d0;
    burst_buffer1_d1 <= ap_const_lv128_lc_1;
    burst_buffer1_we0 <= dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer1_we0;
    burst_buffer1_we1 <= ap_const_logic_0;
    burst_buffer2_address0 <= dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_address0;
    burst_buffer2_address1 <= ap_const_lv11_0;
    burst_buffer2_ce0 <= dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_ce0;
    burst_buffer2_ce1 <= ap_const_logic_0;
    burst_buffer2_d0 <= dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_d0;
    burst_buffer2_d1 <= ap_const_lv128_lc_1;
    burst_buffer2_we0 <= dataflow_in_loop_VITIS_LOOP_283_2_U0_burst_buffer2_we0;
    burst_buffer2_we1 <= ap_const_logic_0;

    dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_continue_assign_proc : process(ap_continue, loop_dataflow_output_count, bound_minus_1)
    begin
        if ((not((loop_dataflow_output_count = bound_minus_1)) or (ap_continue = ap_const_logic_1))) then 
            dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_continue <= ap_const_logic_1;
        else 
            dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    dataflow_in_loop_VITIS_LOOP_283_2_U0_ap_start <= ap_start;
end behav;
