-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft_stage is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    IN_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    IN_r_ce0 : OUT STD_LOGIC;
    IN_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    IN_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    IN_r_ce1 : OUT STD_LOGIC;
    IN_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    OUT_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    OUT_r_ce0 : OUT STD_LOGIC;
    OUT_r_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUT_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    OUT_r_ce1 : OUT STD_LOGIC;
    OUT_r_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUT_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    curr_stage : IN STD_LOGIC_VECTOR (31 downto 0);
    y : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl1_reg : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of fft_stage is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fft_stage_fft_stage,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7cg-fbvb900-1-i,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.953000,HLS_SYN_LAT=19,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1661,HLS_SYN_LUT=1828,HLS_VERSION=2021_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal empty_fu_110_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_235 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1069_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_13_fu_134_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_13_reg_244 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_i_i43_cast_reg_249 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_lshr_reg_254 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_fu_170_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_259 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal empty_14_fu_216_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_14_reg_264 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub28_fu_221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub28_reg_269 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_start : STD_LOGIC;
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_done : STD_LOGIC;
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_idle : STD_LOGIC;
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_ready : STD_LOGIC;
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_start : STD_LOGIC;
    signal grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_done : STD_LOGIC;
    signal grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_idle : STD_LOGIC;
    signal grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_ready : STD_LOGIC;
    signal grp_fft_stage_Pipeline_SKIP_X_fu_93_IN_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_Pipeline_SKIP_X_fu_93_IN_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal lshr_ln_fu_114_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1069_fu_124_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_149_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_fu_165_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_lshr_cast_fu_186_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_fu_195_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1_fu_179_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_189_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_cast_fu_204_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal div_fu_208_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fft_stage_fft_stage_Pipeline_VITIS_LOOP_37_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln37 : IN STD_LOGIC_VECTOR (7 downto 0);
        IN_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_r_ce0 : OUT STD_LOGIC;
        IN_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        IN_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_r_ce1 : OUT STD_LOGIC;
        IN_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        OUT_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_ce0 : OUT STD_LOGIC;
        OUT_r_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        OUT_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        OUT_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_ce1 : OUT STD_LOGIC;
        OUT_r_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        OUT_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fft_stage_fft_stage_Pipeline_SKIP_X IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        div_i_i43_cast : IN STD_LOGIC_VECTOR (6 downto 0);
        zext_ln19_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        IN_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_r_ce0 : OUT STD_LOGIC;
        IN_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        div_cast : IN STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_ce0 : OUT STD_LOGIC;
        OUT_r_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        OUT_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sub28 : IN STD_LOGIC_VECTOR (31 downto 0);
        y : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84 : component fft_stage_fft_stage_Pipeline_VITIS_LOOP_37_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_start,
        ap_done => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_done,
        ap_idle => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_idle,
        ap_ready => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_ready,
        zext_ln37 => empty_13_reg_244,
        IN_r_address0 => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_address0,
        IN_r_ce0 => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_ce0,
        IN_r_q0 => IN_r_q0,
        IN_r_address1 => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_address1,
        IN_r_ce1 => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_ce1,
        IN_r_q1 => IN_r_q1,
        OUT_r_address0 => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_address0,
        OUT_r_ce0 => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_ce0,
        OUT_r_we0 => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_we0,
        OUT_r_d0 => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_d0,
        OUT_r_address1 => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_address1,
        OUT_r_ce1 => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_ce1,
        OUT_r_we1 => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_we1,
        OUT_r_d1 => grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_d1);

    grp_fft_stage_Pipeline_SKIP_X_fu_93 : component fft_stage_fft_stage_Pipeline_SKIP_X
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_start,
        ap_done => grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_done,
        ap_idle => grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_idle,
        ap_ready => grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_ready,
        div_i_i43_cast => div_i_i43_cast_reg_249,
        zext_ln19_1 => tmp_reg_259,
        IN_r_address0 => grp_fft_stage_Pipeline_SKIP_X_fu_93_IN_r_address0,
        IN_r_ce0 => grp_fft_stage_Pipeline_SKIP_X_fu_93_IN_r_ce0,
        IN_r_q0 => IN_r_q0,
        div_cast => empty_14_reg_264,
        OUT_r_address0 => grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_address0,
        OUT_r_ce0 => grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_ce0,
        OUT_r_we0 => grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_we0,
        OUT_r_d0 => grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_d0,
        sub28 => sub28_reg_269,
        y => y);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (icmp_ln1069_fu_128_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1069_fu_128_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                div_i_i43_cast_reg_249 <= ctrl1_reg(7 downto 1);
                p_lshr_reg_254 <= p_neg_fu_149_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_13_reg_244 <= empty_13_fu_134_p1;
                empty_reg_235 <= empty_fu_110_p1;
                icmp_ln1069_reg_240 <= icmp_ln1069_fu_128_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                empty_14_reg_264 <= empty_14_fu_216_p1;
                sub28_reg_269 <= sub28_fu_221_p2;
                    tmp_reg_259(7 downto 5) <= tmp_fu_170_p3(7 downto 5);
            end if;
        end if;
    end process;
    tmp_reg_259(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln1069_fu_128_p2, grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (icmp_ln1069_fu_128_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_start = ap_const_logic_1) and (icmp_ln1069_fu_128_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    IN_r_address0_assign_proc : process(icmp_ln1069_reg_240, grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_address0, grp_fft_stage_Pipeline_SKIP_X_fu_93_IN_r_address0, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            IN_r_address0 <= grp_fft_stage_Pipeline_SKIP_X_fu_93_IN_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            IN_r_address0 <= grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_address0;
        else 
            IN_r_address0 <= "XXXXXX";
        end if; 
    end process;

    IN_r_address1 <= grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_address1;

    IN_r_ce0_assign_proc : process(icmp_ln1069_reg_240, grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_ce0, grp_fft_stage_Pipeline_SKIP_X_fu_93_IN_r_ce0, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            IN_r_ce0 <= grp_fft_stage_Pipeline_SKIP_X_fu_93_IN_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            IN_r_ce0 <= grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_ce0;
        else 
            IN_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    IN_r_ce1_assign_proc : process(grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            IN_r_ce1 <= grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_IN_r_ce1;
        else 
            IN_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_address0_assign_proc : process(icmp_ln1069_reg_240, grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_address0, grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_address0, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OUT_r_address0 <= grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_address0 <= grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_address0;
        else 
            OUT_r_address0 <= "XXXXXX";
        end if; 
    end process;

    OUT_r_address1 <= grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_address1;

    OUT_r_ce0_assign_proc : process(icmp_ln1069_reg_240, grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_ce0, grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_ce0, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OUT_r_ce0 <= grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_ce0 <= grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_ce0;
        else 
            OUT_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_ce1_assign_proc : process(grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_ce1 <= grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_ce1;
        else 
            OUT_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_d0_assign_proc : process(icmp_ln1069_reg_240, grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_d0, grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_d0, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OUT_r_d0 <= grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_d0 <= grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_d0;
        else 
            OUT_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    OUT_r_d1 <= grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_d1;

    OUT_r_we0_assign_proc : process(icmp_ln1069_reg_240, grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_we0, grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_we0, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OUT_r_we0 <= grp_fft_stage_Pipeline_SKIP_X_fu_93_OUT_r_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_we0 <= grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_we0;
        else 
            OUT_r_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;


    OUT_r_we1_assign_proc : process(grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_we1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_we1 <= grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_OUT_r_we1;
        else 
            OUT_r_we1 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state3_on_subcall_done)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_done)
    begin
        if ((grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state3_on_subcall_done_assign_proc : process(icmp_ln1069_reg_240, grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_done)
    begin
                ap_block_state3_on_subcall_done <= ((grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_done = ap_const_logic_0) and (icmp_ln1069_reg_240 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    div_fu_208_p3 <= 
        p_neg_t_fu_189_p2 when (tmp_1_fu_179_p3(0) = '1') else 
        p_lshr_f_cast_fu_204_p1;
    empty_13_fu_134_p1 <= ctrl1_reg(8 - 1 downto 0);
    empty_14_fu_216_p1 <= div_fu_208_p3(6 - 1 downto 0);
    empty_fu_110_p1 <= curr_stage(3 - 1 downto 0);
    grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_start <= grp_fft_stage_Pipeline_SKIP_X_fu_93_ap_start_reg;
    grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_start <= grp_fft_stage_Pipeline_VITIS_LOOP_37_1_fu_84_ap_start_reg;
    icmp_ln1069_fu_128_p2 <= "1" when (signed(zext_ln1069_fu_124_p1) < signed(curr_stage)) else "0";
    lshr_ln_fu_114_p4 <= ctrl1_reg(15 downto 8);
    p_lshr_cast_fu_186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_reg_254),32));
    p_lshr_f_cast_fu_204_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f_fu_195_p4),32));
    p_lshr_f_fu_195_p4 <= y(31 downto 1);
    p_neg_fu_149_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(y));
    p_neg_t_fu_189_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_lshr_cast_fu_186_p1));
    sub28_fu_221_p2 <= std_logic_vector(unsigned(div_fu_208_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    sub_fu_165_p2 <= std_logic_vector(unsigned(empty_reg_235) + unsigned(ap_const_lv3_7));
    tmp_1_fu_179_p3 <= y(31 downto 31);
    tmp_fu_170_p3 <= (sub_fu_165_p2 & ap_const_lv5_0);
    zext_ln1069_fu_124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_114_p4),32));
end behav;
