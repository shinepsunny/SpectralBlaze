-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fwd_fft_fft_stage_0_0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    IN_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    IN_r_ce0 : OUT STD_LOGIC;
    IN_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    IN_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    IN_r_ce1 : OUT STD_LOGIC;
    IN_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    OUT_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    OUT_r_ce0 : OUT STD_LOGIC;
    OUT_r_we0 : OUT STD_LOGIC;
    OUT_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    OUT_r_ce1 : OUT STD_LOGIC;
    OUT_r_we1 : OUT STD_LOGIC;
    OUT_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_read : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of fwd_fft_fft_stage_0_0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal w_M_real39_ce0 : STD_LOGIC;
    signal w_M_real39_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_M_imag28_ce0 : STD_LOGIC;
    signal w_M_imag28_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1069_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_reg_119 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_104_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_reg_123 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln6_reg_128 : STD_LOGIC_VECTOR (6 downto 0);
    signal w_M_real39_load_reg_133 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal w_M_imag28_load_reg_138 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_start : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_done : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_idle : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_ready : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_we0 : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_we1 : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_start : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_done : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_idle : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_ready : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_we0 : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_we1 : STD_LOGIC;
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal trunc_ln_fu_88_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fwd_fft_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ctrl1_reg_load_cast1 : IN STD_LOGIC_VECTOR (7 downto 0);
        IN_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_r_ce0 : OUT STD_LOGIC;
        IN_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        IN_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_r_ce1 : OUT STD_LOGIC;
        IN_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        OUT_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_ce0 : OUT STD_LOGIC;
        OUT_r_we0 : OUT STD_LOGIC;
        OUT_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        OUT_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_ce1 : OUT STD_LOGIC;
        OUT_r_we1 : OUT STD_LOGIC;
        OUT_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fwd_fft_fft_stage_0_0_Pipeline_SKIP_X IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        trunc_ln18 : IN STD_LOGIC_VECTOR (6 downto 0);
        IN_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_r_ce0 : OUT STD_LOGIC;
        IN_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        IN_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_r_ce1 : OUT STD_LOGIC;
        IN_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        w1_M_real : IN STD_LOGIC_VECTOR (15 downto 0);
        w1_M_imag : IN STD_LOGIC_VECTOR (15 downto 0);
        OUT_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_ce0 : OUT STD_LOGIC;
        OUT_r_we0 : OUT STD_LOGIC;
        OUT_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        OUT_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_ce1 : OUT STD_LOGIC;
        OUT_r_we1 : OUT STD_LOGIC;
        OUT_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fwd_fft_fft_stage_0_017_w_M_real38 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component fwd_fft_fft_stage_0_017_w_M_imag27 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    w_M_real39_U : component fwd_fft_fft_stage_0_017_w_M_real38
    generic map (
        DataWidth => 16,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv8_0,
        ce0 => w_M_real39_ce0,
        q0 => w_M_real39_q0);

    w_M_imag28_U : component fwd_fft_fft_stage_0_017_w_M_imag27
    generic map (
        DataWidth => 16,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv8_0,
        ce0 => w_M_imag28_ce0,
        q0 => w_M_imag28_q0);

    grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66 : component fwd_fft_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_start,
        ap_done => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_done,
        ap_idle => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_idle,
        ap_ready => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_ready,
        ctrl1_reg_load_cast1 => empty_reg_123,
        IN_r_address0 => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_address0,
        IN_r_ce0 => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_ce0,
        IN_r_q0 => IN_r_q0,
        IN_r_address1 => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_address1,
        IN_r_ce1 => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_ce1,
        IN_r_q1 => IN_r_q1,
        OUT_r_address0 => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_address0,
        OUT_r_ce0 => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_ce0,
        OUT_r_we0 => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_we0,
        OUT_r_d0 => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_d0,
        OUT_r_address1 => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_address1,
        OUT_r_ce1 => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_ce1,
        OUT_r_we1 => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_we1,
        OUT_r_d1 => grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_d1);

    grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75 : component fwd_fft_fft_stage_0_0_Pipeline_SKIP_X
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_start,
        ap_done => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_done,
        ap_idle => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_idle,
        ap_ready => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_ready,
        trunc_ln18 => trunc_ln6_reg_128,
        IN_r_address0 => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_address0,
        IN_r_ce0 => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_ce0,
        IN_r_q0 => IN_r_q0,
        IN_r_address1 => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_address1,
        IN_r_ce1 => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_ce1,
        IN_r_q1 => IN_r_q1,
        w1_M_real => w_M_real39_load_reg_133,
        w1_M_imag => w_M_imag28_load_reg_138,
        OUT_r_address0 => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_address0,
        OUT_r_ce0 => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_ce0,
        OUT_r_we0 => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_we0,
        OUT_r_d0 => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_d0,
        OUT_r_address1 => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_address1,
        OUT_r_ce1 => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_ce1,
        OUT_r_we1 => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_we1,
        OUT_r_d1 => grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_d1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (icmp_ln1069_fu_98_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_reg_123 <= empty_fu_104_p1;
                icmp_ln1069_reg_119 <= icmp_ln1069_fu_98_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1069_fu_98_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                trunc_ln6_reg_128 <= p_read(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                w_M_imag28_load_reg_138 <= w_M_imag28_q0;
                w_M_real39_load_reg_133 <= w_M_real39_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln1069_fu_98_p2, grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (icmp_ln1069_fu_98_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_start = ap_const_logic_1) and (icmp_ln1069_fu_98_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    IN_r_address0_assign_proc : process(icmp_ln1069_reg_119, grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_address0, grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_address0, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_119 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            IN_r_address0 <= grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            IN_r_address0 <= grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_address0;
        else 
            IN_r_address0 <= "XXXXXX";
        end if; 
    end process;


    IN_r_address1_assign_proc : process(icmp_ln1069_reg_119, grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_address1, grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_address1, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_119 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            IN_r_address1 <= grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            IN_r_address1 <= grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_address1;
        else 
            IN_r_address1 <= "XXXXXX";
        end if; 
    end process;


    IN_r_ce0_assign_proc : process(icmp_ln1069_reg_119, grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_ce0, grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_ce0, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_119 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            IN_r_ce0 <= grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            IN_r_ce0 <= grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_ce0;
        else 
            IN_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    IN_r_ce1_assign_proc : process(icmp_ln1069_reg_119, grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_ce1, grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_ce1, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_119 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            IN_r_ce1 <= grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_IN_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            IN_r_ce1 <= grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_IN_r_ce1;
        else 
            IN_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_address0_assign_proc : process(icmp_ln1069_reg_119, grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_address0, grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_address0, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_119 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OUT_r_address0 <= grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_address0 <= grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_address0;
        else 
            OUT_r_address0 <= "XXXXXX";
        end if; 
    end process;


    OUT_r_address1_assign_proc : process(icmp_ln1069_reg_119, grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_address1, grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_address1, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_119 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OUT_r_address1 <= grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_address1 <= grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_address1;
        else 
            OUT_r_address1 <= "XXXXXX";
        end if; 
    end process;


    OUT_r_ce0_assign_proc : process(icmp_ln1069_reg_119, grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_ce0, grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_ce0, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_119 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OUT_r_ce0 <= grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_ce0 <= grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_ce0;
        else 
            OUT_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_ce1_assign_proc : process(icmp_ln1069_reg_119, grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_ce1, grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_ce1, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_119 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OUT_r_ce1 <= grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_ce1 <= grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_ce1;
        else 
            OUT_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_d0_assign_proc : process(icmp_ln1069_reg_119, grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_d0, grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_d0, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_119 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OUT_r_d0 <= grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_d0 <= grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_d0;
        else 
            OUT_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    OUT_r_d1_assign_proc : process(icmp_ln1069_reg_119, grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_d1, grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_d1, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_119 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OUT_r_d1 <= grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_d1 <= grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_d1;
        else 
            OUT_r_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    OUT_r_we0_assign_proc : process(icmp_ln1069_reg_119, grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_we0, grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_we0, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_119 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OUT_r_we0 <= grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_we0 <= grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_we0;
        else 
            OUT_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_we1_assign_proc : process(icmp_ln1069_reg_119, grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_we1, grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_we1, ap_CS_fsm_state4, ap_CS_fsm_state3)
    begin
        if (((icmp_ln1069_reg_119 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OUT_r_we1 <= grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_OUT_r_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            OUT_r_we1 <= grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_OUT_r_we1;
        else 
            OUT_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state3_on_subcall_done)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_done)
    begin
        if ((grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state3_on_subcall_done_assign_proc : process(icmp_ln1069_reg_119, grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_done)
    begin
                ap_block_state3_on_subcall_done <= ((grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_done = ap_const_logic_0) and (icmp_ln1069_reg_119 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_104_p1 <= p_read(8 - 1 downto 0);
    grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_start <= grp_fft_stage_0_0_Pipeline_SKIP_X_fu_75_ap_start_reg;
    grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_start <= grp_fft_stage_0_0_Pipeline_VITIS_LOOP_41_1_fu_66_ap_start_reg;
    icmp_ln1069_fu_98_p2 <= "1" when (trunc_ln_fu_88_p4 = ap_const_lv8_0) else "0";
    trunc_ln_fu_88_p4 <= p_read(15 downto 8);

    w_M_imag28_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            w_M_imag28_ce0 <= ap_const_logic_1;
        else 
            w_M_imag28_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w_M_real39_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            w_M_real39_ce0 <= ap_const_logic_1;
        else 
            w_M_real39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
