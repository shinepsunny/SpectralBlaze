-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fwd_fft_fft20 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    input_data_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_data_M_real_ce0 : OUT STD_LOGIC;
    input_data_M_real_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_data_M_real_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_data_M_real_we0 : OUT STD_LOGIC;
    input_data_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_data_M_real_ce1 : OUT STD_LOGIC;
    input_data_M_real_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_data_M_real_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_data_M_real_we1 : OUT STD_LOGIC;
    input_data_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_data_M_imag_ce0 : OUT STD_LOGIC;
    input_data_M_imag_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_data_M_imag_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_data_M_imag_we0 : OUT STD_LOGIC;
    input_data_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_data_M_imag_ce1 : OUT STD_LOGIC;
    input_data_M_imag_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_data_M_imag_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_data_M_imag_we1 : OUT STD_LOGIC;
    out_data_6_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_data_6_M_real_ce0 : OUT STD_LOGIC;
    out_data_6_M_real_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_data_6_M_real_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_data_6_M_real_we0 : OUT STD_LOGIC;
    out_data_6_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_data_6_M_real_ce1 : OUT STD_LOGIC;
    out_data_6_M_real_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_data_6_M_real_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_data_6_M_real_we1 : OUT STD_LOGIC;
    out_data_6_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_data_6_M_imag_ce0 : OUT STD_LOGIC;
    out_data_6_M_imag_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_data_6_M_imag_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_data_6_M_imag_we0 : OUT STD_LOGIC;
    out_data_6_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_data_6_M_imag_ce1 : OUT STD_LOGIC;
    out_data_6_M_imag_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_data_6_M_imag_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_data_6_M_imag_we1 : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl1_reg_c5_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctrl1_reg_c5_full_n : IN STD_LOGIC;
    ctrl1_reg_c5_write : OUT STD_LOGIC;
    input_data_M_real_empty_n : IN STD_LOGIC;
    input_data_M_real_read : OUT STD_LOGIC;
    input_data_M_imag_empty_n : IN STD_LOGIC;
    input_data_M_imag_read : OUT STD_LOGIC;
    p_read_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    out_data_6_M_real_full_n : IN STD_LOGIC;
    out_data_6_M_real_write : OUT STD_LOGIC;
    out_data_6_M_imag_full_n : IN STD_LOGIC;
    out_data_6_M_imag_write : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of fwd_fft_fft20 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal out_data_1_M_real_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_1_M_real_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_1_M_real_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_1_M_real_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_1_M_imag_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_1_M_imag_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_1_M_imag_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_1_M_imag_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_2_M_real_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_2_M_real_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_2_M_real_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_2_M_real_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_2_M_imag_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_2_M_imag_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_2_M_imag_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_2_M_imag_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_3_M_real_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_3_M_real_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_3_M_real_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_3_M_real_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_3_M_imag_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_3_M_imag_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_3_M_imag_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_3_M_imag_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_4_M_real_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_4_M_real_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_4_M_real_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_4_M_real_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_4_M_imag_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_4_M_imag_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_4_M_imag_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_4_M_imag_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_5_M_real_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_5_M_real_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_5_M_real_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_5_M_real_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_5_M_imag_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_5_M_imag_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_5_M_imag_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_data_5_M_imag_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage921_U0_ap_start : STD_LOGIC;
    signal fft_stage921_U0_ap_done : STD_LOGIC;
    signal fft_stage921_U0_ap_continue : STD_LOGIC;
    signal fft_stage921_U0_ap_idle : STD_LOGIC;
    signal fft_stage921_U0_ap_ready : STD_LOGIC;
    signal fft_stage921_U0_IN_M_real_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage921_U0_IN_M_real_ce0 : STD_LOGIC;
    signal fft_stage921_U0_IN_M_real_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage921_U0_IN_M_real_ce1 : STD_LOGIC;
    signal fft_stage921_U0_IN_M_imag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage921_U0_IN_M_imag_ce0 : STD_LOGIC;
    signal fft_stage921_U0_IN_M_imag_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage921_U0_IN_M_imag_ce1 : STD_LOGIC;
    signal fft_stage921_U0_OUT_M_real_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage921_U0_OUT_M_real_ce0 : STD_LOGIC;
    signal fft_stage921_U0_OUT_M_real_we0 : STD_LOGIC;
    signal fft_stage921_U0_OUT_M_real_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage921_U0_OUT_M_real_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage921_U0_OUT_M_real_ce1 : STD_LOGIC;
    signal fft_stage921_U0_OUT_M_real_we1 : STD_LOGIC;
    signal fft_stage921_U0_OUT_M_real_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage921_U0_OUT_M_imag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage921_U0_OUT_M_imag_ce0 : STD_LOGIC;
    signal fft_stage921_U0_OUT_M_imag_we0 : STD_LOGIC;
    signal fft_stage921_U0_OUT_M_imag_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage921_U0_OUT_M_imag_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage921_U0_OUT_M_imag_ce1 : STD_LOGIC;
    signal fft_stage921_U0_OUT_M_imag_we1 : STD_LOGIC;
    signal fft_stage921_U0_OUT_M_imag_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage921_U0_ctrl1_reg_c5_din : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_stage921_U0_ctrl1_reg_c5_write : STD_LOGIC;
    signal fft_stage921_U0_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_stage921_U0_IN_M_real_write : STD_LOGIC;
    signal fft_stage921_U0_IN_M_imag_write : STD_LOGIC;
    signal ap_channel_done_ctrl1_reg_c4_channel : STD_LOGIC;
    signal ctrl1_reg_c4_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_ctrl1_reg_c4_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_ctrl1_reg_c4_channel : STD_LOGIC;
    signal ap_channel_done_out_data_1_M_imag : STD_LOGIC;
    signal fft_stage921_U0_OUT_M_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_data_1_M_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_data_1_M_imag : STD_LOGIC;
    signal ap_channel_done_out_data_1_M_real : STD_LOGIC;
    signal fft_stage921_U0_OUT_M_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_data_1_M_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_data_1_M_real : STD_LOGIC;
    signal fft_stage1022_U0_ap_start : STD_LOGIC;
    signal fft_stage1022_U0_ap_done : STD_LOGIC;
    signal fft_stage1022_U0_ap_continue : STD_LOGIC;
    signal fft_stage1022_U0_ap_idle : STD_LOGIC;
    signal fft_stage1022_U0_ap_ready : STD_LOGIC;
    signal fft_stage1022_U0_IN_M_real_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1022_U0_IN_M_real_ce0 : STD_LOGIC;
    signal fft_stage1022_U0_IN_M_real_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1022_U0_IN_M_real_ce1 : STD_LOGIC;
    signal fft_stage1022_U0_IN_M_imag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1022_U0_IN_M_imag_ce0 : STD_LOGIC;
    signal fft_stage1022_U0_IN_M_imag_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1022_U0_IN_M_imag_ce1 : STD_LOGIC;
    signal fft_stage1022_U0_OUT_M_real_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1022_U0_OUT_M_real_ce0 : STD_LOGIC;
    signal fft_stage1022_U0_OUT_M_real_we0 : STD_LOGIC;
    signal fft_stage1022_U0_OUT_M_real_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1022_U0_OUT_M_real_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1022_U0_OUT_M_real_ce1 : STD_LOGIC;
    signal fft_stage1022_U0_OUT_M_real_we1 : STD_LOGIC;
    signal fft_stage1022_U0_OUT_M_real_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1022_U0_OUT_M_imag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1022_U0_OUT_M_imag_ce0 : STD_LOGIC;
    signal fft_stage1022_U0_OUT_M_imag_we0 : STD_LOGIC;
    signal fft_stage1022_U0_OUT_M_imag_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1022_U0_OUT_M_imag_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1022_U0_OUT_M_imag_ce1 : STD_LOGIC;
    signal fft_stage1022_U0_OUT_M_imag_we1 : STD_LOGIC;
    signal fft_stage1022_U0_OUT_M_imag_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1022_U0_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_ctrl1_reg_c3_channel : STD_LOGIC;
    signal ctrl1_reg_c3_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_ctrl1_reg_c3_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_ctrl1_reg_c3_channel : STD_LOGIC;
    signal ap_channel_done_out_data_2_M_imag : STD_LOGIC;
    signal fft_stage1022_U0_OUT_M_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_data_2_M_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_data_2_M_imag : STD_LOGIC;
    signal ap_channel_done_out_data_2_M_real : STD_LOGIC;
    signal fft_stage1022_U0_OUT_M_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_data_2_M_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_data_2_M_real : STD_LOGIC;
    signal fft_stage1123_U0_ap_start : STD_LOGIC;
    signal fft_stage1123_U0_ap_done : STD_LOGIC;
    signal fft_stage1123_U0_ap_continue : STD_LOGIC;
    signal fft_stage1123_U0_ap_idle : STD_LOGIC;
    signal fft_stage1123_U0_ap_ready : STD_LOGIC;
    signal fft_stage1123_U0_IN_M_real_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1123_U0_IN_M_real_ce0 : STD_LOGIC;
    signal fft_stage1123_U0_IN_M_real_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1123_U0_IN_M_real_ce1 : STD_LOGIC;
    signal fft_stage1123_U0_IN_M_imag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1123_U0_IN_M_imag_ce0 : STD_LOGIC;
    signal fft_stage1123_U0_IN_M_imag_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1123_U0_IN_M_imag_ce1 : STD_LOGIC;
    signal fft_stage1123_U0_OUT_M_real_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1123_U0_OUT_M_real_ce0 : STD_LOGIC;
    signal fft_stage1123_U0_OUT_M_real_we0 : STD_LOGIC;
    signal fft_stage1123_U0_OUT_M_real_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1123_U0_OUT_M_real_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1123_U0_OUT_M_real_ce1 : STD_LOGIC;
    signal fft_stage1123_U0_OUT_M_real_we1 : STD_LOGIC;
    signal fft_stage1123_U0_OUT_M_real_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1123_U0_OUT_M_imag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1123_U0_OUT_M_imag_ce0 : STD_LOGIC;
    signal fft_stage1123_U0_OUT_M_imag_we0 : STD_LOGIC;
    signal fft_stage1123_U0_OUT_M_imag_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1123_U0_OUT_M_imag_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1123_U0_OUT_M_imag_ce1 : STD_LOGIC;
    signal fft_stage1123_U0_OUT_M_imag_we1 : STD_LOGIC;
    signal fft_stage1123_U0_OUT_M_imag_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1123_U0_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_ctrl1_reg_c2_channel : STD_LOGIC;
    signal ctrl1_reg_c2_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_ctrl1_reg_c2_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_ctrl1_reg_c2_channel : STD_LOGIC;
    signal ap_channel_done_out_data_3_M_imag : STD_LOGIC;
    signal fft_stage1123_U0_OUT_M_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_data_3_M_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_data_3_M_imag : STD_LOGIC;
    signal ap_channel_done_out_data_3_M_real : STD_LOGIC;
    signal fft_stage1123_U0_OUT_M_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_data_3_M_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_data_3_M_real : STD_LOGIC;
    signal fft_stage1224_U0_ap_start : STD_LOGIC;
    signal fft_stage1224_U0_ap_done : STD_LOGIC;
    signal fft_stage1224_U0_ap_continue : STD_LOGIC;
    signal fft_stage1224_U0_ap_idle : STD_LOGIC;
    signal fft_stage1224_U0_ap_ready : STD_LOGIC;
    signal fft_stage1224_U0_IN_M_real_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1224_U0_IN_M_real_ce0 : STD_LOGIC;
    signal fft_stage1224_U0_IN_M_real_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1224_U0_IN_M_real_ce1 : STD_LOGIC;
    signal fft_stage1224_U0_IN_M_imag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1224_U0_IN_M_imag_ce0 : STD_LOGIC;
    signal fft_stage1224_U0_IN_M_imag_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1224_U0_IN_M_imag_ce1 : STD_LOGIC;
    signal fft_stage1224_U0_OUT_M_real_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1224_U0_OUT_M_real_ce0 : STD_LOGIC;
    signal fft_stage1224_U0_OUT_M_real_we0 : STD_LOGIC;
    signal fft_stage1224_U0_OUT_M_real_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1224_U0_OUT_M_real_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1224_U0_OUT_M_real_ce1 : STD_LOGIC;
    signal fft_stage1224_U0_OUT_M_real_we1 : STD_LOGIC;
    signal fft_stage1224_U0_OUT_M_real_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1224_U0_OUT_M_imag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1224_U0_OUT_M_imag_ce0 : STD_LOGIC;
    signal fft_stage1224_U0_OUT_M_imag_we0 : STD_LOGIC;
    signal fft_stage1224_U0_OUT_M_imag_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1224_U0_OUT_M_imag_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1224_U0_OUT_M_imag_ce1 : STD_LOGIC;
    signal fft_stage1224_U0_OUT_M_imag_we1 : STD_LOGIC;
    signal fft_stage1224_U0_OUT_M_imag_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1224_U0_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_ctrl1_reg_c1_channel : STD_LOGIC;
    signal ctrl1_reg_c1_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_ctrl1_reg_c1_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_ctrl1_reg_c1_channel : STD_LOGIC;
    signal ap_channel_done_out_data_4_M_imag : STD_LOGIC;
    signal fft_stage1224_U0_OUT_M_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_data_4_M_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_data_4_M_imag : STD_LOGIC;
    signal ap_channel_done_out_data_4_M_real : STD_LOGIC;
    signal fft_stage1224_U0_OUT_M_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_data_4_M_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_data_4_M_real : STD_LOGIC;
    signal fft_stage1325_U0_ap_start : STD_LOGIC;
    signal fft_stage1325_U0_ap_done : STD_LOGIC;
    signal fft_stage1325_U0_ap_continue : STD_LOGIC;
    signal fft_stage1325_U0_ap_idle : STD_LOGIC;
    signal fft_stage1325_U0_ap_ready : STD_LOGIC;
    signal fft_stage1325_U0_IN_M_real_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1325_U0_IN_M_real_ce0 : STD_LOGIC;
    signal fft_stage1325_U0_IN_M_real_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1325_U0_IN_M_real_ce1 : STD_LOGIC;
    signal fft_stage1325_U0_IN_M_imag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1325_U0_IN_M_imag_ce0 : STD_LOGIC;
    signal fft_stage1325_U0_IN_M_imag_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1325_U0_IN_M_imag_ce1 : STD_LOGIC;
    signal fft_stage1325_U0_OUT_M_real_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1325_U0_OUT_M_real_ce0 : STD_LOGIC;
    signal fft_stage1325_U0_OUT_M_real_we0 : STD_LOGIC;
    signal fft_stage1325_U0_OUT_M_real_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1325_U0_OUT_M_real_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1325_U0_OUT_M_real_ce1 : STD_LOGIC;
    signal fft_stage1325_U0_OUT_M_real_we1 : STD_LOGIC;
    signal fft_stage1325_U0_OUT_M_real_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1325_U0_OUT_M_imag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1325_U0_OUT_M_imag_ce0 : STD_LOGIC;
    signal fft_stage1325_U0_OUT_M_imag_we0 : STD_LOGIC;
    signal fft_stage1325_U0_OUT_M_imag_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1325_U0_OUT_M_imag_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1325_U0_OUT_M_imag_ce1 : STD_LOGIC;
    signal fft_stage1325_U0_OUT_M_imag_we1 : STD_LOGIC;
    signal fft_stage1325_U0_OUT_M_imag_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1325_U0_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_ctrl1_reg_c_channel : STD_LOGIC;
    signal ctrl1_reg_c_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_ctrl1_reg_c_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_ctrl1_reg_c_channel : STD_LOGIC;
    signal ap_channel_done_out_data_5_M_imag : STD_LOGIC;
    signal fft_stage1325_U0_OUT_M_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_data_5_M_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_data_5_M_imag : STD_LOGIC;
    signal ap_channel_done_out_data_5_M_real : STD_LOGIC;
    signal fft_stage1325_U0_OUT_M_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_out_data_5_M_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_out_data_5_M_real : STD_LOGIC;
    signal fft_stage1426_U0_ap_start : STD_LOGIC;
    signal fft_stage1426_U0_ap_done : STD_LOGIC;
    signal fft_stage1426_U0_ap_continue : STD_LOGIC;
    signal fft_stage1426_U0_ap_idle : STD_LOGIC;
    signal fft_stage1426_U0_ap_ready : STD_LOGIC;
    signal fft_stage1426_U0_IN_M_real_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1426_U0_IN_M_real_ce0 : STD_LOGIC;
    signal fft_stage1426_U0_IN_M_real_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1426_U0_IN_M_real_ce1 : STD_LOGIC;
    signal fft_stage1426_U0_IN_M_imag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1426_U0_IN_M_imag_ce0 : STD_LOGIC;
    signal fft_stage1426_U0_IN_M_imag_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1426_U0_IN_M_imag_ce1 : STD_LOGIC;
    signal fft_stage1426_U0_OUT_M_real_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1426_U0_OUT_M_real_ce0 : STD_LOGIC;
    signal fft_stage1426_U0_OUT_M_real_we0 : STD_LOGIC;
    signal fft_stage1426_U0_OUT_M_real_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1426_U0_OUT_M_real_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1426_U0_OUT_M_real_ce1 : STD_LOGIC;
    signal fft_stage1426_U0_OUT_M_real_we1 : STD_LOGIC;
    signal fft_stage1426_U0_OUT_M_real_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1426_U0_OUT_M_imag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1426_U0_OUT_M_imag_ce0 : STD_LOGIC;
    signal fft_stage1426_U0_OUT_M_imag_we0 : STD_LOGIC;
    signal fft_stage1426_U0_OUT_M_imag_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1426_U0_OUT_M_imag_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal fft_stage1426_U0_OUT_M_imag_ce1 : STD_LOGIC;
    signal fft_stage1426_U0_OUT_M_imag_we1 : STD_LOGIC;
    signal fft_stage1426_U0_OUT_M_imag_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal fft_stage1426_U0_OUT_M_real_write : STD_LOGIC;
    signal fft_stage1426_U0_OUT_M_imag_write : STD_LOGIC;
    signal out_data_1_M_real_i_full_n : STD_LOGIC;
    signal out_data_1_M_real_t_empty_n : STD_LOGIC;
    signal out_data_1_M_imag_i_full_n : STD_LOGIC;
    signal out_data_1_M_imag_t_empty_n : STD_LOGIC;
    signal out_data_2_M_real_i_full_n : STD_LOGIC;
    signal out_data_2_M_real_t_empty_n : STD_LOGIC;
    signal out_data_2_M_imag_i_full_n : STD_LOGIC;
    signal out_data_2_M_imag_t_empty_n : STD_LOGIC;
    signal out_data_3_M_real_i_full_n : STD_LOGIC;
    signal out_data_3_M_real_t_empty_n : STD_LOGIC;
    signal out_data_3_M_imag_i_full_n : STD_LOGIC;
    signal out_data_3_M_imag_t_empty_n : STD_LOGIC;
    signal out_data_4_M_real_i_full_n : STD_LOGIC;
    signal out_data_4_M_real_t_empty_n : STD_LOGIC;
    signal out_data_4_M_imag_i_full_n : STD_LOGIC;
    signal out_data_4_M_imag_t_empty_n : STD_LOGIC;
    signal out_data_5_M_real_i_full_n : STD_LOGIC;
    signal out_data_5_M_real_t_empty_n : STD_LOGIC;
    signal out_data_5_M_imag_i_full_n : STD_LOGIC;
    signal out_data_5_M_imag_t_empty_n : STD_LOGIC;
    signal ctrl1_reg_c4_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal ctrl1_reg_c4_channel_empty_n : STD_LOGIC;
    signal ctrl1_reg_c3_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal ctrl1_reg_c3_channel_empty_n : STD_LOGIC;
    signal ctrl1_reg_c2_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal ctrl1_reg_c2_channel_empty_n : STD_LOGIC;
    signal ctrl1_reg_c1_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal ctrl1_reg_c1_channel_empty_n : STD_LOGIC;
    signal ctrl1_reg_c_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal ctrl1_reg_c_channel_empty_n : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fwd_fft_fft_stage921 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        IN_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_real_ce0 : OUT STD_LOGIC;
        IN_M_real_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_real_ce1 : OUT STD_LOGIC;
        IN_M_real_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_imag_ce0 : OUT STD_LOGIC;
        IN_M_imag_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_imag_ce1 : OUT STD_LOGIC;
        IN_M_imag_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_real_ce0 : OUT STD_LOGIC;
        OUT_M_real_we0 : OUT STD_LOGIC;
        OUT_M_real_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_real_ce1 : OUT STD_LOGIC;
        OUT_M_real_we1 : OUT STD_LOGIC;
        OUT_M_real_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_imag_ce0 : OUT STD_LOGIC;
        OUT_M_imag_we0 : OUT STD_LOGIC;
        OUT_M_imag_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_imag_ce1 : OUT STD_LOGIC;
        OUT_M_imag_we1 : OUT STD_LOGIC;
        OUT_M_imag_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ctrl1_reg_c5_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ctrl1_reg_c5_full_n : IN STD_LOGIC;
        ctrl1_reg_c5_write : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fwd_fft_fft_stage1022 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        IN_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_real_ce0 : OUT STD_LOGIC;
        IN_M_real_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_real_ce1 : OUT STD_LOGIC;
        IN_M_real_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_imag_ce0 : OUT STD_LOGIC;
        IN_M_imag_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_imag_ce1 : OUT STD_LOGIC;
        IN_M_imag_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_real_ce0 : OUT STD_LOGIC;
        OUT_M_real_we0 : OUT STD_LOGIC;
        OUT_M_real_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_real_ce1 : OUT STD_LOGIC;
        OUT_M_real_we1 : OUT STD_LOGIC;
        OUT_M_real_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_imag_ce0 : OUT STD_LOGIC;
        OUT_M_imag_we0 : OUT STD_LOGIC;
        OUT_M_imag_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_imag_ce1 : OUT STD_LOGIC;
        OUT_M_imag_we1 : OUT STD_LOGIC;
        OUT_M_imag_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component fwd_fft_fft_stage1123 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        IN_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_real_ce0 : OUT STD_LOGIC;
        IN_M_real_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_real_ce1 : OUT STD_LOGIC;
        IN_M_real_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_imag_ce0 : OUT STD_LOGIC;
        IN_M_imag_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_imag_ce1 : OUT STD_LOGIC;
        IN_M_imag_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_real_ce0 : OUT STD_LOGIC;
        OUT_M_real_we0 : OUT STD_LOGIC;
        OUT_M_real_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_real_ce1 : OUT STD_LOGIC;
        OUT_M_real_we1 : OUT STD_LOGIC;
        OUT_M_real_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_imag_ce0 : OUT STD_LOGIC;
        OUT_M_imag_we0 : OUT STD_LOGIC;
        OUT_M_imag_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_imag_ce1 : OUT STD_LOGIC;
        OUT_M_imag_we1 : OUT STD_LOGIC;
        OUT_M_imag_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component fwd_fft_fft_stage1224 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        IN_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_real_ce0 : OUT STD_LOGIC;
        IN_M_real_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_real_ce1 : OUT STD_LOGIC;
        IN_M_real_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_imag_ce0 : OUT STD_LOGIC;
        IN_M_imag_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_imag_ce1 : OUT STD_LOGIC;
        IN_M_imag_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_real_ce0 : OUT STD_LOGIC;
        OUT_M_real_we0 : OUT STD_LOGIC;
        OUT_M_real_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_real_ce1 : OUT STD_LOGIC;
        OUT_M_real_we1 : OUT STD_LOGIC;
        OUT_M_real_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_imag_ce0 : OUT STD_LOGIC;
        OUT_M_imag_we0 : OUT STD_LOGIC;
        OUT_M_imag_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_imag_ce1 : OUT STD_LOGIC;
        OUT_M_imag_we1 : OUT STD_LOGIC;
        OUT_M_imag_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component fwd_fft_fft_stage1325 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        IN_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_real_ce0 : OUT STD_LOGIC;
        IN_M_real_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_real_ce1 : OUT STD_LOGIC;
        IN_M_real_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_imag_ce0 : OUT STD_LOGIC;
        IN_M_imag_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_imag_ce1 : OUT STD_LOGIC;
        IN_M_imag_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_real_ce0 : OUT STD_LOGIC;
        OUT_M_real_we0 : OUT STD_LOGIC;
        OUT_M_real_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_real_ce1 : OUT STD_LOGIC;
        OUT_M_real_we1 : OUT STD_LOGIC;
        OUT_M_real_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_imag_ce0 : OUT STD_LOGIC;
        OUT_M_imag_we0 : OUT STD_LOGIC;
        OUT_M_imag_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_imag_ce1 : OUT STD_LOGIC;
        OUT_M_imag_we1 : OUT STD_LOGIC;
        OUT_M_imag_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component fwd_fft_fft_stage1426 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        IN_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_real_ce0 : OUT STD_LOGIC;
        IN_M_real_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_real_ce1 : OUT STD_LOGIC;
        IN_M_real_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_imag_ce0 : OUT STD_LOGIC;
        IN_M_imag_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        IN_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_M_imag_ce1 : OUT STD_LOGIC;
        IN_M_imag_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_real_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_real_ce0 : OUT STD_LOGIC;
        OUT_M_real_we0 : OUT STD_LOGIC;
        OUT_M_real_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_real_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_real_ce1 : OUT STD_LOGIC;
        OUT_M_real_we1 : OUT STD_LOGIC;
        OUT_M_real_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_imag_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_imag_ce0 : OUT STD_LOGIC;
        OUT_M_imag_we0 : OUT STD_LOGIC;
        OUT_M_imag_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OUT_M_imag_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_M_imag_ce1 : OUT STD_LOGIC;
        OUT_M_imag_we1 : OUT STD_LOGIC;
        OUT_M_imag_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_read : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component fwd_fft_fft20_out_data_1_M_real IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_we1 : IN STD_LOGIC;
        i_d1 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_we1 : IN STD_LOGIC;
        t_d1 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component fwd_fft_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fwd_fft_fifo_w16_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    out_data_1_M_real_U : component fwd_fft_fft20_out_data_1_M_real
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage921_U0_OUT_M_real_address0,
        i_ce0 => fft_stage921_U0_OUT_M_real_ce0,
        i_we0 => fft_stage921_U0_OUT_M_real_we0,
        i_d0 => fft_stage921_U0_OUT_M_real_d0,
        i_q0 => out_data_1_M_real_i_q0,
        i_address1 => fft_stage921_U0_OUT_M_real_address1,
        i_ce1 => fft_stage921_U0_OUT_M_real_ce1,
        i_we1 => fft_stage921_U0_OUT_M_real_we1,
        i_d1 => fft_stage921_U0_OUT_M_real_d1,
        i_q1 => out_data_1_M_real_i_q1,
        t_address0 => fft_stage1022_U0_IN_M_real_address0,
        t_ce0 => fft_stage1022_U0_IN_M_real_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => out_data_1_M_real_t_q0,
        t_address1 => fft_stage1022_U0_IN_M_real_address1,
        t_ce1 => fft_stage1022_U0_IN_M_real_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv16_0,
        t_q1 => out_data_1_M_real_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_data_1_M_real_i_full_n,
        i_write => ap_channel_done_out_data_1_M_real,
        t_empty_n => out_data_1_M_real_t_empty_n,
        t_read => fft_stage1022_U0_ap_ready);

    out_data_1_M_imag_U : component fwd_fft_fft20_out_data_1_M_real
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage921_U0_OUT_M_imag_address0,
        i_ce0 => fft_stage921_U0_OUT_M_imag_ce0,
        i_we0 => fft_stage921_U0_OUT_M_imag_we0,
        i_d0 => fft_stage921_U0_OUT_M_imag_d0,
        i_q0 => out_data_1_M_imag_i_q0,
        i_address1 => fft_stage921_U0_OUT_M_imag_address1,
        i_ce1 => fft_stage921_U0_OUT_M_imag_ce1,
        i_we1 => fft_stage921_U0_OUT_M_imag_we1,
        i_d1 => fft_stage921_U0_OUT_M_imag_d1,
        i_q1 => out_data_1_M_imag_i_q1,
        t_address0 => fft_stage1022_U0_IN_M_imag_address0,
        t_ce0 => fft_stage1022_U0_IN_M_imag_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => out_data_1_M_imag_t_q0,
        t_address1 => fft_stage1022_U0_IN_M_imag_address1,
        t_ce1 => fft_stage1022_U0_IN_M_imag_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv16_0,
        t_q1 => out_data_1_M_imag_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_data_1_M_imag_i_full_n,
        i_write => ap_channel_done_out_data_1_M_imag,
        t_empty_n => out_data_1_M_imag_t_empty_n,
        t_read => fft_stage1022_U0_ap_ready);

    out_data_2_M_real_U : component fwd_fft_fft20_out_data_1_M_real
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage1022_U0_OUT_M_real_address0,
        i_ce0 => fft_stage1022_U0_OUT_M_real_ce0,
        i_we0 => fft_stage1022_U0_OUT_M_real_we0,
        i_d0 => fft_stage1022_U0_OUT_M_real_d0,
        i_q0 => out_data_2_M_real_i_q0,
        i_address1 => fft_stage1022_U0_OUT_M_real_address1,
        i_ce1 => fft_stage1022_U0_OUT_M_real_ce1,
        i_we1 => fft_stage1022_U0_OUT_M_real_we1,
        i_d1 => fft_stage1022_U0_OUT_M_real_d1,
        i_q1 => out_data_2_M_real_i_q1,
        t_address0 => fft_stage1123_U0_IN_M_real_address0,
        t_ce0 => fft_stage1123_U0_IN_M_real_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => out_data_2_M_real_t_q0,
        t_address1 => fft_stage1123_U0_IN_M_real_address1,
        t_ce1 => fft_stage1123_U0_IN_M_real_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv16_0,
        t_q1 => out_data_2_M_real_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_data_2_M_real_i_full_n,
        i_write => ap_channel_done_out_data_2_M_real,
        t_empty_n => out_data_2_M_real_t_empty_n,
        t_read => fft_stage1123_U0_ap_ready);

    out_data_2_M_imag_U : component fwd_fft_fft20_out_data_1_M_real
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage1022_U0_OUT_M_imag_address0,
        i_ce0 => fft_stage1022_U0_OUT_M_imag_ce0,
        i_we0 => fft_stage1022_U0_OUT_M_imag_we0,
        i_d0 => fft_stage1022_U0_OUT_M_imag_d0,
        i_q0 => out_data_2_M_imag_i_q0,
        i_address1 => fft_stage1022_U0_OUT_M_imag_address1,
        i_ce1 => fft_stage1022_U0_OUT_M_imag_ce1,
        i_we1 => fft_stage1022_U0_OUT_M_imag_we1,
        i_d1 => fft_stage1022_U0_OUT_M_imag_d1,
        i_q1 => out_data_2_M_imag_i_q1,
        t_address0 => fft_stage1123_U0_IN_M_imag_address0,
        t_ce0 => fft_stage1123_U0_IN_M_imag_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => out_data_2_M_imag_t_q0,
        t_address1 => fft_stage1123_U0_IN_M_imag_address1,
        t_ce1 => fft_stage1123_U0_IN_M_imag_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv16_0,
        t_q1 => out_data_2_M_imag_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_data_2_M_imag_i_full_n,
        i_write => ap_channel_done_out_data_2_M_imag,
        t_empty_n => out_data_2_M_imag_t_empty_n,
        t_read => fft_stage1123_U0_ap_ready);

    out_data_3_M_real_U : component fwd_fft_fft20_out_data_1_M_real
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage1123_U0_OUT_M_real_address0,
        i_ce0 => fft_stage1123_U0_OUT_M_real_ce0,
        i_we0 => fft_stage1123_U0_OUT_M_real_we0,
        i_d0 => fft_stage1123_U0_OUT_M_real_d0,
        i_q0 => out_data_3_M_real_i_q0,
        i_address1 => fft_stage1123_U0_OUT_M_real_address1,
        i_ce1 => fft_stage1123_U0_OUT_M_real_ce1,
        i_we1 => fft_stage1123_U0_OUT_M_real_we1,
        i_d1 => fft_stage1123_U0_OUT_M_real_d1,
        i_q1 => out_data_3_M_real_i_q1,
        t_address0 => fft_stage1224_U0_IN_M_real_address0,
        t_ce0 => fft_stage1224_U0_IN_M_real_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => out_data_3_M_real_t_q0,
        t_address1 => fft_stage1224_U0_IN_M_real_address1,
        t_ce1 => fft_stage1224_U0_IN_M_real_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv16_0,
        t_q1 => out_data_3_M_real_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_data_3_M_real_i_full_n,
        i_write => ap_channel_done_out_data_3_M_real,
        t_empty_n => out_data_3_M_real_t_empty_n,
        t_read => fft_stage1224_U0_ap_ready);

    out_data_3_M_imag_U : component fwd_fft_fft20_out_data_1_M_real
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage1123_U0_OUT_M_imag_address0,
        i_ce0 => fft_stage1123_U0_OUT_M_imag_ce0,
        i_we0 => fft_stage1123_U0_OUT_M_imag_we0,
        i_d0 => fft_stage1123_U0_OUT_M_imag_d0,
        i_q0 => out_data_3_M_imag_i_q0,
        i_address1 => fft_stage1123_U0_OUT_M_imag_address1,
        i_ce1 => fft_stage1123_U0_OUT_M_imag_ce1,
        i_we1 => fft_stage1123_U0_OUT_M_imag_we1,
        i_d1 => fft_stage1123_U0_OUT_M_imag_d1,
        i_q1 => out_data_3_M_imag_i_q1,
        t_address0 => fft_stage1224_U0_IN_M_imag_address0,
        t_ce0 => fft_stage1224_U0_IN_M_imag_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => out_data_3_M_imag_t_q0,
        t_address1 => fft_stage1224_U0_IN_M_imag_address1,
        t_ce1 => fft_stage1224_U0_IN_M_imag_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv16_0,
        t_q1 => out_data_3_M_imag_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_data_3_M_imag_i_full_n,
        i_write => ap_channel_done_out_data_3_M_imag,
        t_empty_n => out_data_3_M_imag_t_empty_n,
        t_read => fft_stage1224_U0_ap_ready);

    out_data_4_M_real_U : component fwd_fft_fft20_out_data_1_M_real
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage1224_U0_OUT_M_real_address0,
        i_ce0 => fft_stage1224_U0_OUT_M_real_ce0,
        i_we0 => fft_stage1224_U0_OUT_M_real_we0,
        i_d0 => fft_stage1224_U0_OUT_M_real_d0,
        i_q0 => out_data_4_M_real_i_q0,
        i_address1 => fft_stage1224_U0_OUT_M_real_address1,
        i_ce1 => fft_stage1224_U0_OUT_M_real_ce1,
        i_we1 => fft_stage1224_U0_OUT_M_real_we1,
        i_d1 => fft_stage1224_U0_OUT_M_real_d1,
        i_q1 => out_data_4_M_real_i_q1,
        t_address0 => fft_stage1325_U0_IN_M_real_address0,
        t_ce0 => fft_stage1325_U0_IN_M_real_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => out_data_4_M_real_t_q0,
        t_address1 => fft_stage1325_U0_IN_M_real_address1,
        t_ce1 => fft_stage1325_U0_IN_M_real_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv16_0,
        t_q1 => out_data_4_M_real_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_data_4_M_real_i_full_n,
        i_write => ap_channel_done_out_data_4_M_real,
        t_empty_n => out_data_4_M_real_t_empty_n,
        t_read => fft_stage1325_U0_ap_ready);

    out_data_4_M_imag_U : component fwd_fft_fft20_out_data_1_M_real
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage1224_U0_OUT_M_imag_address0,
        i_ce0 => fft_stage1224_U0_OUT_M_imag_ce0,
        i_we0 => fft_stage1224_U0_OUT_M_imag_we0,
        i_d0 => fft_stage1224_U0_OUT_M_imag_d0,
        i_q0 => out_data_4_M_imag_i_q0,
        i_address1 => fft_stage1224_U0_OUT_M_imag_address1,
        i_ce1 => fft_stage1224_U0_OUT_M_imag_ce1,
        i_we1 => fft_stage1224_U0_OUT_M_imag_we1,
        i_d1 => fft_stage1224_U0_OUT_M_imag_d1,
        i_q1 => out_data_4_M_imag_i_q1,
        t_address0 => fft_stage1325_U0_IN_M_imag_address0,
        t_ce0 => fft_stage1325_U0_IN_M_imag_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => out_data_4_M_imag_t_q0,
        t_address1 => fft_stage1325_U0_IN_M_imag_address1,
        t_ce1 => fft_stage1325_U0_IN_M_imag_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv16_0,
        t_q1 => out_data_4_M_imag_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_data_4_M_imag_i_full_n,
        i_write => ap_channel_done_out_data_4_M_imag,
        t_empty_n => out_data_4_M_imag_t_empty_n,
        t_read => fft_stage1325_U0_ap_ready);

    out_data_5_M_real_U : component fwd_fft_fft20_out_data_1_M_real
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage1325_U0_OUT_M_real_address0,
        i_ce0 => fft_stage1325_U0_OUT_M_real_ce0,
        i_we0 => fft_stage1325_U0_OUT_M_real_we0,
        i_d0 => fft_stage1325_U0_OUT_M_real_d0,
        i_q0 => out_data_5_M_real_i_q0,
        i_address1 => fft_stage1325_U0_OUT_M_real_address1,
        i_ce1 => fft_stage1325_U0_OUT_M_real_ce1,
        i_we1 => fft_stage1325_U0_OUT_M_real_we1,
        i_d1 => fft_stage1325_U0_OUT_M_real_d1,
        i_q1 => out_data_5_M_real_i_q1,
        t_address0 => fft_stage1426_U0_IN_M_real_address0,
        t_ce0 => fft_stage1426_U0_IN_M_real_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => out_data_5_M_real_t_q0,
        t_address1 => fft_stage1426_U0_IN_M_real_address1,
        t_ce1 => fft_stage1426_U0_IN_M_real_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv16_0,
        t_q1 => out_data_5_M_real_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_data_5_M_real_i_full_n,
        i_write => ap_channel_done_out_data_5_M_real,
        t_empty_n => out_data_5_M_real_t_empty_n,
        t_read => fft_stage1426_U0_ap_ready);

    out_data_5_M_imag_U : component fwd_fft_fft20_out_data_1_M_real
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage1325_U0_OUT_M_imag_address0,
        i_ce0 => fft_stage1325_U0_OUT_M_imag_ce0,
        i_we0 => fft_stage1325_U0_OUT_M_imag_we0,
        i_d0 => fft_stage1325_U0_OUT_M_imag_d0,
        i_q0 => out_data_5_M_imag_i_q0,
        i_address1 => fft_stage1325_U0_OUT_M_imag_address1,
        i_ce1 => fft_stage1325_U0_OUT_M_imag_ce1,
        i_we1 => fft_stage1325_U0_OUT_M_imag_we1,
        i_d1 => fft_stage1325_U0_OUT_M_imag_d1,
        i_q1 => out_data_5_M_imag_i_q1,
        t_address0 => fft_stage1426_U0_IN_M_imag_address0,
        t_ce0 => fft_stage1426_U0_IN_M_imag_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => out_data_5_M_imag_t_q0,
        t_address1 => fft_stage1426_U0_IN_M_imag_address1,
        t_ce1 => fft_stage1426_U0_IN_M_imag_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv16_0,
        t_q1 => out_data_5_M_imag_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => out_data_5_M_imag_i_full_n,
        i_write => ap_channel_done_out_data_5_M_imag,
        t_empty_n => out_data_5_M_imag_t_empty_n,
        t_read => fft_stage1426_U0_ap_ready);

    fft_stage921_U0 : component fwd_fft_fft_stage921
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage921_U0_ap_start,
        ap_done => fft_stage921_U0_ap_done,
        ap_continue => fft_stage921_U0_ap_continue,
        ap_idle => fft_stage921_U0_ap_idle,
        ap_ready => fft_stage921_U0_ap_ready,
        IN_M_real_address0 => fft_stage921_U0_IN_M_real_address0,
        IN_M_real_ce0 => fft_stage921_U0_IN_M_real_ce0,
        IN_M_real_q0 => input_data_M_real_q0,
        IN_M_real_address1 => fft_stage921_U0_IN_M_real_address1,
        IN_M_real_ce1 => fft_stage921_U0_IN_M_real_ce1,
        IN_M_real_q1 => input_data_M_real_q1,
        IN_M_imag_address0 => fft_stage921_U0_IN_M_imag_address0,
        IN_M_imag_ce0 => fft_stage921_U0_IN_M_imag_ce0,
        IN_M_imag_q0 => input_data_M_imag_q0,
        IN_M_imag_address1 => fft_stage921_U0_IN_M_imag_address1,
        IN_M_imag_ce1 => fft_stage921_U0_IN_M_imag_ce1,
        IN_M_imag_q1 => input_data_M_imag_q1,
        OUT_M_real_address0 => fft_stage921_U0_OUT_M_real_address0,
        OUT_M_real_ce0 => fft_stage921_U0_OUT_M_real_ce0,
        OUT_M_real_we0 => fft_stage921_U0_OUT_M_real_we0,
        OUT_M_real_d0 => fft_stage921_U0_OUT_M_real_d0,
        OUT_M_real_address1 => fft_stage921_U0_OUT_M_real_address1,
        OUT_M_real_ce1 => fft_stage921_U0_OUT_M_real_ce1,
        OUT_M_real_we1 => fft_stage921_U0_OUT_M_real_we1,
        OUT_M_real_d1 => fft_stage921_U0_OUT_M_real_d1,
        OUT_M_imag_address0 => fft_stage921_U0_OUT_M_imag_address0,
        OUT_M_imag_ce0 => fft_stage921_U0_OUT_M_imag_ce0,
        OUT_M_imag_we0 => fft_stage921_U0_OUT_M_imag_we0,
        OUT_M_imag_d0 => fft_stage921_U0_OUT_M_imag_d0,
        OUT_M_imag_address1 => fft_stage921_U0_OUT_M_imag_address1,
        OUT_M_imag_ce1 => fft_stage921_U0_OUT_M_imag_ce1,
        OUT_M_imag_we1 => fft_stage921_U0_OUT_M_imag_we1,
        OUT_M_imag_d1 => fft_stage921_U0_OUT_M_imag_d1,
        p_read => p_read,
        ctrl1_reg_c5_din => fft_stage921_U0_ctrl1_reg_c5_din,
        ctrl1_reg_c5_full_n => ctrl1_reg_c5_full_n,
        ctrl1_reg_c5_write => fft_stage921_U0_ctrl1_reg_c5_write,
        ap_return => fft_stage921_U0_ap_return);

    fft_stage1022_U0 : component fwd_fft_fft_stage1022
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage1022_U0_ap_start,
        ap_done => fft_stage1022_U0_ap_done,
        ap_continue => fft_stage1022_U0_ap_continue,
        ap_idle => fft_stage1022_U0_ap_idle,
        ap_ready => fft_stage1022_U0_ap_ready,
        IN_M_real_address0 => fft_stage1022_U0_IN_M_real_address0,
        IN_M_real_ce0 => fft_stage1022_U0_IN_M_real_ce0,
        IN_M_real_q0 => out_data_1_M_real_t_q0,
        IN_M_real_address1 => fft_stage1022_U0_IN_M_real_address1,
        IN_M_real_ce1 => fft_stage1022_U0_IN_M_real_ce1,
        IN_M_real_q1 => out_data_1_M_real_t_q1,
        IN_M_imag_address0 => fft_stage1022_U0_IN_M_imag_address0,
        IN_M_imag_ce0 => fft_stage1022_U0_IN_M_imag_ce0,
        IN_M_imag_q0 => out_data_1_M_imag_t_q0,
        IN_M_imag_address1 => fft_stage1022_U0_IN_M_imag_address1,
        IN_M_imag_ce1 => fft_stage1022_U0_IN_M_imag_ce1,
        IN_M_imag_q1 => out_data_1_M_imag_t_q1,
        OUT_M_real_address0 => fft_stage1022_U0_OUT_M_real_address0,
        OUT_M_real_ce0 => fft_stage1022_U0_OUT_M_real_ce0,
        OUT_M_real_we0 => fft_stage1022_U0_OUT_M_real_we0,
        OUT_M_real_d0 => fft_stage1022_U0_OUT_M_real_d0,
        OUT_M_real_address1 => fft_stage1022_U0_OUT_M_real_address1,
        OUT_M_real_ce1 => fft_stage1022_U0_OUT_M_real_ce1,
        OUT_M_real_we1 => fft_stage1022_U0_OUT_M_real_we1,
        OUT_M_real_d1 => fft_stage1022_U0_OUT_M_real_d1,
        OUT_M_imag_address0 => fft_stage1022_U0_OUT_M_imag_address0,
        OUT_M_imag_ce0 => fft_stage1022_U0_OUT_M_imag_ce0,
        OUT_M_imag_we0 => fft_stage1022_U0_OUT_M_imag_we0,
        OUT_M_imag_d0 => fft_stage1022_U0_OUT_M_imag_d0,
        OUT_M_imag_address1 => fft_stage1022_U0_OUT_M_imag_address1,
        OUT_M_imag_ce1 => fft_stage1022_U0_OUT_M_imag_ce1,
        OUT_M_imag_we1 => fft_stage1022_U0_OUT_M_imag_we1,
        OUT_M_imag_d1 => fft_stage1022_U0_OUT_M_imag_d1,
        p_read => ctrl1_reg_c4_channel_dout,
        ap_return => fft_stage1022_U0_ap_return);

    fft_stage1123_U0 : component fwd_fft_fft_stage1123
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage1123_U0_ap_start,
        ap_done => fft_stage1123_U0_ap_done,
        ap_continue => fft_stage1123_U0_ap_continue,
        ap_idle => fft_stage1123_U0_ap_idle,
        ap_ready => fft_stage1123_U0_ap_ready,
        IN_M_real_address0 => fft_stage1123_U0_IN_M_real_address0,
        IN_M_real_ce0 => fft_stage1123_U0_IN_M_real_ce0,
        IN_M_real_q0 => out_data_2_M_real_t_q0,
        IN_M_real_address1 => fft_stage1123_U0_IN_M_real_address1,
        IN_M_real_ce1 => fft_stage1123_U0_IN_M_real_ce1,
        IN_M_real_q1 => out_data_2_M_real_t_q1,
        IN_M_imag_address0 => fft_stage1123_U0_IN_M_imag_address0,
        IN_M_imag_ce0 => fft_stage1123_U0_IN_M_imag_ce0,
        IN_M_imag_q0 => out_data_2_M_imag_t_q0,
        IN_M_imag_address1 => fft_stage1123_U0_IN_M_imag_address1,
        IN_M_imag_ce1 => fft_stage1123_U0_IN_M_imag_ce1,
        IN_M_imag_q1 => out_data_2_M_imag_t_q1,
        OUT_M_real_address0 => fft_stage1123_U0_OUT_M_real_address0,
        OUT_M_real_ce0 => fft_stage1123_U0_OUT_M_real_ce0,
        OUT_M_real_we0 => fft_stage1123_U0_OUT_M_real_we0,
        OUT_M_real_d0 => fft_stage1123_U0_OUT_M_real_d0,
        OUT_M_real_address1 => fft_stage1123_U0_OUT_M_real_address1,
        OUT_M_real_ce1 => fft_stage1123_U0_OUT_M_real_ce1,
        OUT_M_real_we1 => fft_stage1123_U0_OUT_M_real_we1,
        OUT_M_real_d1 => fft_stage1123_U0_OUT_M_real_d1,
        OUT_M_imag_address0 => fft_stage1123_U0_OUT_M_imag_address0,
        OUT_M_imag_ce0 => fft_stage1123_U0_OUT_M_imag_ce0,
        OUT_M_imag_we0 => fft_stage1123_U0_OUT_M_imag_we0,
        OUT_M_imag_d0 => fft_stage1123_U0_OUT_M_imag_d0,
        OUT_M_imag_address1 => fft_stage1123_U0_OUT_M_imag_address1,
        OUT_M_imag_ce1 => fft_stage1123_U0_OUT_M_imag_ce1,
        OUT_M_imag_we1 => fft_stage1123_U0_OUT_M_imag_we1,
        OUT_M_imag_d1 => fft_stage1123_U0_OUT_M_imag_d1,
        p_read => ctrl1_reg_c3_channel_dout,
        ap_return => fft_stage1123_U0_ap_return);

    fft_stage1224_U0 : component fwd_fft_fft_stage1224
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage1224_U0_ap_start,
        ap_done => fft_stage1224_U0_ap_done,
        ap_continue => fft_stage1224_U0_ap_continue,
        ap_idle => fft_stage1224_U0_ap_idle,
        ap_ready => fft_stage1224_U0_ap_ready,
        IN_M_real_address0 => fft_stage1224_U0_IN_M_real_address0,
        IN_M_real_ce0 => fft_stage1224_U0_IN_M_real_ce0,
        IN_M_real_q0 => out_data_3_M_real_t_q0,
        IN_M_real_address1 => fft_stage1224_U0_IN_M_real_address1,
        IN_M_real_ce1 => fft_stage1224_U0_IN_M_real_ce1,
        IN_M_real_q1 => out_data_3_M_real_t_q1,
        IN_M_imag_address0 => fft_stage1224_U0_IN_M_imag_address0,
        IN_M_imag_ce0 => fft_stage1224_U0_IN_M_imag_ce0,
        IN_M_imag_q0 => out_data_3_M_imag_t_q0,
        IN_M_imag_address1 => fft_stage1224_U0_IN_M_imag_address1,
        IN_M_imag_ce1 => fft_stage1224_U0_IN_M_imag_ce1,
        IN_M_imag_q1 => out_data_3_M_imag_t_q1,
        OUT_M_real_address0 => fft_stage1224_U0_OUT_M_real_address0,
        OUT_M_real_ce0 => fft_stage1224_U0_OUT_M_real_ce0,
        OUT_M_real_we0 => fft_stage1224_U0_OUT_M_real_we0,
        OUT_M_real_d0 => fft_stage1224_U0_OUT_M_real_d0,
        OUT_M_real_address1 => fft_stage1224_U0_OUT_M_real_address1,
        OUT_M_real_ce1 => fft_stage1224_U0_OUT_M_real_ce1,
        OUT_M_real_we1 => fft_stage1224_U0_OUT_M_real_we1,
        OUT_M_real_d1 => fft_stage1224_U0_OUT_M_real_d1,
        OUT_M_imag_address0 => fft_stage1224_U0_OUT_M_imag_address0,
        OUT_M_imag_ce0 => fft_stage1224_U0_OUT_M_imag_ce0,
        OUT_M_imag_we0 => fft_stage1224_U0_OUT_M_imag_we0,
        OUT_M_imag_d0 => fft_stage1224_U0_OUT_M_imag_d0,
        OUT_M_imag_address1 => fft_stage1224_U0_OUT_M_imag_address1,
        OUT_M_imag_ce1 => fft_stage1224_U0_OUT_M_imag_ce1,
        OUT_M_imag_we1 => fft_stage1224_U0_OUT_M_imag_we1,
        OUT_M_imag_d1 => fft_stage1224_U0_OUT_M_imag_d1,
        p_read => ctrl1_reg_c2_channel_dout,
        ap_return => fft_stage1224_U0_ap_return);

    fft_stage1325_U0 : component fwd_fft_fft_stage1325
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage1325_U0_ap_start,
        ap_done => fft_stage1325_U0_ap_done,
        ap_continue => fft_stage1325_U0_ap_continue,
        ap_idle => fft_stage1325_U0_ap_idle,
        ap_ready => fft_stage1325_U0_ap_ready,
        IN_M_real_address0 => fft_stage1325_U0_IN_M_real_address0,
        IN_M_real_ce0 => fft_stage1325_U0_IN_M_real_ce0,
        IN_M_real_q0 => out_data_4_M_real_t_q0,
        IN_M_real_address1 => fft_stage1325_U0_IN_M_real_address1,
        IN_M_real_ce1 => fft_stage1325_U0_IN_M_real_ce1,
        IN_M_real_q1 => out_data_4_M_real_t_q1,
        IN_M_imag_address0 => fft_stage1325_U0_IN_M_imag_address0,
        IN_M_imag_ce0 => fft_stage1325_U0_IN_M_imag_ce0,
        IN_M_imag_q0 => out_data_4_M_imag_t_q0,
        IN_M_imag_address1 => fft_stage1325_U0_IN_M_imag_address1,
        IN_M_imag_ce1 => fft_stage1325_U0_IN_M_imag_ce1,
        IN_M_imag_q1 => out_data_4_M_imag_t_q1,
        OUT_M_real_address0 => fft_stage1325_U0_OUT_M_real_address0,
        OUT_M_real_ce0 => fft_stage1325_U0_OUT_M_real_ce0,
        OUT_M_real_we0 => fft_stage1325_U0_OUT_M_real_we0,
        OUT_M_real_d0 => fft_stage1325_U0_OUT_M_real_d0,
        OUT_M_real_address1 => fft_stage1325_U0_OUT_M_real_address1,
        OUT_M_real_ce1 => fft_stage1325_U0_OUT_M_real_ce1,
        OUT_M_real_we1 => fft_stage1325_U0_OUT_M_real_we1,
        OUT_M_real_d1 => fft_stage1325_U0_OUT_M_real_d1,
        OUT_M_imag_address0 => fft_stage1325_U0_OUT_M_imag_address0,
        OUT_M_imag_ce0 => fft_stage1325_U0_OUT_M_imag_ce0,
        OUT_M_imag_we0 => fft_stage1325_U0_OUT_M_imag_we0,
        OUT_M_imag_d0 => fft_stage1325_U0_OUT_M_imag_d0,
        OUT_M_imag_address1 => fft_stage1325_U0_OUT_M_imag_address1,
        OUT_M_imag_ce1 => fft_stage1325_U0_OUT_M_imag_ce1,
        OUT_M_imag_we1 => fft_stage1325_U0_OUT_M_imag_we1,
        OUT_M_imag_d1 => fft_stage1325_U0_OUT_M_imag_d1,
        p_read => ctrl1_reg_c1_channel_dout,
        ap_return => fft_stage1325_U0_ap_return);

    fft_stage1426_U0 : component fwd_fft_fft_stage1426
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage1426_U0_ap_start,
        ap_done => fft_stage1426_U0_ap_done,
        ap_continue => fft_stage1426_U0_ap_continue,
        ap_idle => fft_stage1426_U0_ap_idle,
        ap_ready => fft_stage1426_U0_ap_ready,
        IN_M_real_address0 => fft_stage1426_U0_IN_M_real_address0,
        IN_M_real_ce0 => fft_stage1426_U0_IN_M_real_ce0,
        IN_M_real_q0 => out_data_5_M_real_t_q0,
        IN_M_real_address1 => fft_stage1426_U0_IN_M_real_address1,
        IN_M_real_ce1 => fft_stage1426_U0_IN_M_real_ce1,
        IN_M_real_q1 => out_data_5_M_real_t_q1,
        IN_M_imag_address0 => fft_stage1426_U0_IN_M_imag_address0,
        IN_M_imag_ce0 => fft_stage1426_U0_IN_M_imag_ce0,
        IN_M_imag_q0 => out_data_5_M_imag_t_q0,
        IN_M_imag_address1 => fft_stage1426_U0_IN_M_imag_address1,
        IN_M_imag_ce1 => fft_stage1426_U0_IN_M_imag_ce1,
        IN_M_imag_q1 => out_data_5_M_imag_t_q1,
        OUT_M_real_address0 => fft_stage1426_U0_OUT_M_real_address0,
        OUT_M_real_ce0 => fft_stage1426_U0_OUT_M_real_ce0,
        OUT_M_real_we0 => fft_stage1426_U0_OUT_M_real_we0,
        OUT_M_real_d0 => fft_stage1426_U0_OUT_M_real_d0,
        OUT_M_real_address1 => fft_stage1426_U0_OUT_M_real_address1,
        OUT_M_real_ce1 => fft_stage1426_U0_OUT_M_real_ce1,
        OUT_M_real_we1 => fft_stage1426_U0_OUT_M_real_we1,
        OUT_M_real_d1 => fft_stage1426_U0_OUT_M_real_d1,
        OUT_M_imag_address0 => fft_stage1426_U0_OUT_M_imag_address0,
        OUT_M_imag_ce0 => fft_stage1426_U0_OUT_M_imag_ce0,
        OUT_M_imag_we0 => fft_stage1426_U0_OUT_M_imag_we0,
        OUT_M_imag_d0 => fft_stage1426_U0_OUT_M_imag_d0,
        OUT_M_imag_address1 => fft_stage1426_U0_OUT_M_imag_address1,
        OUT_M_imag_ce1 => fft_stage1426_U0_OUT_M_imag_ce1,
        OUT_M_imag_we1 => fft_stage1426_U0_OUT_M_imag_we1,
        OUT_M_imag_d1 => fft_stage1426_U0_OUT_M_imag_d1,
        p_read => ctrl1_reg_c_channel_dout);

    ctrl1_reg_c4_channel_U : component fwd_fft_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => fft_stage921_U0_ap_return,
        if_full_n => ctrl1_reg_c4_channel_full_n,
        if_write => ap_channel_done_ctrl1_reg_c4_channel,
        if_dout => ctrl1_reg_c4_channel_dout,
        if_empty_n => ctrl1_reg_c4_channel_empty_n,
        if_read => fft_stage1022_U0_ap_ready);

    ctrl1_reg_c3_channel_U : component fwd_fft_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => fft_stage1022_U0_ap_return,
        if_full_n => ctrl1_reg_c3_channel_full_n,
        if_write => ap_channel_done_ctrl1_reg_c3_channel,
        if_dout => ctrl1_reg_c3_channel_dout,
        if_empty_n => ctrl1_reg_c3_channel_empty_n,
        if_read => fft_stage1123_U0_ap_ready);

    ctrl1_reg_c2_channel_U : component fwd_fft_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => fft_stage1123_U0_ap_return,
        if_full_n => ctrl1_reg_c2_channel_full_n,
        if_write => ap_channel_done_ctrl1_reg_c2_channel,
        if_dout => ctrl1_reg_c2_channel_dout,
        if_empty_n => ctrl1_reg_c2_channel_empty_n,
        if_read => fft_stage1224_U0_ap_ready);

    ctrl1_reg_c1_channel_U : component fwd_fft_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => fft_stage1224_U0_ap_return,
        if_full_n => ctrl1_reg_c1_channel_full_n,
        if_write => ap_channel_done_ctrl1_reg_c1_channel,
        if_dout => ctrl1_reg_c1_channel_dout,
        if_empty_n => ctrl1_reg_c1_channel_empty_n,
        if_read => fft_stage1325_U0_ap_ready);

    ctrl1_reg_c_channel_U : component fwd_fft_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => fft_stage1325_U0_ap_return,
        if_full_n => ctrl1_reg_c_channel_full_n,
        if_write => ap_channel_done_ctrl1_reg_c_channel,
        if_dout => ctrl1_reg_c_channel_dout,
        if_empty_n => ctrl1_reg_c_channel_empty_n,
        if_read => fft_stage1426_U0_ap_ready);





    ap_sync_reg_channel_write_ctrl1_reg_c1_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_ctrl1_reg_c1_channel <= ap_const_logic_0;
            else
                if (((fft_stage1224_U0_ap_done and fft_stage1224_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_ctrl1_reg_c1_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_ctrl1_reg_c1_channel <= ap_sync_channel_write_ctrl1_reg_c1_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_ctrl1_reg_c2_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_ctrl1_reg_c2_channel <= ap_const_logic_0;
            else
                if (((fft_stage1123_U0_ap_done and fft_stage1123_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_ctrl1_reg_c2_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_ctrl1_reg_c2_channel <= ap_sync_channel_write_ctrl1_reg_c2_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_ctrl1_reg_c3_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_ctrl1_reg_c3_channel <= ap_const_logic_0;
            else
                if (((fft_stage1022_U0_ap_done and fft_stage1022_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_ctrl1_reg_c3_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_ctrl1_reg_c3_channel <= ap_sync_channel_write_ctrl1_reg_c3_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_ctrl1_reg_c4_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_ctrl1_reg_c4_channel <= ap_const_logic_0;
            else
                if (((fft_stage921_U0_ap_done and fft_stage921_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_ctrl1_reg_c4_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_ctrl1_reg_c4_channel <= ap_sync_channel_write_ctrl1_reg_c4_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_ctrl1_reg_c_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_ctrl1_reg_c_channel <= ap_const_logic_0;
            else
                if (((fft_stage1325_U0_ap_done and fft_stage1325_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_ctrl1_reg_c_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_ctrl1_reg_c_channel <= ap_sync_channel_write_ctrl1_reg_c_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_data_1_M_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_data_1_M_imag <= ap_const_logic_0;
            else
                if (((fft_stage921_U0_ap_done and fft_stage921_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_data_1_M_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_data_1_M_imag <= ap_sync_channel_write_out_data_1_M_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_data_1_M_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_data_1_M_real <= ap_const_logic_0;
            else
                if (((fft_stage921_U0_ap_done and fft_stage921_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_data_1_M_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_data_1_M_real <= ap_sync_channel_write_out_data_1_M_real;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_data_2_M_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_data_2_M_imag <= ap_const_logic_0;
            else
                if (((fft_stage1022_U0_ap_done and fft_stage1022_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_data_2_M_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_data_2_M_imag <= ap_sync_channel_write_out_data_2_M_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_data_2_M_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_data_2_M_real <= ap_const_logic_0;
            else
                if (((fft_stage1022_U0_ap_done and fft_stage1022_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_data_2_M_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_data_2_M_real <= ap_sync_channel_write_out_data_2_M_real;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_data_3_M_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_data_3_M_imag <= ap_const_logic_0;
            else
                if (((fft_stage1123_U0_ap_done and fft_stage1123_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_data_3_M_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_data_3_M_imag <= ap_sync_channel_write_out_data_3_M_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_data_3_M_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_data_3_M_real <= ap_const_logic_0;
            else
                if (((fft_stage1123_U0_ap_done and fft_stage1123_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_data_3_M_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_data_3_M_real <= ap_sync_channel_write_out_data_3_M_real;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_data_4_M_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_data_4_M_imag <= ap_const_logic_0;
            else
                if (((fft_stage1224_U0_ap_done and fft_stage1224_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_data_4_M_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_data_4_M_imag <= ap_sync_channel_write_out_data_4_M_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_data_4_M_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_data_4_M_real <= ap_const_logic_0;
            else
                if (((fft_stage1224_U0_ap_done and fft_stage1224_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_data_4_M_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_data_4_M_real <= ap_sync_channel_write_out_data_4_M_real;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_data_5_M_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_data_5_M_imag <= ap_const_logic_0;
            else
                if (((fft_stage1325_U0_ap_done and fft_stage1325_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_data_5_M_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_data_5_M_imag <= ap_sync_channel_write_out_data_5_M_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_out_data_5_M_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_out_data_5_M_real <= ap_const_logic_0;
            else
                if (((fft_stage1325_U0_ap_done and fft_stage1325_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_out_data_5_M_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_out_data_5_M_real <= ap_sync_channel_write_out_data_5_M_real;
                end if; 
            end if;
        end if;
    end process;

    ap_channel_done_ctrl1_reg_c1_channel <= (fft_stage1224_U0_ap_done and (ap_sync_reg_channel_write_ctrl1_reg_c1_channel xor ap_const_logic_1));
    ap_channel_done_ctrl1_reg_c2_channel <= (fft_stage1123_U0_ap_done and (ap_sync_reg_channel_write_ctrl1_reg_c2_channel xor ap_const_logic_1));
    ap_channel_done_ctrl1_reg_c3_channel <= (fft_stage1022_U0_ap_done and (ap_sync_reg_channel_write_ctrl1_reg_c3_channel xor ap_const_logic_1));
    ap_channel_done_ctrl1_reg_c4_channel <= (fft_stage921_U0_ap_done and (ap_sync_reg_channel_write_ctrl1_reg_c4_channel xor ap_const_logic_1));
    ap_channel_done_ctrl1_reg_c_channel <= (fft_stage1325_U0_ap_done and (ap_sync_reg_channel_write_ctrl1_reg_c_channel xor ap_const_logic_1));
    ap_channel_done_out_data_1_M_imag <= (fft_stage921_U0_ap_done and (ap_sync_reg_channel_write_out_data_1_M_imag xor ap_const_logic_1));
    ap_channel_done_out_data_1_M_real <= (fft_stage921_U0_ap_done and (ap_sync_reg_channel_write_out_data_1_M_real xor ap_const_logic_1));
    ap_channel_done_out_data_2_M_imag <= (fft_stage1022_U0_ap_done and (ap_sync_reg_channel_write_out_data_2_M_imag xor ap_const_logic_1));
    ap_channel_done_out_data_2_M_real <= (fft_stage1022_U0_ap_done and (ap_sync_reg_channel_write_out_data_2_M_real xor ap_const_logic_1));
    ap_channel_done_out_data_3_M_imag <= (fft_stage1123_U0_ap_done and (ap_sync_reg_channel_write_out_data_3_M_imag xor ap_const_logic_1));
    ap_channel_done_out_data_3_M_real <= (fft_stage1123_U0_ap_done and (ap_sync_reg_channel_write_out_data_3_M_real xor ap_const_logic_1));
    ap_channel_done_out_data_4_M_imag <= (fft_stage1224_U0_ap_done and (ap_sync_reg_channel_write_out_data_4_M_imag xor ap_const_logic_1));
    ap_channel_done_out_data_4_M_real <= (fft_stage1224_U0_ap_done and (ap_sync_reg_channel_write_out_data_4_M_real xor ap_const_logic_1));
    ap_channel_done_out_data_5_M_imag <= (fft_stage1325_U0_ap_done and (ap_sync_reg_channel_write_out_data_5_M_imag xor ap_const_logic_1));
    ap_channel_done_out_data_5_M_real <= (fft_stage1325_U0_ap_done and (ap_sync_reg_channel_write_out_data_5_M_real xor ap_const_logic_1));
    ap_done <= fft_stage1426_U0_ap_done;
    ap_idle <= (fft_stage921_U0_ap_idle and fft_stage1426_U0_ap_idle and fft_stage1325_U0_ap_idle and fft_stage1224_U0_ap_idle and fft_stage1123_U0_ap_idle and fft_stage1022_U0_ap_idle and (ctrl1_reg_c_channel_empty_n xor ap_const_logic_1) and (ctrl1_reg_c1_channel_empty_n xor ap_const_logic_1) and (ctrl1_reg_c2_channel_empty_n xor ap_const_logic_1) and (ctrl1_reg_c3_channel_empty_n xor ap_const_logic_1) and (ctrl1_reg_c4_channel_empty_n xor ap_const_logic_1) and (out_data_5_M_imag_t_empty_n xor ap_const_logic_1) and (out_data_5_M_real_t_empty_n xor ap_const_logic_1) and (out_data_4_M_imag_t_empty_n xor ap_const_logic_1) and (out_data_4_M_real_t_empty_n xor ap_const_logic_1) and (out_data_3_M_imag_t_empty_n xor ap_const_logic_1) and (out_data_3_M_real_t_empty_n xor ap_const_logic_1) and (out_data_2_M_imag_t_empty_n xor ap_const_logic_1) and (out_data_2_M_real_t_empty_n xor ap_const_logic_1) and (out_data_1_M_imag_t_empty_n xor ap_const_logic_1) and (out_data_1_M_real_t_empty_n xor ap_const_logic_1));
    ap_ready <= fft_stage921_U0_ap_ready;
    ap_sync_channel_write_ctrl1_reg_c1_channel <= ((ctrl1_reg_c1_channel_full_n and ap_channel_done_ctrl1_reg_c1_channel) or ap_sync_reg_channel_write_ctrl1_reg_c1_channel);
    ap_sync_channel_write_ctrl1_reg_c2_channel <= ((ctrl1_reg_c2_channel_full_n and ap_channel_done_ctrl1_reg_c2_channel) or ap_sync_reg_channel_write_ctrl1_reg_c2_channel);
    ap_sync_channel_write_ctrl1_reg_c3_channel <= ((ctrl1_reg_c3_channel_full_n and ap_channel_done_ctrl1_reg_c3_channel) or ap_sync_reg_channel_write_ctrl1_reg_c3_channel);
    ap_sync_channel_write_ctrl1_reg_c4_channel <= ((ctrl1_reg_c4_channel_full_n and ap_channel_done_ctrl1_reg_c4_channel) or ap_sync_reg_channel_write_ctrl1_reg_c4_channel);
    ap_sync_channel_write_ctrl1_reg_c_channel <= ((ctrl1_reg_c_channel_full_n and ap_channel_done_ctrl1_reg_c_channel) or ap_sync_reg_channel_write_ctrl1_reg_c_channel);
    ap_sync_channel_write_out_data_1_M_imag <= ((fft_stage921_U0_OUT_M_imag_full_n and ap_channel_done_out_data_1_M_imag) or ap_sync_reg_channel_write_out_data_1_M_imag);
    ap_sync_channel_write_out_data_1_M_real <= ((fft_stage921_U0_OUT_M_real_full_n and ap_channel_done_out_data_1_M_real) or ap_sync_reg_channel_write_out_data_1_M_real);
    ap_sync_channel_write_out_data_2_M_imag <= ((fft_stage1022_U0_OUT_M_imag_full_n and ap_channel_done_out_data_2_M_imag) or ap_sync_reg_channel_write_out_data_2_M_imag);
    ap_sync_channel_write_out_data_2_M_real <= ((fft_stage1022_U0_OUT_M_real_full_n and ap_channel_done_out_data_2_M_real) or ap_sync_reg_channel_write_out_data_2_M_real);
    ap_sync_channel_write_out_data_3_M_imag <= ((fft_stage1123_U0_OUT_M_imag_full_n and ap_channel_done_out_data_3_M_imag) or ap_sync_reg_channel_write_out_data_3_M_imag);
    ap_sync_channel_write_out_data_3_M_real <= ((fft_stage1123_U0_OUT_M_real_full_n and ap_channel_done_out_data_3_M_real) or ap_sync_reg_channel_write_out_data_3_M_real);
    ap_sync_channel_write_out_data_4_M_imag <= ((fft_stage1224_U0_OUT_M_imag_full_n and ap_channel_done_out_data_4_M_imag) or ap_sync_reg_channel_write_out_data_4_M_imag);
    ap_sync_channel_write_out_data_4_M_real <= ((fft_stage1224_U0_OUT_M_real_full_n and ap_channel_done_out_data_4_M_real) or ap_sync_reg_channel_write_out_data_4_M_real);
    ap_sync_channel_write_out_data_5_M_imag <= ((fft_stage1325_U0_OUT_M_imag_full_n and ap_channel_done_out_data_5_M_imag) or ap_sync_reg_channel_write_out_data_5_M_imag);
    ap_sync_channel_write_out_data_5_M_real <= ((fft_stage1325_U0_OUT_M_real_full_n and ap_channel_done_out_data_5_M_real) or ap_sync_reg_channel_write_out_data_5_M_real);
    ctrl1_reg_c5_din <= fft_stage921_U0_ctrl1_reg_c5_din;
    ctrl1_reg_c5_write <= fft_stage921_U0_ctrl1_reg_c5_write;
    fft_stage1022_U0_OUT_M_imag_full_n <= out_data_2_M_imag_i_full_n;
    fft_stage1022_U0_OUT_M_real_full_n <= out_data_2_M_real_i_full_n;
    fft_stage1022_U0_ap_continue <= (ap_sync_channel_write_out_data_2_M_real and ap_sync_channel_write_out_data_2_M_imag and ap_sync_channel_write_ctrl1_reg_c3_channel);
    fft_stage1022_U0_ap_start <= (out_data_1_M_real_t_empty_n and out_data_1_M_imag_t_empty_n and ctrl1_reg_c4_channel_empty_n);
    fft_stage1123_U0_OUT_M_imag_full_n <= out_data_3_M_imag_i_full_n;
    fft_stage1123_U0_OUT_M_real_full_n <= out_data_3_M_real_i_full_n;
    fft_stage1123_U0_ap_continue <= (ap_sync_channel_write_out_data_3_M_real and ap_sync_channel_write_out_data_3_M_imag and ap_sync_channel_write_ctrl1_reg_c2_channel);
    fft_stage1123_U0_ap_start <= (out_data_2_M_real_t_empty_n and out_data_2_M_imag_t_empty_n and ctrl1_reg_c3_channel_empty_n);
    fft_stage1224_U0_OUT_M_imag_full_n <= out_data_4_M_imag_i_full_n;
    fft_stage1224_U0_OUT_M_real_full_n <= out_data_4_M_real_i_full_n;
    fft_stage1224_U0_ap_continue <= (ap_sync_channel_write_out_data_4_M_real and ap_sync_channel_write_out_data_4_M_imag and ap_sync_channel_write_ctrl1_reg_c1_channel);
    fft_stage1224_U0_ap_start <= (out_data_3_M_real_t_empty_n and out_data_3_M_imag_t_empty_n and ctrl1_reg_c2_channel_empty_n);
    fft_stage1325_U0_OUT_M_imag_full_n <= out_data_5_M_imag_i_full_n;
    fft_stage1325_U0_OUT_M_real_full_n <= out_data_5_M_real_i_full_n;
    fft_stage1325_U0_ap_continue <= (ap_sync_channel_write_out_data_5_M_real and ap_sync_channel_write_out_data_5_M_imag and ap_sync_channel_write_ctrl1_reg_c_channel);
    fft_stage1325_U0_ap_start <= (out_data_4_M_real_t_empty_n and out_data_4_M_imag_t_empty_n and ctrl1_reg_c1_channel_empty_n);
    fft_stage1426_U0_OUT_M_imag_write <= ap_const_logic_0;
    fft_stage1426_U0_OUT_M_real_write <= ap_const_logic_0;
    fft_stage1426_U0_ap_continue <= ap_continue;
    fft_stage1426_U0_ap_start <= (out_data_5_M_real_t_empty_n and out_data_5_M_imag_t_empty_n and ctrl1_reg_c_channel_empty_n);
    fft_stage921_U0_IN_M_imag_write <= ap_const_logic_0;
    fft_stage921_U0_IN_M_real_write <= ap_const_logic_0;
    fft_stage921_U0_OUT_M_imag_full_n <= out_data_1_M_imag_i_full_n;
    fft_stage921_U0_OUT_M_real_full_n <= out_data_1_M_real_i_full_n;
    fft_stage921_U0_ap_continue <= (ap_sync_channel_write_out_data_1_M_real and ap_sync_channel_write_out_data_1_M_imag and ap_sync_channel_write_ctrl1_reg_c4_channel);
    fft_stage921_U0_ap_start <= ap_start;
    input_data_M_imag_address0 <= fft_stage921_U0_IN_M_imag_address0;
    input_data_M_imag_address1 <= fft_stage921_U0_IN_M_imag_address1;
    input_data_M_imag_ce0 <= fft_stage921_U0_IN_M_imag_ce0;
    input_data_M_imag_ce1 <= fft_stage921_U0_IN_M_imag_ce1;
    input_data_M_imag_d0 <= ap_const_lv16_0;
    input_data_M_imag_d1 <= ap_const_lv16_0;
    input_data_M_imag_read <= fft_stage921_U0_IN_M_imag_write;
    input_data_M_imag_we0 <= ap_const_logic_0;
    input_data_M_imag_we1 <= ap_const_logic_0;
    input_data_M_real_address0 <= fft_stage921_U0_IN_M_real_address0;
    input_data_M_real_address1 <= fft_stage921_U0_IN_M_real_address1;
    input_data_M_real_ce0 <= fft_stage921_U0_IN_M_real_ce0;
    input_data_M_real_ce1 <= fft_stage921_U0_IN_M_real_ce1;
    input_data_M_real_d0 <= ap_const_lv16_0;
    input_data_M_real_d1 <= ap_const_lv16_0;
    input_data_M_real_read <= fft_stage921_U0_IN_M_real_write;
    input_data_M_real_we0 <= ap_const_logic_0;
    input_data_M_real_we1 <= ap_const_logic_0;
    out_data_6_M_imag_address0 <= fft_stage1426_U0_OUT_M_imag_address0;
    out_data_6_M_imag_address1 <= fft_stage1426_U0_OUT_M_imag_address1;
    out_data_6_M_imag_ce0 <= fft_stage1426_U0_OUT_M_imag_ce0;
    out_data_6_M_imag_ce1 <= fft_stage1426_U0_OUT_M_imag_ce1;
    out_data_6_M_imag_d0 <= fft_stage1426_U0_OUT_M_imag_d0;
    out_data_6_M_imag_d1 <= fft_stage1426_U0_OUT_M_imag_d1;
    out_data_6_M_imag_we0 <= fft_stage1426_U0_OUT_M_imag_we0;
    out_data_6_M_imag_we1 <= fft_stage1426_U0_OUT_M_imag_we1;
    out_data_6_M_imag_write <= fft_stage1426_U0_OUT_M_imag_write;
    out_data_6_M_real_address0 <= fft_stage1426_U0_OUT_M_real_address0;
    out_data_6_M_real_address1 <= fft_stage1426_U0_OUT_M_real_address1;
    out_data_6_M_real_ce0 <= fft_stage1426_U0_OUT_M_real_ce0;
    out_data_6_M_real_ce1 <= fft_stage1426_U0_OUT_M_real_ce1;
    out_data_6_M_real_d0 <= fft_stage1426_U0_OUT_M_real_d0;
    out_data_6_M_real_d1 <= fft_stage1426_U0_OUT_M_real_d1;
    out_data_6_M_real_we0 <= fft_stage1426_U0_OUT_M_real_we0;
    out_data_6_M_real_we1 <= fft_stage1426_U0_OUT_M_real_we1;
    out_data_6_M_real_write <= fft_stage1426_U0_OUT_M_real_write;
end behav;
