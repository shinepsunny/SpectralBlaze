-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Mem_patch_Wr_ifmap_vec_write is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ifmap_CF_M_real_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ifmap_CF_M_real_ce0 : OUT STD_LOGIC;
    ifmap_CF_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ifmap_CF_M_real_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ifmap_CF_M_real_ce1 : OUT STD_LOGIC;
    ifmap_CF_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    ifmap_CF_M_imag_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ifmap_CF_M_imag_ce0 : OUT STD_LOGIC;
    ifmap_CF_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ifmap_CF_M_imag_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    ifmap_CF_M_imag_ce1 : OUT STD_LOGIC;
    ifmap_CF_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    fft_out : OUT STD_LOGIC_VECTOR (127 downto 0);
    fft_out_ap_vld : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of Mem_patch_Wr_ifmap_vec_write is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal wr_ptr : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal icmp_ln1057_fu_52_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_reg_155 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln567_fu_58_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln567_reg_159 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_reg_164 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln567_1_fu_98_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln567_1_reg_169 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal mul_ln577_fu_113_p2 : STD_LOGIC_VECTOR (69 downto 0);
    signal mul_ln577_reg_179 : STD_LOGIC_VECTOR (69 downto 0);
    signal zext_ln567_1_fu_120_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln567_1_reg_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_123_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln567_reg_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_start : STD_LOGIC;
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_done : STD_LOGIC;
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_idle : STD_LOGIC;
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_ready : STD_LOGIC;
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_real_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_real_ce0 : STD_LOGIC;
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_real_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_real_ce1 : STD_LOGIC;
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_imag_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_imag_ce0 : STD_LOGIC;
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_imag_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_imag_ce1 : STD_LOGIC;
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_fft_out : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_fft_out_ap_vld : STD_LOGIC;
    signal grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_start_reg : STD_LOGIC := '0';
    signal add_ln567_3_fu_137_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal zext_ln1057_fu_48_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln_fu_64_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln567_1_fu_74_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln567_4_fu_82_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln567_fu_78_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln577_fu_113_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln577_fu_113_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_123_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln567_2_fu_133_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_123_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal grp_fu_123_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln577_fu_113_p00 : STD_LOGIC_VECTOR (69 downto 0);
    signal mul_ln577_fu_113_p10 : STD_LOGIC_VECTOR (69 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component Mem_patch_Wr_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mul_ln577 : IN STD_LOGIC_VECTOR (69 downto 0);
        zext_ln567 : IN STD_LOGIC_VECTOR (7 downto 0);
        ifmap_CF_M_real_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        ifmap_CF_M_real_ce0 : OUT STD_LOGIC;
        ifmap_CF_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ifmap_CF_M_real_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        ifmap_CF_M_real_ce1 : OUT STD_LOGIC;
        ifmap_CF_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ifmap_CF_M_imag_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        ifmap_CF_M_imag_ce0 : OUT STD_LOGIC;
        ifmap_CF_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ifmap_CF_M_imag_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        ifmap_CF_M_imag_ce1 : OUT STD_LOGIC;
        ifmap_CF_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        fft_out : OUT STD_LOGIC_VECTOR (127 downto 0);
        fft_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Mem_patch_Wr_mul_8ns_7ns_70_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (69 downto 0) );
    end component;


    component Mem_patch_Wr_mul_31ns_9s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36 : component Mem_patch_Wr_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_start,
        ap_done => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_done,
        ap_idle => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_idle,
        ap_ready => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_ready,
        mul_ln577 => mul_ln577_reg_179,
        zext_ln567 => p_read,
        ifmap_CF_M_real_address0 => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_real_address0,
        ifmap_CF_M_real_ce0 => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_real_ce0,
        ifmap_CF_M_real_q0 => ifmap_CF_M_real_q0,
        ifmap_CF_M_real_address1 => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_real_address1,
        ifmap_CF_M_real_ce1 => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_real_ce1,
        ifmap_CF_M_real_q1 => ifmap_CF_M_real_q1,
        ifmap_CF_M_imag_address0 => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_imag_address0,
        ifmap_CF_M_imag_ce0 => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_imag_ce0,
        ifmap_CF_M_imag_q0 => ifmap_CF_M_imag_q0,
        ifmap_CF_M_imag_address1 => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_imag_address1,
        ifmap_CF_M_imag_ce1 => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_imag_ce1,
        ifmap_CF_M_imag_q1 => ifmap_CF_M_imag_q1,
        fft_out => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_fft_out,
        fft_out_ap_vld => grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_fft_out_ap_vld);

    mul_8ns_7ns_70_1_1_U12 : component Mem_patch_Wr_mul_8ns_7ns_70_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 70)
    port map (
        din0 => mul_ln577_fu_113_p0,
        din1 => mul_ln577_fu_113_p1,
        dout => mul_ln577_fu_113_p2);

    mul_31ns_9s_32_2_1_U13 : component Mem_patch_Wr_mul_31ns_9s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 31,
        din1_WIDTH => 9,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_123_p0,
        din1 => add_ln567_reg_159,
        ce => grp_fu_123_ce,
        dout => grp_fu_123_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_ready = ap_const_logic_1)) then 
                    grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_fu_52_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln567_1_reg_169 <= add_ln567_1_fu_98_p2;
                add_ln567_reg_159 <= add_ln567_fu_58_p2;
                tmp_reg_164 <= add_ln567_4_fu_82_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln1057_reg_155 <= icmp_ln1057_fu_52_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                mul_ln567_reg_190 <= grp_fu_123_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                mul_ln577_reg_179 <= mul_ln577_fu_113_p2;
                    zext_ln567_1_reg_184(30 downto 0) <= zext_ln567_1_fu_120_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_reg_155 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                wr_ptr <= add_ln567_3_fu_137_p2;
            end if;
        end if;
    end process;
    zext_ln567_1_reg_184(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln1057_fu_52_p2, ap_CS_fsm_state3, grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (icmp_ln1057_fu_52_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (icmp_ln1057_fu_52_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln567_1_fu_98_p2 <= std_logic_vector(unsigned(zext_ln567_fu_78_p1) + unsigned(ap_const_lv31_1));
    add_ln567_2_fu_133_p2 <= std_logic_vector(unsigned(mul_ln567_reg_190) + unsigned(zext_ln567_1_reg_184));
    add_ln567_3_fu_137_p2 <= std_logic_vector(unsigned(add_ln567_2_fu_133_p2) + unsigned(wr_ptr));
    add_ln567_4_fu_82_p2 <= std_logic_vector(unsigned(zext_ln1057_fu_48_p1) + unsigned(ap_const_lv9_3));
    add_ln567_fu_58_p2 <= std_logic_vector(unsigned(zext_ln1057_fu_48_p1) + unsigned(ap_const_lv9_1FF));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_done)
    begin
        if ((grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    fft_out <= grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_fft_out;
    fft_out_ap_vld <= grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_fft_out_ap_vld;

    grp_fu_123_ce_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_fu_123_ce <= ap_const_logic_1;
        else 
            grp_fu_123_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_123_p0 <= grp_fu_123_p00(31 - 1 downto 0);
    grp_fu_123_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln567_1_reg_169),32));
    grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_start <= grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ap_start_reg;
    icmp_ln1057_fu_52_p2 <= "1" when (p_read = ap_const_lv8_0) else "0";
    ifmap_CF_M_imag_address0 <= grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_imag_address0;
    ifmap_CF_M_imag_address1 <= grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_imag_address1;
    ifmap_CF_M_imag_ce0 <= grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_imag_ce0;
    ifmap_CF_M_imag_ce1 <= grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_imag_ce1;
    ifmap_CF_M_real_address0 <= grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_real_address0;
    ifmap_CF_M_real_address1 <= grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_real_address1;
    ifmap_CF_M_real_ce0 <= grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_real_ce0;
    ifmap_CF_M_real_ce1 <= grp_ifmap_vec_write_Pipeline_VITIS_LOOP_567_1_VITIS_LOOP_570_2_fu_36_ifmap_CF_M_real_ce1;
    mul_ln577_fu_113_p0 <= mul_ln577_fu_113_p00(8 - 1 downto 0);
    mul_ln577_fu_113_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read),70));
    mul_ln577_fu_113_p1 <= mul_ln577_fu_113_p10(7 - 1 downto 0);
    mul_ln577_fu_113_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_164),70));
        sext_ln567_1_fu_74_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_64_p4),30));

    trunc_ln_fu_64_p4 <= add_ln567_fu_58_p2(8 downto 2);
    zext_ln1057_fu_48_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read),9));
    zext_ln567_1_fu_120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln567_1_reg_169),32));
    zext_ln567_fu_78_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln567_1_fu_74_p1),31));
end behav;
