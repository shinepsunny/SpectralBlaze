-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity patch_gen_dataflow_in_loop_VITIS_LOOP_226_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ctrl1_reg : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl2_reg : IN STD_LOGIC_VECTOR (31 downto 0);
    pny_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    layer2_reg : IN STD_LOGIC_VECTOR (31 downto 0);
    in1_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    in1_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
    in1_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
    in1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in2_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    in2_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
    in2_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
    in2_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    col_ov_pix_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    col_ov_pix_out_V_full_n : IN STD_LOGIC;
    col_ov_pix_out_V_write : OUT STD_LOGIC;
    ctrl1_reg_ap_vld : IN STD_LOGIC;
    ctrl2_reg_ap_vld : IN STD_LOGIC;
    pny_2_ap_vld : IN STD_LOGIC;
    layer2_reg_ap_vld : IN STD_LOGIC;
    in1_TVALID : IN STD_LOGIC;
    in1_TREADY : OUT STD_LOGIC;
    in2_TVALID : IN STD_LOGIC;
    in2_TREADY : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of patch_gen_dataflow_in_loop_VITIS_LOOP_226_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal burst_buffer1_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal burst_buffer1_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal burst_buffer2_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal burst_buffer2_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal VITIS_LOOP_230_3_proc_U0_ap_start : STD_LOGIC;
    signal VITIS_LOOP_230_3_proc_U0_ap_done : STD_LOGIC;
    signal VITIS_LOOP_230_3_proc_U0_ap_continue : STD_LOGIC;
    signal VITIS_LOOP_230_3_proc_U0_ap_idle : STD_LOGIC;
    signal VITIS_LOOP_230_3_proc_U0_ap_ready : STD_LOGIC;
    signal VITIS_LOOP_230_3_proc_U0_burst_buffer11_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal VITIS_LOOP_230_3_proc_U0_burst_buffer11_ce0 : STD_LOGIC;
    signal VITIS_LOOP_230_3_proc_U0_burst_buffer11_we0 : STD_LOGIC;
    signal VITIS_LOOP_230_3_proc_U0_burst_buffer11_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal VITIS_LOOP_230_3_proc_U0_burst_buffer22_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal VITIS_LOOP_230_3_proc_U0_burst_buffer22_ce0 : STD_LOGIC;
    signal VITIS_LOOP_230_3_proc_U0_burst_buffer22_we0 : STD_LOGIC;
    signal VITIS_LOOP_230_3_proc_U0_burst_buffer22_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal VITIS_LOOP_230_3_proc_U0_in1_TREADY : STD_LOGIC;
    signal VITIS_LOOP_230_3_proc_U0_in2_TREADY : STD_LOGIC;
    signal VITIS_LOOP_230_3_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal VITIS_LOOP_230_3_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_ctrl2_reg_c_channel : STD_LOGIC;
    signal ctrl2_reg_c_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_ctrl2_reg_c_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_ctrl2_reg_c_channel : STD_LOGIC;
    signal ap_channel_done_ctrl1_reg_c_channel : STD_LOGIC;
    signal ctrl1_reg_c_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_ctrl1_reg_c_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_ctrl1_reg_c_channel : STD_LOGIC;
    signal ap_channel_done_burst_buffer2 : STD_LOGIC;
    signal VITIS_LOOP_230_3_proc_U0_burst_buffer22_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_burst_buffer2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_burst_buffer2 : STD_LOGIC;
    signal ap_channel_done_burst_buffer1 : STD_LOGIC;
    signal VITIS_LOOP_230_3_proc_U0_burst_buffer11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_burst_buffer1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_burst_buffer1 : STD_LOGIC;
    signal VITIS_LOOP_254_6_proc_U0_ap_start : STD_LOGIC;
    signal VITIS_LOOP_254_6_proc_U0_ap_done : STD_LOGIC;
    signal VITIS_LOOP_254_6_proc_U0_ap_continue : STD_LOGIC;
    signal VITIS_LOOP_254_6_proc_U0_ap_idle : STD_LOGIC;
    signal VITIS_LOOP_254_6_proc_U0_ap_ready : STD_LOGIC;
    signal VITIS_LOOP_254_6_proc_U0_burst_buffer11_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal VITIS_LOOP_254_6_proc_U0_burst_buffer11_ce0 : STD_LOGIC;
    signal VITIS_LOOP_254_6_proc_U0_burst_buffer22_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal VITIS_LOOP_254_6_proc_U0_burst_buffer22_ce0 : STD_LOGIC;
    signal VITIS_LOOP_254_6_proc_U0_col_ov_pix_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal VITIS_LOOP_254_6_proc_U0_col_ov_pix_out_V_write : STD_LOGIC;
    signal burst_buffer1_i_full_n : STD_LOGIC;
    signal burst_buffer1_t_empty_n : STD_LOGIC;
    signal burst_buffer2_i_full_n : STD_LOGIC;
    signal burst_buffer2_t_empty_n : STD_LOGIC;
    signal ctrl1_reg_c_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal ctrl1_reg_c_channel_empty_n : STD_LOGIC;
    signal ctrl2_reg_c_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal ctrl2_reg_c_channel_empty_n : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component patch_gen_VITIS_LOOP_230_3_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ctrl1_reg : IN STD_LOGIC_VECTOR (31 downto 0);
        ctrl2_reg : IN STD_LOGIC_VECTOR (31 downto 0);
        pny_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        layer2_reg : IN STD_LOGIC_VECTOR (31 downto 0);
        burst_buffer11_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        burst_buffer11_ce0 : OUT STD_LOGIC;
        burst_buffer11_we0 : OUT STD_LOGIC;
        burst_buffer11_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        burst_buffer22_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        burst_buffer22_ce0 : OUT STD_LOGIC;
        burst_buffer22_we0 : OUT STD_LOGIC;
        burst_buffer22_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        in1_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        in1_TVALID : IN STD_LOGIC;
        in1_TREADY : OUT STD_LOGIC;
        in1_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
        in1_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        in1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        in2_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        in2_TVALID : IN STD_LOGIC;
        in2_TREADY : OUT STD_LOGIC;
        in2_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
        in2_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        in2_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component patch_gen_VITIS_LOOP_254_6_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        burst_buffer11_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        burst_buffer11_ce0 : OUT STD_LOGIC;
        burst_buffer11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        burst_buffer22_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        burst_buffer22_ce0 : OUT STD_LOGIC;
        burst_buffer22_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        col_ov_pix_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        col_ov_pix_out_V_full_n : IN STD_LOGIC;
        col_ov_pix_out_V_write : OUT STD_LOGIC );
    end component;


    component patch_gen_dataflow_in_loop_VITIS_LOOP_226_2_burst_buffer1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component patch_gen_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    burst_buffer1_U : component patch_gen_dataflow_in_loop_VITIS_LOOP_226_2_burst_buffer1
    generic map (
        DataWidth => 16,
        AddressRange => 15872,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => VITIS_LOOP_230_3_proc_U0_burst_buffer11_address0,
        i_ce0 => VITIS_LOOP_230_3_proc_U0_burst_buffer11_ce0,
        i_we0 => VITIS_LOOP_230_3_proc_U0_burst_buffer11_we0,
        i_d0 => VITIS_LOOP_230_3_proc_U0_burst_buffer11_d0,
        i_q0 => burst_buffer1_i_q0,
        t_address0 => VITIS_LOOP_254_6_proc_U0_burst_buffer11_address0,
        t_ce0 => VITIS_LOOP_254_6_proc_U0_burst_buffer11_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => burst_buffer1_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => burst_buffer1_i_full_n,
        i_write => ap_channel_done_burst_buffer1,
        t_empty_n => burst_buffer1_t_empty_n,
        t_read => VITIS_LOOP_254_6_proc_U0_ap_ready);

    burst_buffer2_U : component patch_gen_dataflow_in_loop_VITIS_LOOP_226_2_burst_buffer1
    generic map (
        DataWidth => 16,
        AddressRange => 15872,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => VITIS_LOOP_230_3_proc_U0_burst_buffer22_address0,
        i_ce0 => VITIS_LOOP_230_3_proc_U0_burst_buffer22_ce0,
        i_we0 => VITIS_LOOP_230_3_proc_U0_burst_buffer22_we0,
        i_d0 => VITIS_LOOP_230_3_proc_U0_burst_buffer22_d0,
        i_q0 => burst_buffer2_i_q0,
        t_address0 => VITIS_LOOP_254_6_proc_U0_burst_buffer22_address0,
        t_ce0 => VITIS_LOOP_254_6_proc_U0_burst_buffer22_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => burst_buffer2_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => burst_buffer2_i_full_n,
        i_write => ap_channel_done_burst_buffer2,
        t_empty_n => burst_buffer2_t_empty_n,
        t_read => VITIS_LOOP_254_6_proc_U0_ap_ready);

    VITIS_LOOP_230_3_proc_U0 : component patch_gen_VITIS_LOOP_230_3_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => VITIS_LOOP_230_3_proc_U0_ap_start,
        ap_done => VITIS_LOOP_230_3_proc_U0_ap_done,
        ap_continue => VITIS_LOOP_230_3_proc_U0_ap_continue,
        ap_idle => VITIS_LOOP_230_3_proc_U0_ap_idle,
        ap_ready => VITIS_LOOP_230_3_proc_U0_ap_ready,
        ctrl1_reg => ctrl1_reg,
        ctrl2_reg => ctrl2_reg,
        pny_2 => pny_2,
        layer2_reg => layer2_reg,
        burst_buffer11_address0 => VITIS_LOOP_230_3_proc_U0_burst_buffer11_address0,
        burst_buffer11_ce0 => VITIS_LOOP_230_3_proc_U0_burst_buffer11_ce0,
        burst_buffer11_we0 => VITIS_LOOP_230_3_proc_U0_burst_buffer11_we0,
        burst_buffer11_d0 => VITIS_LOOP_230_3_proc_U0_burst_buffer11_d0,
        burst_buffer22_address0 => VITIS_LOOP_230_3_proc_U0_burst_buffer22_address0,
        burst_buffer22_ce0 => VITIS_LOOP_230_3_proc_U0_burst_buffer22_ce0,
        burst_buffer22_we0 => VITIS_LOOP_230_3_proc_U0_burst_buffer22_we0,
        burst_buffer22_d0 => VITIS_LOOP_230_3_proc_U0_burst_buffer22_d0,
        in1_TDATA => in1_TDATA,
        in1_TVALID => in1_TVALID,
        in1_TREADY => VITIS_LOOP_230_3_proc_U0_in1_TREADY,
        in1_TKEEP => in1_TKEEP,
        in1_TSTRB => in1_TSTRB,
        in1_TLAST => in1_TLAST,
        in2_TDATA => in2_TDATA,
        in2_TVALID => in2_TVALID,
        in2_TREADY => VITIS_LOOP_230_3_proc_U0_in2_TREADY,
        in2_TKEEP => in2_TKEEP,
        in2_TSTRB => in2_TSTRB,
        in2_TLAST => in2_TLAST,
        ap_return_0 => VITIS_LOOP_230_3_proc_U0_ap_return_0,
        ap_return_1 => VITIS_LOOP_230_3_proc_U0_ap_return_1);

    VITIS_LOOP_254_6_proc_U0 : component patch_gen_VITIS_LOOP_254_6_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => VITIS_LOOP_254_6_proc_U0_ap_start,
        ap_done => VITIS_LOOP_254_6_proc_U0_ap_done,
        ap_continue => VITIS_LOOP_254_6_proc_U0_ap_continue,
        ap_idle => VITIS_LOOP_254_6_proc_U0_ap_idle,
        ap_ready => VITIS_LOOP_254_6_proc_U0_ap_ready,
        p_read => ctrl2_reg_c_channel_dout,
        p_read1 => ctrl1_reg_c_channel_dout,
        burst_buffer11_address0 => VITIS_LOOP_254_6_proc_U0_burst_buffer11_address0,
        burst_buffer11_ce0 => VITIS_LOOP_254_6_proc_U0_burst_buffer11_ce0,
        burst_buffer11_q0 => burst_buffer1_t_q0,
        burst_buffer22_address0 => VITIS_LOOP_254_6_proc_U0_burst_buffer22_address0,
        burst_buffer22_ce0 => VITIS_LOOP_254_6_proc_U0_burst_buffer22_ce0,
        burst_buffer22_q0 => burst_buffer2_t_q0,
        col_ov_pix_out_V_din => VITIS_LOOP_254_6_proc_U0_col_ov_pix_out_V_din,
        col_ov_pix_out_V_full_n => col_ov_pix_out_V_full_n,
        col_ov_pix_out_V_write => VITIS_LOOP_254_6_proc_U0_col_ov_pix_out_V_write);

    ctrl1_reg_c_channel_U : component patch_gen_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => VITIS_LOOP_230_3_proc_U0_ap_return_0,
        if_full_n => ctrl1_reg_c_channel_full_n,
        if_write => ap_channel_done_ctrl1_reg_c_channel,
        if_dout => ctrl1_reg_c_channel_dout,
        if_empty_n => ctrl1_reg_c_channel_empty_n,
        if_read => VITIS_LOOP_254_6_proc_U0_ap_ready);

    ctrl2_reg_c_channel_U : component patch_gen_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => VITIS_LOOP_230_3_proc_U0_ap_return_1,
        if_full_n => ctrl2_reg_c_channel_full_n,
        if_write => ap_channel_done_ctrl2_reg_c_channel,
        if_dout => ctrl2_reg_c_channel_dout,
        if_empty_n => ctrl2_reg_c_channel_empty_n,
        if_read => VITIS_LOOP_254_6_proc_U0_ap_ready);





    ap_sync_reg_channel_write_burst_buffer1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_burst_buffer1 <= ap_const_logic_0;
            else
                if (((VITIS_LOOP_230_3_proc_U0_ap_done and VITIS_LOOP_230_3_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_burst_buffer1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_burst_buffer1 <= ap_sync_channel_write_burst_buffer1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_burst_buffer2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_burst_buffer2 <= ap_const_logic_0;
            else
                if (((VITIS_LOOP_230_3_proc_U0_ap_done and VITIS_LOOP_230_3_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_burst_buffer2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_burst_buffer2 <= ap_sync_channel_write_burst_buffer2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_ctrl1_reg_c_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_ctrl1_reg_c_channel <= ap_const_logic_0;
            else
                if (((VITIS_LOOP_230_3_proc_U0_ap_done and VITIS_LOOP_230_3_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_ctrl1_reg_c_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_ctrl1_reg_c_channel <= ap_sync_channel_write_ctrl1_reg_c_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_ctrl2_reg_c_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_ctrl2_reg_c_channel <= ap_const_logic_0;
            else
                if (((VITIS_LOOP_230_3_proc_U0_ap_done and VITIS_LOOP_230_3_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_ctrl2_reg_c_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_ctrl2_reg_c_channel <= ap_sync_channel_write_ctrl2_reg_c_channel;
                end if; 
            end if;
        end if;
    end process;

    VITIS_LOOP_230_3_proc_U0_ap_continue <= (ap_sync_channel_write_ctrl2_reg_c_channel and ap_sync_channel_write_ctrl1_reg_c_channel and ap_sync_channel_write_burst_buffer2 and ap_sync_channel_write_burst_buffer1);
    VITIS_LOOP_230_3_proc_U0_ap_start <= ap_start;
    VITIS_LOOP_230_3_proc_U0_burst_buffer11_full_n <= burst_buffer1_i_full_n;
    VITIS_LOOP_230_3_proc_U0_burst_buffer22_full_n <= burst_buffer2_i_full_n;
    VITIS_LOOP_254_6_proc_U0_ap_continue <= ap_continue;
    VITIS_LOOP_254_6_proc_U0_ap_start <= (ctrl2_reg_c_channel_empty_n and ctrl1_reg_c_channel_empty_n and burst_buffer2_t_empty_n and burst_buffer1_t_empty_n);
    ap_channel_done_burst_buffer1 <= ((ap_sync_reg_channel_write_burst_buffer1 xor ap_const_logic_1) and VITIS_LOOP_230_3_proc_U0_ap_done);
    ap_channel_done_burst_buffer2 <= ((ap_sync_reg_channel_write_burst_buffer2 xor ap_const_logic_1) and VITIS_LOOP_230_3_proc_U0_ap_done);
    ap_channel_done_ctrl1_reg_c_channel <= ((ap_sync_reg_channel_write_ctrl1_reg_c_channel xor ap_const_logic_1) and VITIS_LOOP_230_3_proc_U0_ap_done);
    ap_channel_done_ctrl2_reg_c_channel <= ((ap_sync_reg_channel_write_ctrl2_reg_c_channel xor ap_const_logic_1) and VITIS_LOOP_230_3_proc_U0_ap_done);
    ap_done <= VITIS_LOOP_254_6_proc_U0_ap_done;
    ap_idle <= ((ctrl2_reg_c_channel_empty_n xor ap_const_logic_1) and (ctrl1_reg_c_channel_empty_n xor ap_const_logic_1) and (burst_buffer2_t_empty_n xor ap_const_logic_1) and (burst_buffer1_t_empty_n xor ap_const_logic_1) and VITIS_LOOP_254_6_proc_U0_ap_idle and VITIS_LOOP_230_3_proc_U0_ap_idle);
    ap_ready <= VITIS_LOOP_230_3_proc_U0_ap_ready;
    ap_sync_channel_write_burst_buffer1 <= ((ap_channel_done_burst_buffer1 and VITIS_LOOP_230_3_proc_U0_burst_buffer11_full_n) or ap_sync_reg_channel_write_burst_buffer1);
    ap_sync_channel_write_burst_buffer2 <= ((ap_channel_done_burst_buffer2 and VITIS_LOOP_230_3_proc_U0_burst_buffer22_full_n) or ap_sync_reg_channel_write_burst_buffer2);
    ap_sync_channel_write_ctrl1_reg_c_channel <= ((ctrl1_reg_c_channel_full_n and ap_channel_done_ctrl1_reg_c_channel) or ap_sync_reg_channel_write_ctrl1_reg_c_channel);
    ap_sync_channel_write_ctrl2_reg_c_channel <= ((ctrl2_reg_c_channel_full_n and ap_channel_done_ctrl2_reg_c_channel) or ap_sync_reg_channel_write_ctrl2_reg_c_channel);
    col_ov_pix_out_V_din <= VITIS_LOOP_254_6_proc_U0_col_ov_pix_out_V_din;
    col_ov_pix_out_V_write <= VITIS_LOOP_254_6_proc_U0_col_ov_pix_out_V_write;
    in1_TREADY <= VITIS_LOOP_230_3_proc_U0_in1_TREADY;
    in2_TREADY <= VITIS_LOOP_230_3_proc_U0_in2_TREADY;
end behav;
