-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FFT_R_fft_stage_26 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    IN_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    IN_r_ce0 : OUT STD_LOGIC;
    IN_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    IN_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    IN_r_ce1 : OUT STD_LOGIC;
    IN_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    OUT_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    OUT_r_ce0 : OUT STD_LOGIC;
    OUT_r_we0 : OUT STD_LOGIC;
    OUT_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    OUT_r_ce1 : OUT STD_LOGIC;
    OUT_r_we1 : OUT STD_LOGIC;
    OUT_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of FFT_R_fft_stage_26 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal empty_fu_72_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_reg_108 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1069_fu_86_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_reg_112 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_18_fu_92_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_18_reg_116 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_i_i43_cast_reg_121 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_start : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_done : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_idle : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_ready : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_we0 : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_we1 : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_start : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_done : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_idle : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_ready : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_we0 : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_we1 : STD_LOGIC;
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call1 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call0 : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln_fu_76_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component FFT_R_fft_stage_26_Pipeline_SKIP_X IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        div_i_i43_cast : IN STD_LOGIC_VECTOR (6 downto 0);
        IN_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_r_ce0 : OUT STD_LOGIC;
        IN_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        IN_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_r_ce1 : OUT STD_LOGIC;
        IN_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        OUT_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_ce0 : OUT STD_LOGIC;
        OUT_r_we0 : OUT STD_LOGIC;
        OUT_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        OUT_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_ce1 : OUT STD_LOGIC;
        OUT_r_we1 : OUT STD_LOGIC;
        OUT_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FFT_R_fft_stage_26_Pipeline_VITIS_LOOP_40_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_partselect : IN STD_LOGIC_VECTOR (7 downto 0);
        IN_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_r_ce0 : OUT STD_LOGIC;
        IN_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        IN_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        IN_r_ce1 : OUT STD_LOGIC;
        IN_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        OUT_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_ce0 : OUT STD_LOGIC;
        OUT_r_we0 : OUT STD_LOGIC;
        OUT_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        OUT_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        OUT_r_ce1 : OUT STD_LOGIC;
        OUT_r_we1 : OUT STD_LOGIC;
        OUT_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_fft_stage_26_Pipeline_SKIP_X_fu_50 : component FFT_R_fft_stage_26_Pipeline_SKIP_X
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_start,
        ap_done => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_done,
        ap_idle => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_idle,
        ap_ready => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_ready,
        div_i_i43_cast => div_i_i43_cast_reg_121,
        IN_r_address0 => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_address0,
        IN_r_ce0 => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_ce0,
        IN_r_q0 => IN_r_q0,
        IN_r_address1 => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_address1,
        IN_r_ce1 => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_ce1,
        IN_r_q1 => IN_r_q1,
        OUT_r_address0 => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_address0,
        OUT_r_ce0 => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_ce0,
        OUT_r_we0 => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_we0,
        OUT_r_d0 => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_d0,
        OUT_r_address1 => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_address1,
        OUT_r_ce1 => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_ce1,
        OUT_r_we1 => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_we1,
        OUT_r_d1 => grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_d1);

    grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63 : component FFT_R_fft_stage_26_Pipeline_VITIS_LOOP_40_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_start,
        ap_done => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_done,
        ap_idle => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_idle,
        ap_ready => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_ready,
        p_partselect => empty_18_reg_116,
        IN_r_address0 => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_address0,
        IN_r_ce0 => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_ce0,
        IN_r_q0 => IN_r_q0,
        IN_r_address1 => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_address1,
        IN_r_ce1 => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_ce1,
        IN_r_q1 => IN_r_q1,
        OUT_r_address0 => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_address0,
        OUT_r_ce0 => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_ce0,
        OUT_r_we0 => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_we0,
        OUT_r_d0 => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_d0,
        OUT_r_address1 => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_address1,
        OUT_r_ce1 => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_ce1,
        OUT_r_we1 => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_we1,
        OUT_r_d1 => grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_d1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (icmp_ln1069_fu_86_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (icmp_ln1069_fu_86_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1069_fu_86_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                div_i_i43_cast_reg_121 <= p_read(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_18_reg_116 <= empty_18_fu_92_p1;
                empty_reg_108 <= empty_fu_72_p1;
                icmp_ln1069_reg_112 <= icmp_ln1069_fu_86_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    IN_r_address0_assign_proc : process(icmp_ln1069_reg_112, grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_address0, grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((icmp_ln1069_reg_112 = ap_const_lv1_1)) then 
                IN_r_address0 <= grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_address0;
            elsif ((icmp_ln1069_reg_112 = ap_const_lv1_0)) then 
                IN_r_address0 <= grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_address0;
            else 
                IN_r_address0 <= "XXXXXX";
            end if;
        else 
            IN_r_address0 <= "XXXXXX";
        end if; 
    end process;


    IN_r_address1_assign_proc : process(icmp_ln1069_reg_112, grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_address1, grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_address1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((icmp_ln1069_reg_112 = ap_const_lv1_1)) then 
                IN_r_address1 <= grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_address1;
            elsif ((icmp_ln1069_reg_112 = ap_const_lv1_0)) then 
                IN_r_address1 <= grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_address1;
            else 
                IN_r_address1 <= "XXXXXX";
            end if;
        else 
            IN_r_address1 <= "XXXXXX";
        end if; 
    end process;


    IN_r_ce0_assign_proc : process(icmp_ln1069_reg_112, grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_ce0, grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((icmp_ln1069_reg_112 = ap_const_lv1_1)) then 
                IN_r_ce0 <= grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_ce0;
            elsif ((icmp_ln1069_reg_112 = ap_const_lv1_0)) then 
                IN_r_ce0 <= grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_ce0;
            else 
                IN_r_ce0 <= ap_const_logic_0;
            end if;
        else 
            IN_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    IN_r_ce1_assign_proc : process(icmp_ln1069_reg_112, grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_ce1, grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_ce1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((icmp_ln1069_reg_112 = ap_const_lv1_1)) then 
                IN_r_ce1 <= grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_IN_r_ce1;
            elsif ((icmp_ln1069_reg_112 = ap_const_lv1_0)) then 
                IN_r_ce1 <= grp_fft_stage_26_Pipeline_SKIP_X_fu_50_IN_r_ce1;
            else 
                IN_r_ce1 <= ap_const_logic_0;
            end if;
        else 
            IN_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_address0_assign_proc : process(icmp_ln1069_reg_112, grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_address0, grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((icmp_ln1069_reg_112 = ap_const_lv1_1)) then 
                OUT_r_address0 <= grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_address0;
            elsif ((icmp_ln1069_reg_112 = ap_const_lv1_0)) then 
                OUT_r_address0 <= grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_address0;
            else 
                OUT_r_address0 <= "XXXXXX";
            end if;
        else 
            OUT_r_address0 <= "XXXXXX";
        end if; 
    end process;


    OUT_r_address1_assign_proc : process(icmp_ln1069_reg_112, grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_address1, grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_address1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((icmp_ln1069_reg_112 = ap_const_lv1_1)) then 
                OUT_r_address1 <= grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_address1;
            elsif ((icmp_ln1069_reg_112 = ap_const_lv1_0)) then 
                OUT_r_address1 <= grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_address1;
            else 
                OUT_r_address1 <= "XXXXXX";
            end if;
        else 
            OUT_r_address1 <= "XXXXXX";
        end if; 
    end process;


    OUT_r_ce0_assign_proc : process(icmp_ln1069_reg_112, grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_ce0, grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((icmp_ln1069_reg_112 = ap_const_lv1_1)) then 
                OUT_r_ce0 <= grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_ce0;
            elsif ((icmp_ln1069_reg_112 = ap_const_lv1_0)) then 
                OUT_r_ce0 <= grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_ce0;
            else 
                OUT_r_ce0 <= ap_const_logic_0;
            end if;
        else 
            OUT_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_ce1_assign_proc : process(icmp_ln1069_reg_112, grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_ce1, grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_ce1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((icmp_ln1069_reg_112 = ap_const_lv1_1)) then 
                OUT_r_ce1 <= grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_ce1;
            elsif ((icmp_ln1069_reg_112 = ap_const_lv1_0)) then 
                OUT_r_ce1 <= grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_ce1;
            else 
                OUT_r_ce1 <= ap_const_logic_0;
            end if;
        else 
            OUT_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_d0_assign_proc : process(icmp_ln1069_reg_112, grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_d0, grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_d0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((icmp_ln1069_reg_112 = ap_const_lv1_1)) then 
                OUT_r_d0 <= grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_d0;
            elsif ((icmp_ln1069_reg_112 = ap_const_lv1_0)) then 
                OUT_r_d0 <= grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_d0;
            else 
                OUT_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            OUT_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    OUT_r_d1_assign_proc : process(icmp_ln1069_reg_112, grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_d1, grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_d1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((icmp_ln1069_reg_112 = ap_const_lv1_1)) then 
                OUT_r_d1 <= grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_d1;
            elsif ((icmp_ln1069_reg_112 = ap_const_lv1_0)) then 
                OUT_r_d1 <= grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_d1;
            else 
                OUT_r_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            OUT_r_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    OUT_r_we0_assign_proc : process(icmp_ln1069_reg_112, grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_we0, grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((icmp_ln1069_reg_112 = ap_const_lv1_1)) then 
                OUT_r_we0 <= grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_we0;
            elsif ((icmp_ln1069_reg_112 = ap_const_lv1_0)) then 
                OUT_r_we0 <= grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_we0;
            else 
                OUT_r_we0 <= ap_const_logic_0;
            end if;
        else 
            OUT_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_we1_assign_proc : process(icmp_ln1069_reg_112, grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_we1, grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_we1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((icmp_ln1069_reg_112 = ap_const_lv1_1)) then 
                OUT_r_we1 <= grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_OUT_r_we1;
            elsif ((icmp_ln1069_reg_112 = ap_const_lv1_0)) then 
                OUT_r_we1 <= grp_fft_stage_26_Pipeline_SKIP_X_fu_50_OUT_r_we1;
            else 
                OUT_r_we1 <= ap_const_logic_0;
            end if;
        else 
            OUT_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call0_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(icmp_ln1069_reg_112, grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_done, grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_done)
    begin
                ap_block_state2_on_subcall_done <= (((grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_done = ap_const_logic_0) and (icmp_ln1069_reg_112 = ap_const_lv1_1)) or ((grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_done = ap_const_logic_0) and (icmp_ln1069_reg_112 = ap_const_lv1_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= empty_reg_108;
    empty_18_fu_92_p1 <= p_read(8 - 1 downto 0);
    empty_fu_72_p1 <= p_read(16 - 1 downto 0);
    grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_start <= grp_fft_stage_26_Pipeline_SKIP_X_fu_50_ap_start_reg;
    grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_start <= grp_fft_stage_26_Pipeline_VITIS_LOOP_40_1_fu_63_ap_start_reg;
    icmp_ln1069_fu_86_p2 <= "1" when (unsigned(trunc_ln_fu_76_p4) < unsigned(ap_const_lv8_3)) else "0";
    trunc_ln_fu_76_p4 <= p_read(15 downto 8);
end behav;
