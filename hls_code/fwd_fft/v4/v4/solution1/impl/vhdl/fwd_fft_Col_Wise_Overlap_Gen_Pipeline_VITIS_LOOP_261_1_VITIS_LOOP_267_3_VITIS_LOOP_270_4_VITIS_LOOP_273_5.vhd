-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fwd_fft_Col_Wise_Overlap_Gen_Pipeline_VITIS_LOOP_261_1_VITIS_LOOP_267_3_VITIS_LOOP_270_4_VITIS_LOOP_273_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    c_ifmap_patch_st_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    c_ifmap_patch_st_empty_n : IN STD_LOGIC;
    c_ifmap_patch_st_read : OUT STD_LOGIC;
    c_ifmap_col_op_st_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    c_ifmap_col_op_st_full_n : IN STD_LOGIC;
    c_ifmap_col_op_st_write : OUT STD_LOGIC;
    Col_Buffer_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    Col_Buffer_full_n : IN STD_LOGIC;
    Col_Buffer_write : OUT STD_LOGIC;
    Col_Buffer_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    Col_Buffer_empty_n : IN STD_LOGIC;
    Col_Buffer_read : OUT STD_LOGIC;
    sub_i_i : IN STD_LOGIC_VECTOR (8 downto 0);
    bound42 : IN STD_LOGIC_VECTOR (47 downto 0);
    bound16 : IN STD_LOGIC_VECTOR (31 downto 0);
    cmp_i_i_mid157 : IN STD_LOGIC_VECTOR (0 downto 0);
    trunc_ln : IN STD_LOGIC_VECTOR (7 downto 0);
    icmp_ln1057 : IN STD_LOGIC_VECTOR (0 downto 0);
    bound : IN STD_LOGIC_VECTOR (15 downto 0);
    icmp_ln1057_21 : IN STD_LOGIC_VECTOR (0 downto 0);
    bound4 : IN STD_LOGIC_VECTOR (23 downto 0);
    icmp_ln1057_22 : IN STD_LOGIC_VECTOR (0 downto 0);
    trunc_ln40 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_cast1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of fwd_fft_Col_Wise_Overlap_Gen_Pipeline_VITIS_LOOP_261_1_VITIS_LOOP_267_3_VITIS_LOOP_270_4_VITIS_LOOP_273_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv48_1 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv24_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal icmp_ln1057_20_reg_716 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln288_reg_720 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op112_write_state4 : BOOLEAN;
    signal select_ln259_8_reg_712 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op114_read_state4 : BOOLEAN;
    signal ap_predicate_op115_write_state4 : BOOLEAN;
    signal ap_predicate_op117_write_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln1057_15_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal c_ifmap_col_op_st_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal Col_Buffer_i_blk_n : STD_LOGIC;
    signal Col_Buffer_o_blk_n : STD_LOGIC;
    signal c_ifmap_patch_st_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1057_15_reg_679 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_16_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_16_reg_683 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln259_3_fu_301_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln259_3_reg_690 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln259_1_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln259_1_reg_697 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln259_7_fu_314_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln259_7_reg_703 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln259_8_fu_483_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_20_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln288_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter2_stage0 : STD_LOGIC;
    signal x_fu_100 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_16_fu_553_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal indvar_flatten_fu_104 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1057_7_fu_348_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pnx_fu_108 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1057_fu_512_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten11_fu_112 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln1057_8_fu_362_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal indvar_flatten37_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1057_9_fu_376_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten71_fu_120 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln1057_3_fu_264_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln1057_18_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_19_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln259_2_fu_289_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1057_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1057_1_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1057_fu_330_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1057_4_fu_356_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1057_5_fu_370_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pnx_cast_fu_413_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal cmp_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_17_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln259_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln259_fu_430_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln259_1_fu_441_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln259_4_fu_447_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal pnx_8_fu_471_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal cmp_mid1_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln259_2_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pnx_cast_mid1_fu_490_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal cmp_i_i_mid1_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln259_5_fu_459_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln259_6_fu_465_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln259_10_fu_506_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln259_3_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln259_4_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln259_11_fu_529_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln259_9_fu_499_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln288_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fwd_fft_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component fwd_fft_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten11_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten11_fu_112 <= ap_const_lv24_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1057_15_fu_259_p2 = ap_const_lv1_0))) then 
                    indvar_flatten11_fu_112 <= select_ln1057_8_fu_362_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten37_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten37_fu_116 <= ap_const_lv32_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1057_15_fu_259_p2 = ap_const_lv1_0))) then 
                    indvar_flatten37_fu_116 <= select_ln1057_9_fu_376_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten71_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten71_fu_120 <= ap_const_lv48_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1057_15_fu_259_p2 = ap_const_lv1_0))) then 
                    indvar_flatten71_fu_120 <= add_ln1057_3_fu_264_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_104 <= ap_const_lv16_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1057_15_fu_259_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_104 <= select_ln1057_7_fu_348_p3;
                end if;
            end if; 
        end if;
    end process;

    pnx_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pnx_fu_108 <= ap_const_lv8_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1057_15_reg_679 = ap_const_lv1_0))) then 
                    pnx_fu_108 <= select_ln1057_fu_512_p3;
                end if;
            end if; 
        end if;
    end process;

    x_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_fu_100 <= ap_const_lv8_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1057_15_reg_679 = ap_const_lv1_0))) then 
                    x_fu_100 <= x_16_fu_553_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                icmp_ln1057_15_reg_679 <= icmp_ln1057_15_fu_259_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1057_15_fu_259_p2 = ap_const_lv1_0))) then
                icmp_ln1057_16_reg_683 <= icmp_ln1057_16_fu_279_p2;
                or_ln259_1_reg_697 <= or_ln259_1_fu_308_p2;
                select_ln259_3_reg_690 <= select_ln259_3_fu_301_p3;
                select_ln259_7_reg_703 <= select_ln259_7_fu_314_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1057_15_reg_679 = ap_const_lv1_0))) then
                icmp_ln1057_20_reg_716 <= icmp_ln1057_20_fu_537_p2;
                select_ln259_8_reg_712 <= select_ln259_8_fu_483_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1057_20_fu_537_p2 = ap_const_lv1_0) and (icmp_ln1057_15_reg_679 = ap_const_lv1_0))) then
                or_ln288_reg_720 <= or_ln288_fu_547_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Col_Buffer_din <= c_ifmap_patch_st_dout;

    Col_Buffer_i_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, Col_Buffer_empty_n, ap_predicate_op114_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op114_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            Col_Buffer_i_blk_n <= Col_Buffer_empty_n;
        else 
            Col_Buffer_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    Col_Buffer_o_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, Col_Buffer_full_n, ap_predicate_op112_write_state4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op112_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            Col_Buffer_o_blk_n <= Col_Buffer_full_n;
        else 
            Col_Buffer_o_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    Col_Buffer_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op114_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op114_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            Col_Buffer_read <= ap_const_logic_1;
        else 
            Col_Buffer_read <= ap_const_logic_0;
        end if; 
    end process;


    Col_Buffer_write_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op112_write_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op112_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            Col_Buffer_write <= ap_const_logic_1;
        else 
            Col_Buffer_write <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1057_3_fu_264_p2 <= std_logic_vector(unsigned(indvar_flatten71_fu_120) + unsigned(ap_const_lv48_1));
    add_ln1057_4_fu_356_p2 <= std_logic_vector(unsigned(indvar_flatten11_fu_112) + unsigned(ap_const_lv24_1));
    add_ln1057_5_fu_370_p2 <= std_logic_vector(unsigned(indvar_flatten37_fu_116) + unsigned(ap_const_lv32_1));
    add_ln1057_fu_330_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_104) + unsigned(ap_const_lv16_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter3, c_ifmap_patch_st_empty_n, icmp_ln1057_20_reg_716, c_ifmap_col_op_st_full_n, Col_Buffer_full_n, ap_predicate_op112_write_state4, Col_Buffer_empty_n, ap_predicate_op114_read_state4, ap_predicate_op115_write_state4, ap_predicate_op117_write_state4)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((ap_predicate_op117_write_state4 = ap_const_boolean_1) and (c_ifmap_col_op_st_full_n = ap_const_logic_0)) or ((ap_predicate_op115_write_state4 = ap_const_boolean_1) and (c_ifmap_col_op_st_full_n = ap_const_logic_0)) or ((ap_predicate_op114_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = Col_Buffer_empty_n)) or ((ap_predicate_op112_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = Col_Buffer_full_n)) or ((c_ifmap_col_op_st_full_n = ap_const_logic_0) and (icmp_ln1057_20_reg_716 = ap_const_lv1_0)) or ((icmp_ln1057_20_reg_716 = ap_const_lv1_0) and (c_ifmap_patch_st_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter3, c_ifmap_patch_st_empty_n, icmp_ln1057_20_reg_716, c_ifmap_col_op_st_full_n, Col_Buffer_full_n, ap_predicate_op112_write_state4, Col_Buffer_empty_n, ap_predicate_op114_read_state4, ap_predicate_op115_write_state4, ap_predicate_op117_write_state4)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((ap_predicate_op117_write_state4 = ap_const_boolean_1) and (c_ifmap_col_op_st_full_n = ap_const_logic_0)) or ((ap_predicate_op115_write_state4 = ap_const_boolean_1) and (c_ifmap_col_op_st_full_n = ap_const_logic_0)) or ((ap_predicate_op114_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = Col_Buffer_empty_n)) or ((ap_predicate_op112_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = Col_Buffer_full_n)) or ((c_ifmap_col_op_st_full_n = ap_const_logic_0) and (icmp_ln1057_20_reg_716 = ap_const_lv1_0)) or ((icmp_ln1057_20_reg_716 = ap_const_lv1_0) and (c_ifmap_patch_st_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, c_ifmap_patch_st_empty_n, icmp_ln1057_20_reg_716, c_ifmap_col_op_st_full_n, Col_Buffer_full_n, ap_predicate_op112_write_state4, Col_Buffer_empty_n, ap_predicate_op114_read_state4, ap_predicate_op115_write_state4, ap_predicate_op117_write_state4)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((ap_predicate_op117_write_state4 = ap_const_boolean_1) and (c_ifmap_col_op_st_full_n = ap_const_logic_0)) or ((ap_predicate_op115_write_state4 = ap_const_boolean_1) and (c_ifmap_col_op_st_full_n = ap_const_logic_0)) or ((ap_predicate_op114_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = Col_Buffer_empty_n)) or ((ap_predicate_op112_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = Col_Buffer_full_n)) or ((c_ifmap_col_op_st_full_n = ap_const_logic_0) and (icmp_ln1057_20_reg_716 = ap_const_lv1_0)) or ((icmp_ln1057_20_reg_716 = ap_const_lv1_0) and (c_ifmap_patch_st_empty_n = ap_const_logic_0))));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter3_assign_proc : process(c_ifmap_patch_st_empty_n, icmp_ln1057_20_reg_716, c_ifmap_col_op_st_full_n, Col_Buffer_full_n, ap_predicate_op112_write_state4, Col_Buffer_empty_n, ap_predicate_op114_read_state4, ap_predicate_op115_write_state4, ap_predicate_op117_write_state4)
    begin
                ap_block_state4_pp0_stage0_iter3 <= (((ap_predicate_op117_write_state4 = ap_const_boolean_1) and (c_ifmap_col_op_st_full_n = ap_const_logic_0)) or ((ap_predicate_op115_write_state4 = ap_const_boolean_1) and (c_ifmap_col_op_st_full_n = ap_const_logic_0)) or ((ap_predicate_op114_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = Col_Buffer_empty_n)) or ((ap_predicate_op112_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = Col_Buffer_full_n)) or ((c_ifmap_col_op_st_full_n = ap_const_logic_0) and (icmp_ln1057_20_reg_716 = ap_const_lv1_0)) or ((icmp_ln1057_20_reg_716 = ap_const_lv1_0) and (c_ifmap_patch_st_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln1057_15_fu_259_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1057_15_fu_259_p2 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, icmp_ln1057_15_reg_679)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1057_15_reg_679 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_predicate_op112_write_state4_assign_proc : process(icmp_ln1057_20_reg_716, or_ln288_reg_720)
    begin
                ap_predicate_op112_write_state4 <= ((or_ln288_reg_720 = ap_const_lv1_0) and (icmp_ln1057_20_reg_716 = ap_const_lv1_0));
    end process;


    ap_predicate_op114_read_state4_assign_proc : process(icmp_ln1057_20_reg_716, select_ln259_8_reg_712)
    begin
                ap_predicate_op114_read_state4 <= ((select_ln259_8_reg_712 = ap_const_lv1_0) and (icmp_ln1057_20_reg_716 = ap_const_lv1_1));
    end process;


    ap_predicate_op115_write_state4_assign_proc : process(icmp_ln1057_20_reg_716, select_ln259_8_reg_712)
    begin
                ap_predicate_op115_write_state4 <= ((select_ln259_8_reg_712 = ap_const_lv1_0) and (icmp_ln1057_20_reg_716 = ap_const_lv1_1));
    end process;


    ap_predicate_op117_write_state4_assign_proc : process(icmp_ln1057_20_reg_716, select_ln259_8_reg_712)
    begin
                ap_predicate_op117_write_state4 <= ((select_ln259_8_reg_712 = ap_const_lv1_1) and (icmp_ln1057_20_reg_716 = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    c_ifmap_col_op_st_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1057_20_reg_716, c_ifmap_col_op_st_full_n, ap_predicate_op115_write_state4, ap_predicate_op117_write_state4, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op117_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op115_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1057_20_reg_716 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            c_ifmap_col_op_st_blk_n <= c_ifmap_col_op_st_full_n;
        else 
            c_ifmap_col_op_st_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    c_ifmap_col_op_st_din_assign_proc : process(ap_enable_reg_pp0_iter3, c_ifmap_patch_st_dout, icmp_ln1057_20_reg_716, Col_Buffer_dout, ap_predicate_op115_write_state4, ap_predicate_op117_write_state4, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((ap_predicate_op117_write_state4 = ap_const_boolean_1)) then 
                c_ifmap_col_op_st_din <= ap_const_lv64_0;
            elsif ((ap_predicate_op115_write_state4 = ap_const_boolean_1)) then 
                c_ifmap_col_op_st_din <= Col_Buffer_dout;
            elsif ((icmp_ln1057_20_reg_716 = ap_const_lv1_0)) then 
                c_ifmap_col_op_st_din <= c_ifmap_patch_st_dout;
            else 
                c_ifmap_col_op_st_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            c_ifmap_col_op_st_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c_ifmap_col_op_st_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1057_20_reg_716, ap_predicate_op115_write_state4, ap_predicate_op117_write_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op117_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op115_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1057_20_reg_716 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            c_ifmap_col_op_st_write <= ap_const_logic_1;
        else 
            c_ifmap_col_op_st_write <= ap_const_logic_0;
        end if; 
    end process;


    c_ifmap_patch_st_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, c_ifmap_patch_st_empty_n, icmp_ln1057_20_reg_716, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1057_20_reg_716 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            c_ifmap_patch_st_blk_n <= c_ifmap_patch_st_empty_n;
        else 
            c_ifmap_patch_st_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    c_ifmap_patch_st_read_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1057_20_reg_716, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1057_20_reg_716 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            c_ifmap_patch_st_read <= ap_const_logic_1;
        else 
            c_ifmap_patch_st_read <= ap_const_logic_0;
        end if; 
    end process;

    cmp_fu_407_p2 <= "1" when (pnx_fu_108 = ap_const_lv8_0) else "0";
    cmp_i_i_fu_417_p2 <= "1" when (pnx_cast_fu_413_p1 = sub_i_i) else "0";
    cmp_i_i_mid1_fu_494_p2 <= "1" when (pnx_cast_mid1_fu_490_p1 = sub_i_i) else "0";
    cmp_mid1_fu_477_p2 <= "1" when (pnx_8_fu_471_p2 = ap_const_lv8_0) else "0";
    icmp_ln1057_15_fu_259_p2 <= "1" when (indvar_flatten71_fu_120 = bound42) else "0";
    icmp_ln1057_16_fu_279_p2 <= "1" when (indvar_flatten37_fu_116 = bound16) else "0";
    icmp_ln1057_17_fu_436_p2 <= "1" when (x_fu_100 = trunc_ln) else "0";
    icmp_ln1057_18_fu_284_p2 <= "1" when (indvar_flatten_fu_104 = bound) else "0";
    icmp_ln1057_19_fu_296_p2 <= "1" when (indvar_flatten11_fu_112 = bound4) else "0";
    icmp_ln1057_20_fu_537_p2 <= "1" when (unsigned(select_ln259_11_fu_529_p3) < unsigned(trunc_ln40)) else "0";
    icmp_ln288_fu_542_p2 <= "1" when (unsigned(select_ln259_11_fu_529_p3) < unsigned(p_cast1)) else "0";
    or_ln1057_1_fu_342_p2 <= (or_ln1057_fu_336_p2 or icmp_ln1057_16_fu_279_p2);
    or_ln1057_fu_336_p2 <= (select_ln259_7_fu_314_p3 or select_ln259_3_fu_301_p3);
    or_ln259_1_fu_308_p2 <= (select_ln259_3_fu_301_p3 or icmp_ln1057_16_fu_279_p2);
    or_ln259_2_fu_454_p2 <= (select_ln259_3_reg_690 or or_ln259_fu_425_p2);
    or_ln259_3_fu_519_p2 <= (select_ln259_7_reg_703 or select_ln259_10_fu_506_p3);
    or_ln259_4_fu_524_p2 <= (or_ln259_3_fu_519_p2 or or_ln259_1_reg_697);
    or_ln259_fu_425_p2 <= (icmp_ln1057_16_reg_683 or cmp_fu_407_p2);
    or_ln288_fu_547_p2 <= (select_ln259_9_fu_499_p3 or icmp_ln288_fu_542_p2);
    pnx_8_fu_471_p2 <= std_logic_vector(unsigned(select_ln259_4_fu_447_p3) + unsigned(ap_const_lv8_1));
    pnx_cast_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pnx_fu_108),9));
    pnx_cast_mid1_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pnx_8_fu_471_p2),9));
    select_ln1057_7_fu_348_p3 <= 
        ap_const_lv16_1 when (or_ln1057_1_fu_342_p2(0) = '1') else 
        add_ln1057_fu_330_p2;
    select_ln1057_8_fu_362_p3 <= 
        ap_const_lv24_1 when (or_ln259_1_fu_308_p2(0) = '1') else 
        add_ln1057_4_fu_356_p2;
    select_ln1057_9_fu_376_p3 <= 
        ap_const_lv32_1 when (icmp_ln1057_16_fu_279_p2(0) = '1') else 
        add_ln1057_5_fu_370_p2;
    select_ln1057_fu_512_p3 <= 
        pnx_8_fu_471_p2 when (select_ln259_7_reg_703(0) = '1') else 
        select_ln259_4_fu_447_p3;
    select_ln259_10_fu_506_p3 <= 
        icmp_ln1057 when (select_ln259_7_reg_703(0) = '1') else 
        select_ln259_6_fu_465_p3;
    select_ln259_11_fu_529_p3 <= 
        ap_const_lv8_0 when (or_ln259_4_fu_524_p2(0) = '1') else 
        x_fu_100;
    select_ln259_1_fu_441_p3 <= 
        icmp_ln1057 when (icmp_ln1057_16_reg_683(0) = '1') else 
        icmp_ln1057_17_fu_436_p2;
    select_ln259_2_fu_289_p3 <= 
        icmp_ln1057_21 when (icmp_ln1057_16_fu_279_p2(0) = '1') else 
        icmp_ln1057_18_fu_284_p2;
    select_ln259_3_fu_301_p3 <= 
        icmp_ln1057_22 when (icmp_ln1057_16_fu_279_p2(0) = '1') else 
        icmp_ln1057_19_fu_296_p2;
    select_ln259_4_fu_447_p3 <= 
        ap_const_lv8_0 when (or_ln259_1_reg_697(0) = '1') else 
        pnx_fu_108;
    select_ln259_5_fu_459_p3 <= 
        cmp_i_i_mid157 when (select_ln259_3_reg_690(0) = '1') else 
        select_ln259_fu_430_p3;
    select_ln259_6_fu_465_p3 <= 
        icmp_ln1057 when (select_ln259_3_reg_690(0) = '1') else 
        select_ln259_1_fu_441_p3;
    select_ln259_7_fu_314_p3 <= 
        icmp_ln1057_21 when (select_ln259_3_fu_301_p3(0) = '1') else 
        select_ln259_2_fu_289_p3;
    select_ln259_8_fu_483_p3 <= 
        cmp_mid1_fu_477_p2 when (select_ln259_7_reg_703(0) = '1') else 
        or_ln259_2_fu_454_p2;
    select_ln259_9_fu_499_p3 <= 
        cmp_i_i_mid1_fu_494_p2 when (select_ln259_7_reg_703(0) = '1') else 
        select_ln259_5_fu_459_p3;
    select_ln259_fu_430_p3 <= 
        cmp_i_i_mid157 when (icmp_ln1057_16_reg_683(0) = '1') else 
        cmp_i_i_fu_417_p2;
    x_16_fu_553_p2 <= std_logic_vector(unsigned(select_ln259_11_fu_529_p3) + unsigned(ap_const_lv8_1));
end behav;
