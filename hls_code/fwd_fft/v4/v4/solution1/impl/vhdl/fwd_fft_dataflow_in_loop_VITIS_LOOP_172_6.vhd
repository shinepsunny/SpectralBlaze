-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fwd_fft_dataflow_in_loop_VITIS_LOOP_172_6 is
port (
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    c_ifmap_col_op_st_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    c_ifmap_col_op_st_empty_n : IN STD_LOGIC;
    c_ifmap_col_op_st_read : OUT STD_LOGIC;
    c_fft_row_op_st_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_fft_row_op_st_full_n : IN STD_LOGIC;
    c_fft_row_op_st_write : OUT STD_LOGIC;
    pny : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
    y_6 : IN STD_LOGIC_VECTOR (31 downto 0);
    Row_Buffer_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    Row_Buffer_full_n : IN STD_LOGIC;
    Row_Buffer_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_read_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    pny_ap_vld : IN STD_LOGIC;
    p_read1_ap_vld : IN STD_LOGIC;
    y_6_ap_vld : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of fwd_fft_dataflow_in_loop_VITIS_LOOP_172_6 is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal VITIS_LOOP_176_7_proc_U0_ap_start : STD_LOGIC;
    signal VITIS_LOOP_176_7_proc_U0_ap_done : STD_LOGIC;
    signal VITIS_LOOP_176_7_proc_U0_ap_continue : STD_LOGIC;
    signal VITIS_LOOP_176_7_proc_U0_ap_idle : STD_LOGIC;
    signal VITIS_LOOP_176_7_proc_U0_ap_ready : STD_LOGIC;
    signal VITIS_LOOP_176_7_proc_U0_c_ifmap_col_op_st_read : STD_LOGIC;
    signal VITIS_LOOP_176_7_proc_U0_p_read : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal VITIS_LOOP_184_8_proc_U0_ap_start : STD_LOGIC;
    signal VITIS_LOOP_184_8_proc_U0_ap_done : STD_LOGIC;
    signal VITIS_LOOP_184_8_proc_U0_ap_continue : STD_LOGIC;
    signal VITIS_LOOP_184_8_proc_U0_ap_idle : STD_LOGIC;
    signal VITIS_LOOP_184_8_proc_U0_ap_ready : STD_LOGIC;
    signal VITIS_LOOP_184_8_proc_U0_c_fft_row_op_st_din : STD_LOGIC_VECTOR (31 downto 0);
    signal VITIS_LOOP_184_8_proc_U0_c_fft_row_op_st_write : STD_LOGIC;
    signal VITIS_LOOP_184_8_proc_U0_Row_Buffer_din : STD_LOGIC_VECTOR (31 downto 0);
    signal VITIS_LOOP_184_8_proc_U0_Row_Buffer_write : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_VITIS_LOOP_176_7_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_VITIS_LOOP_176_7_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_VITIS_LOOP_184_8_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_VITIS_LOOP_184_8_proc_U0_ap_ready : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fwd_fft_VITIS_LOOP_176_7_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_ifmap_col_op_st_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        c_ifmap_col_op_st_empty_n : IN STD_LOGIC;
        c_ifmap_col_op_st_read : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component fwd_fft_VITIS_LOOP_184_8_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        c_fft_row_op_st_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_fft_row_op_st_full_n : IN STD_LOGIC;
        c_fft_row_op_st_write : OUT STD_LOGIC;
        pny : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
        y_6 : IN STD_LOGIC_VECTOR (31 downto 0);
        Row_Buffer_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        Row_Buffer_full_n : IN STD_LOGIC;
        Row_Buffer_write : OUT STD_LOGIC );
    end component;



begin
    VITIS_LOOP_176_7_proc_U0 : component fwd_fft_VITIS_LOOP_176_7_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => VITIS_LOOP_176_7_proc_U0_ap_start,
        ap_done => VITIS_LOOP_176_7_proc_U0_ap_done,
        ap_continue => VITIS_LOOP_176_7_proc_U0_ap_continue,
        ap_idle => VITIS_LOOP_176_7_proc_U0_ap_idle,
        ap_ready => VITIS_LOOP_176_7_proc_U0_ap_ready,
        c_ifmap_col_op_st_dout => c_ifmap_col_op_st_dout,
        c_ifmap_col_op_st_empty_n => c_ifmap_col_op_st_empty_n,
        c_ifmap_col_op_st_read => VITIS_LOOP_176_7_proc_U0_c_ifmap_col_op_st_read,
        p_read => VITIS_LOOP_176_7_proc_U0_p_read);

    VITIS_LOOP_184_8_proc_U0 : component fwd_fft_VITIS_LOOP_184_8_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => VITIS_LOOP_184_8_proc_U0_ap_start,
        ap_done => VITIS_LOOP_184_8_proc_U0_ap_done,
        ap_continue => VITIS_LOOP_184_8_proc_U0_ap_continue,
        ap_idle => VITIS_LOOP_184_8_proc_U0_ap_idle,
        ap_ready => VITIS_LOOP_184_8_proc_U0_ap_ready,
        p_read => p_read,
        c_fft_row_op_st_din => VITIS_LOOP_184_8_proc_U0_c_fft_row_op_st_din,
        c_fft_row_op_st_full_n => c_fft_row_op_st_full_n,
        c_fft_row_op_st_write => VITIS_LOOP_184_8_proc_U0_c_fft_row_op_st_write,
        pny => pny,
        p_read1 => p_read1,
        y_6 => y_6,
        Row_Buffer_din => VITIS_LOOP_184_8_proc_U0_Row_Buffer_din,
        Row_Buffer_full_n => Row_Buffer_full_n,
        Row_Buffer_write => VITIS_LOOP_184_8_proc_U0_Row_Buffer_write);





    ap_sync_reg_VITIS_LOOP_176_7_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_VITIS_LOOP_176_7_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_VITIS_LOOP_176_7_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_VITIS_LOOP_176_7_proc_U0_ap_ready <= ap_sync_VITIS_LOOP_176_7_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_VITIS_LOOP_184_8_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_VITIS_LOOP_184_8_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_VITIS_LOOP_184_8_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_VITIS_LOOP_184_8_proc_U0_ap_ready <= ap_sync_VITIS_LOOP_184_8_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    Row_Buffer_din <= VITIS_LOOP_184_8_proc_U0_Row_Buffer_din;
    Row_Buffer_write <= VITIS_LOOP_184_8_proc_U0_Row_Buffer_write;
    VITIS_LOOP_176_7_proc_U0_ap_continue <= ap_sync_continue;
    VITIS_LOOP_176_7_proc_U0_ap_start <= ((ap_sync_reg_VITIS_LOOP_176_7_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    
    VITIS_LOOP_176_7_proc_U0_p_read_proc : process(p_read)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable VITIS_LOOP_176_7_proc_U0_p_read_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_8(5 - 1 downto 0);
        v0_cpy := p_read;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_8(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            for VITIS_LOOP_176_7_proc_U0_p_read_i in 0 to 32-1 loop
                v0_cpy(VITIS_LOOP_176_7_proc_U0_p_read_i) := p_read(32-1-VITIS_LOOP_176_7_proc_U0_p_read_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        VITIS_LOOP_176_7_proc_U0_p_read <= resvalue(8-1 downto 0);
    end process;

    VITIS_LOOP_184_8_proc_U0_ap_continue <= ap_sync_continue;
    VITIS_LOOP_184_8_proc_U0_ap_start <= ((ap_sync_reg_VITIS_LOOP_184_8_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    ap_done <= ap_sync_done;
    ap_idle <= (VITIS_LOOP_184_8_proc_U0_ap_idle and VITIS_LOOP_176_7_proc_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_VITIS_LOOP_176_7_proc_U0_ap_ready <= (ap_sync_reg_VITIS_LOOP_176_7_proc_U0_ap_ready or VITIS_LOOP_176_7_proc_U0_ap_ready);
    ap_sync_VITIS_LOOP_184_8_proc_U0_ap_ready <= (ap_sync_reg_VITIS_LOOP_184_8_proc_U0_ap_ready or VITIS_LOOP_184_8_proc_U0_ap_ready);
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (VITIS_LOOP_184_8_proc_U0_ap_done and VITIS_LOOP_176_7_proc_U0_ap_done);
    ap_sync_ready <= (ap_sync_VITIS_LOOP_184_8_proc_U0_ap_ready and ap_sync_VITIS_LOOP_176_7_proc_U0_ap_ready);
    c_fft_row_op_st_din <= VITIS_LOOP_184_8_proc_U0_c_fft_row_op_st_din;
    c_fft_row_op_st_write <= VITIS_LOOP_184_8_proc_U0_c_fft_row_op_st_write;
    c_ifmap_col_op_st_read <= VITIS_LOOP_176_7_proc_U0_c_ifmap_col_op_st_read;
end behav;
