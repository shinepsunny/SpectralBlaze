-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fwd_fft_Row_Wise_Synch is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    c_fft_row_op_st_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    c_fft_row_op_st_empty_n : IN STD_LOGIC;
    c_fft_row_op_st_read : OUT STD_LOGIC;
    c_row_op_st_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_row_op_st_full_n : IN STD_LOGIC;
    c_row_op_st_write : OUT STD_LOGIC;
    ctrl1_reg_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl1_reg_empty_n : IN STD_LOGIC;
    ctrl1_reg_read : OUT STD_LOGIC;
    ctrl2_reg_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl2_reg_empty_n : IN STD_LOGIC;
    ctrl2_reg_read : OUT STD_LOGIC;
    layer1_reg_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    layer1_reg_empty_n : IN STD_LOGIC;
    layer1_reg_read : OUT STD_LOGIC;
    ctrl1_reg_c18_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctrl1_reg_c18_full_n : IN STD_LOGIC;
    ctrl1_reg_c18_write : OUT STD_LOGIC;
    ctrl2_reg_c23_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctrl2_reg_c23_full_n : IN STD_LOGIC;
    ctrl2_reg_c23_write : OUT STD_LOGIC;
    layer1_reg_c28_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer1_reg_c28_full_n : IN STD_LOGIC;
    layer1_reg_c28_write : OUT STD_LOGIC );
end;


architecture behav of fwd_fft_Row_Wise_Synch is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal ctrl1_reg_blk_n : STD_LOGIC;
    signal ctrl2_reg_blk_n : STD_LOGIC;
    signal layer1_reg_blk_n : STD_LOGIC;
    signal ctrl1_reg_c18_blk_n : STD_LOGIC;
    signal ctrl2_reg_c23_blk_n : STD_LOGIC;
    signal layer1_reg_c28_blk_n : STD_LOGIC;
    signal empty_168_fu_175_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_168_reg_519 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_169_fu_179_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_169_reg_524 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_reg_532 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_170_fu_193_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_170_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_550 : STD_LOGIC_VECTOR (7 downto 0);
    signal bound13_fu_230_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound13_reg_555 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sub_ln319_fu_260_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln319_reg_570 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal sub_i_i_fu_285_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_i_i_reg_585 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal bound_fu_297_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_reg_591 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_276_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal bound5_reg_596 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_479_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound21_reg_601 : STD_LOGIC_VECTOR (31 downto 0);
    signal cmp_i_i_mid130_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i_mid130_reg_606 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_reg_611 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_reg_616 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal cmp_i_i_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i_reg_621 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_7_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_7_reg_629 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1057_6_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_fu_357_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln317_reg_635 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln317_2_fu_370_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_2_reg_640 : STD_LOGIC_VECTOR (0 downto 0);
    signal pny_5_fu_377_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal pny_5_reg_647 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln317_3_fu_446_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_3_reg_654 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal select_ln317_4_fu_462_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_4_reg_659 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_start : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_done : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_idle : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_ready : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_Row_Buffer_read : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_c_row_op_st_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_c_row_op_st_write : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_start : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_done : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_idle : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_ready : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_c_fft_row_op_st_read : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_c_row_op_st_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_c_row_op_st_write : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_Row_Buffer_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_Row_Buffer_write : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal Row_Buffer_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal Row_Buffer_empty_n : STD_LOGIC;
    signal Row_Buffer_read : STD_LOGIC;
    signal grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm_state10 : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal Row_Buffer_full_n : STD_LOGIC;
    signal Row_Buffer_write : STD_LOGIC;
    signal pnx_fu_90 : STD_LOGIC_VECTOR (7 downto 0);
    signal pnx_3_fu_395_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal pny_fu_94 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1057_fu_469_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten16_fu_98 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1057_3_fu_409_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar_flatten34_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1057_1_fu_340_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound13_fu_230_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cast11_fu_227_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound13_fu_230_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_171_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal smax2_fu_250_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln319_fu_256_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_cast_fu_243_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal cast3_cast_fu_266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_276_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_276_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctrl2_reg_load_cast_cast_fu_282_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal bound_fu_297_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bound_fu_297_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pny_cast_fu_326_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1057_8_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln325_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln325_fu_383_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1057_fu_403_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cmp_mid1_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln317_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pny_cast_mid1_fu_454_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal cmp_i_i_mid1_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_1_fu_436_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_479_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_479_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal bound_fu_297_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_fu_297_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_276_p00 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_276_p10 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_479_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_479_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component fwd_fft_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Row_Buffer_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        Row_Buffer_empty_n : IN STD_LOGIC;
        Row_Buffer_read : OUT STD_LOGIC;
        c_row_op_st_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_row_op_st_full_n : IN STD_LOGIC;
        c_row_op_st_write : OUT STD_LOGIC;
        bound : IN STD_LOGIC_VECTOR (15 downto 0);
        select_ln317_3 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fwd_fft_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_fft_row_op_st_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        c_fft_row_op_st_empty_n : IN STD_LOGIC;
        c_fft_row_op_st_read : OUT STD_LOGIC;
        c_row_op_st_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_row_op_st_full_n : IN STD_LOGIC;
        c_row_op_st_write : OUT STD_LOGIC;
        Row_Buffer_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        Row_Buffer_full_n : IN STD_LOGIC;
        Row_Buffer_write : OUT STD_LOGIC;
        i_op_assign_9 : IN STD_LOGIC_VECTOR (7 downto 0);
        bound5 : IN STD_LOGIC_VECTOR (39 downto 0);
        empty : IN STD_LOGIC_VECTOR (7 downto 0);
        ctrl1_reg_load_cast1 : IN STD_LOGIC_VECTOR (7 downto 0);
        select_ln317_4 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fwd_fft_mul_8ns_8ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component fwd_fft_mul_32ns_8ns_40_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component fwd_fft_mul_mul_16ns_16ns_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fwd_fft_fifo_w32_d2560_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152 : component fwd_fft_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_start,
        ap_done => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_done,
        ap_idle => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_idle,
        ap_ready => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_ready,
        Row_Buffer_dout => Row_Buffer_dout,
        Row_Buffer_empty_n => Row_Buffer_empty_n,
        Row_Buffer_read => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_Row_Buffer_read,
        c_row_op_st_din => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_c_row_op_st_din,
        c_row_op_st_full_n => c_row_op_st_full_n,
        c_row_op_st_write => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_c_row_op_st_write,
        bound => bound_reg_591,
        select_ln317_3 => select_ln317_3_reg_654);

    grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161 : component fwd_fft_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_start,
        ap_done => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_done,
        ap_idle => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_idle,
        ap_ready => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_ready,
        c_fft_row_op_st_dout => c_fft_row_op_st_dout,
        c_fft_row_op_st_empty_n => c_fft_row_op_st_empty_n,
        c_fft_row_op_st_read => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_c_fft_row_op_st_read,
        c_row_op_st_din => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_c_row_op_st_din,
        c_row_op_st_full_n => c_row_op_st_full_n,
        c_row_op_st_write => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_c_row_op_st_write,
        Row_Buffer_din => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_Row_Buffer_din,
        Row_Buffer_full_n => Row_Buffer_full_n,
        Row_Buffer_write => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_Row_Buffer_write,
        i_op_assign_9 => y_reg_532,
        bound5 => bound5_reg_596,
        empty => tmp_s_reg_550,
        ctrl1_reg_load_cast1 => empty_170_reg_541,
        select_ln317_4 => select_ln317_4_reg_659);

    mul_8ns_8ns_16_1_1_U242 : component fwd_fft_mul_8ns_8ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => bound13_fu_230_p0,
        din1 => bound13_fu_230_p1,
        dout => bound13_fu_230_p2);

    mul_32ns_8ns_40_2_1_U243 : component fwd_fft_mul_32ns_8ns_40_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_276_p0,
        din1 => grp_fu_276_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_276_p2);

    mul_8ns_8ns_16_1_1_U244 : component fwd_fft_mul_8ns_8ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => bound_fu_297_p0,
        din1 => bound_fu_297_p1,
        dout => bound_fu_297_p2);

    mul_mul_16ns_16ns_32_4_1_U245 : component fwd_fft_mul_mul_16ns_16ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_479_p0,
        din1 => grp_fu_479_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_479_p2);

    Row_Buffer_fifo_U : component fwd_fft_fifo_w32_d2560_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_Row_Buffer_din,
        if_full_n => Row_Buffer_full_n,
        if_write => Row_Buffer_write,
        if_dout => Row_Buffer_dout,
        if_empty_n => Row_Buffer_empty_n,
        if_read => Row_Buffer_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_6_fu_335_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_ready = ap_const_logic_1)) then 
                    grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state10) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_ready = ap_const_logic_1)) then 
                    grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten16_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((layer1_reg_c28_full_n = ap_const_logic_0) or (ctrl2_reg_c23_full_n = ap_const_logic_0) or (ctrl1_reg_c18_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten16_fu_98 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_6_fu_335_p2 = ap_const_lv1_0))) then 
                indvar_flatten16_fu_98 <= select_ln1057_3_fu_409_p3;
            end if; 
        end if;
    end process;

    indvar_flatten34_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((layer1_reg_c28_full_n = ap_const_logic_0) or (ctrl2_reg_c23_full_n = ap_const_logic_0) or (ctrl1_reg_c18_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten34_fu_102 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_6_fu_335_p2 = ap_const_lv1_0))) then 
                indvar_flatten34_fu_102 <= add_ln1057_1_fu_340_p2;
            end if; 
        end if;
    end process;

    pnx_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((layer1_reg_c28_full_n = ap_const_logic_0) or (ctrl2_reg_c23_full_n = ap_const_logic_0) or (ctrl1_reg_c18_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                pnx_fu_90 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_6_fu_335_p2 = ap_const_lv1_0))) then 
                pnx_fu_90 <= pnx_3_fu_395_p3;
            end if; 
        end if;
    end process;

    pny_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((layer1_reg_c28_full_n = ap_const_logic_0) or (ctrl2_reg_c23_full_n = ap_const_logic_0) or (ctrl1_reg_c18_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                pny_fu_94 <= ap_const_lv8_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                pny_fu_94 <= select_ln1057_fu_469_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                bound13_reg_555 <= bound13_fu_230_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                bound21_reg_601 <= grp_fu_479_p2;
                bound5_reg_596 <= grp_fu_276_p2;
                bound_reg_591 <= bound_fu_297_p2;
                cmp_i_i_mid130_reg_606 <= cmp_i_i_mid130_fu_303_p2;
                icmp_ln1057_reg_611 <= icmp_ln1057_fu_309_p2;
                sub_i_i_reg_585 <= sub_i_i_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                cmp_i_i_reg_621 <= cmp_i_i_fu_330_p2;
                cmp_reg_616 <= cmp_fu_320_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_168_reg_519 <= empty_168_fu_175_p1;
                empty_169_reg_524 <= empty_169_fu_179_p1;
                empty_170_reg_541 <= empty_170_fu_193_p1;
                tmp_s_reg_550 <= ctrl1_reg_dout(31 downto 24);
                y_reg_532 <= ctrl1_reg_dout(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_6_fu_335_p2 = ap_const_lv1_0))) then
                icmp_ln1057_7_reg_629 <= icmp_ln1057_7_fu_352_p2;
                pny_5_reg_647 <= pny_5_fu_377_p2;
                select_ln317_2_reg_640 <= select_ln317_2_fu_370_p3;
                select_ln317_reg_635 <= select_ln317_fu_357_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                select_ln317_3_reg_654 <= select_ln317_3_fu_446_p3;
                select_ln317_4_reg_659 <= select_ln317_4_fu_462_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                sub_ln319_reg_570 <= sub_ln319_fu_260_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c18_full_n, ctrl2_reg_c23_full_n, layer1_reg_c28_full_n, ap_CS_fsm_state6, icmp_ln1057_6_fu_335_p2, grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_done, grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_done, ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((layer1_reg_c28_full_n = ap_const_logic_0) or (ctrl2_reg_c23_full_n = ap_const_logic_0) or (ctrl1_reg_c18_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_6_fu_335_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    Row_Buffer_read_assign_proc : process(grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_Row_Buffer_read, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            Row_Buffer_read <= grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_Row_Buffer_read;
        else 
            Row_Buffer_read <= ap_const_logic_0;
        end if; 
    end process;


    Row_Buffer_write_assign_proc : process(grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_Row_Buffer_write, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            Row_Buffer_write <= grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_Row_Buffer_write;
        else 
            Row_Buffer_write <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1057_1_fu_340_p2 <= std_logic_vector(unsigned(indvar_flatten34_fu_102) + unsigned(ap_const_lv32_1));
    add_ln1057_fu_403_p2 <= std_logic_vector(unsigned(indvar_flatten16_fu_98) + unsigned(ap_const_lv16_1));
    add_ln325_fu_383_p2 <= std_logic_vector(unsigned(pnx_fu_90) + unsigned(ap_const_lv8_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state10 <= ap_NS_fsm(9);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_done)
    begin
        if ((grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c18_full_n, ctrl2_reg_c23_full_n, layer1_reg_c28_full_n)
    begin
        if (((layer1_reg_c28_full_n = ap_const_logic_0) or (ctrl2_reg_c23_full_n = ap_const_logic_0) or (ctrl1_reg_c18_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_done)
    begin
        if ((grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c18_full_n, ctrl2_reg_c23_full_n, layer1_reg_c28_full_n)
    begin
                ap_block_state1 <= ((layer1_reg_c28_full_n = ap_const_logic_0) or (ctrl2_reg_c23_full_n = ap_const_logic_0) or (ctrl1_reg_c18_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6, icmp_ln1057_6_fu_335_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_6_fu_335_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    bound13_fu_230_p0 <= cast11_fu_227_p1(8 - 1 downto 0);
    bound13_fu_230_p1 <= cast11_fu_227_p1(8 - 1 downto 0);
    bound_fu_297_p0 <= bound_fu_297_p00(8 - 1 downto 0);
    bound_fu_297_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_reg_532),16));
    bound_fu_297_p1 <= bound_fu_297_p10(8 - 1 downto 0);
    bound_fu_297_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_170_reg_541),16));

    c_fft_row_op_st_read_assign_proc : process(grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_c_fft_row_op_st_read, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            c_fft_row_op_st_read <= grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_c_fft_row_op_st_read;
        else 
            c_fft_row_op_st_read <= ap_const_logic_0;
        end if; 
    end process;


    c_row_op_st_din_assign_proc : process(grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_c_row_op_st_din, grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_c_row_op_st_din, ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            c_row_op_st_din <= grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_c_row_op_st_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            c_row_op_st_din <= grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_c_row_op_st_din;
        else 
            c_row_op_st_din <= grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_c_row_op_st_din;
        end if; 
    end process;


    c_row_op_st_write_assign_proc : process(grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_c_row_op_st_write, grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_c_row_op_st_write, ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            c_row_op_st_write <= grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_c_row_op_st_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            c_row_op_st_write <= grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_c_row_op_st_write;
        else 
            c_row_op_st_write <= ap_const_logic_0;
        end if; 
    end process;

    cast11_fu_227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_169_reg_524),16));
        cast3_cast_fu_266_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln319_reg_570),32));

    cmp_fu_320_p2 <= "1" when (pny_fu_94 = ap_const_lv8_0) else "0";
    cmp_i_i_fu_330_p2 <= "1" when (pny_cast_fu_326_p1 = sub_i_i_reg_585) else "0";
    cmp_i_i_mid130_fu_303_p2 <= "1" when (sub_i_i_fu_285_p2 = ap_const_lv9_0) else "0";
    cmp_i_i_mid1_fu_457_p2 <= "1" when (pny_cast_mid1_fu_454_p1 = sub_i_i_reg_585) else "0";
    cmp_mid1_fu_441_p2 <= "1" when (pny_5_reg_647 = ap_const_lv8_0) else "0";

    ctrl1_reg_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_blk_n <= ctrl1_reg_empty_n;
        else 
            ctrl1_reg_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl1_reg_c18_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_c18_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_c18_blk_n <= ctrl1_reg_c18_full_n;
        else 
            ctrl1_reg_c18_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ctrl1_reg_c18_din <= ctrl1_reg_dout;

    ctrl1_reg_c18_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c18_full_n, ctrl2_reg_c23_full_n, layer1_reg_c28_full_n)
    begin
        if ((not(((layer1_reg_c28_full_n = ap_const_logic_0) or (ctrl2_reg_c23_full_n = ap_const_logic_0) or (ctrl1_reg_c18_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_c18_write <= ap_const_logic_1;
        else 
            ctrl1_reg_c18_write <= ap_const_logic_0;
        end if; 
    end process;


    ctrl1_reg_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c18_full_n, ctrl2_reg_c23_full_n, layer1_reg_c28_full_n)
    begin
        if ((not(((layer1_reg_c28_full_n = ap_const_logic_0) or (ctrl2_reg_c23_full_n = ap_const_logic_0) or (ctrl1_reg_c18_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl1_reg_read <= ap_const_logic_1;
        else 
            ctrl1_reg_read <= ap_const_logic_0;
        end if; 
    end process;


    ctrl2_reg_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl2_reg_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl2_reg_blk_n <= ctrl2_reg_empty_n;
        else 
            ctrl2_reg_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl2_reg_c23_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl2_reg_c23_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl2_reg_c23_blk_n <= ctrl2_reg_c23_full_n;
        else 
            ctrl2_reg_c23_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ctrl2_reg_c23_din <= ctrl2_reg_dout;

    ctrl2_reg_c23_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c18_full_n, ctrl2_reg_c23_full_n, layer1_reg_c28_full_n)
    begin
        if ((not(((layer1_reg_c28_full_n = ap_const_logic_0) or (ctrl2_reg_c23_full_n = ap_const_logic_0) or (ctrl1_reg_c18_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl2_reg_c23_write <= ap_const_logic_1;
        else 
            ctrl2_reg_c23_write <= ap_const_logic_0;
        end if; 
    end process;

    ctrl2_reg_load_cast_cast_fu_282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_169_reg_524),9));

    ctrl2_reg_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c18_full_n, ctrl2_reg_c23_full_n, layer1_reg_c28_full_n)
    begin
        if ((not(((layer1_reg_c28_full_n = ap_const_logic_0) or (ctrl2_reg_c23_full_n = ap_const_logic_0) or (ctrl1_reg_c18_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ctrl2_reg_read <= ap_const_logic_1;
        else 
            ctrl2_reg_read <= ap_const_logic_0;
        end if; 
    end process;

    empty_168_fu_175_p1 <= layer1_reg_dout(16 - 1 downto 0);
    empty_169_fu_179_p1 <= ctrl2_reg_dout(8 - 1 downto 0);
    empty_170_fu_193_p1 <= ctrl1_reg_dout(8 - 1 downto 0);
    empty_171_fu_246_p2 <= "1" when (unsigned(y_reg_532) > unsigned(empty_170_reg_541)) else "0";
    grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_start <= grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_328_4_VITIS_LOOP_331_5_fu_152_ap_start_reg;
    grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_start <= grp_Row_Wise_Synch_Pipeline_VITIS_LOOP_340_6_VITIS_LOOP_343_7_fu_161_ap_start_reg;
    grp_fu_276_p0 <= grp_fu_276_p00(32 - 1 downto 0);
    grp_fu_276_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cast3_cast_fu_266_p1),40));
    grp_fu_276_p1 <= grp_fu_276_p10(8 - 1 downto 0);
    grp_fu_276_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_170_reg_541),40));
    grp_fu_479_p0 <= grp_fu_479_p00(16 - 1 downto 0);
    grp_fu_479_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_168_reg_519),32));
    grp_fu_479_p1 <= grp_fu_479_p10(16 - 1 downto 0);
    grp_fu_479_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound13_fu_230_p2),32));
    icmp_ln1057_6_fu_335_p2 <= "1" when (indvar_flatten34_fu_102 = bound21_reg_601) else "0";
    icmp_ln1057_7_fu_352_p2 <= "1" when (indvar_flatten16_fu_98 = bound13_reg_555) else "0";
    icmp_ln1057_8_fu_365_p2 <= "1" when (pnx_fu_90 = empty_169_reg_524) else "0";
    icmp_ln1057_fu_309_p2 <= "1" when (empty_169_reg_524 = ap_const_lv8_0) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6, icmp_ln1057_6_fu_335_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_6_fu_335_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    layer1_reg_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer1_reg_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer1_reg_blk_n <= layer1_reg_empty_n;
        else 
            layer1_reg_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer1_reg_c28_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer1_reg_c28_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer1_reg_c28_blk_n <= layer1_reg_c28_full_n;
        else 
            layer1_reg_c28_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer1_reg_c28_din <= layer1_reg_dout;

    layer1_reg_c28_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c18_full_n, ctrl2_reg_c23_full_n, layer1_reg_c28_full_n)
    begin
        if ((not(((layer1_reg_c28_full_n = ap_const_logic_0) or (ctrl2_reg_c23_full_n = ap_const_logic_0) or (ctrl1_reg_c18_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer1_reg_c28_write <= ap_const_logic_1;
        else 
            layer1_reg_c28_write <= ap_const_logic_0;
        end if; 
    end process;


    layer1_reg_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ctrl1_reg_empty_n, ctrl2_reg_empty_n, layer1_reg_empty_n, ctrl1_reg_c18_full_n, ctrl2_reg_c23_full_n, layer1_reg_c28_full_n)
    begin
        if ((not(((layer1_reg_c28_full_n = ap_const_logic_0) or (ctrl2_reg_c23_full_n = ap_const_logic_0) or (ctrl1_reg_c18_full_n = ap_const_logic_0) or (layer1_reg_empty_n = ap_const_logic_0) or (ctrl2_reg_empty_n = ap_const_logic_0) or (ctrl1_reg_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer1_reg_read <= ap_const_logic_1;
        else 
            layer1_reg_read <= ap_const_logic_0;
        end if; 
    end process;

    or_ln317_fu_432_p2 <= (icmp_ln1057_7_reg_629 or cmp_reg_616);
    or_ln325_fu_389_p2 <= (select_ln317_2_fu_370_p3 or icmp_ln1057_7_fu_352_p2);
    pnx_3_fu_395_p3 <= 
        ap_const_lv8_1 when (or_ln325_fu_389_p2(0) = '1') else 
        add_ln325_fu_383_p2;
    pny_5_fu_377_p2 <= std_logic_vector(unsigned(select_ln317_fu_357_p3) + unsigned(ap_const_lv8_1));
    pny_cast_fu_326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pny_fu_94),9));
    pny_cast_mid1_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pny_5_reg_647),9));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln1057_3_fu_409_p3 <= 
        ap_const_lv16_1 when (icmp_ln1057_7_fu_352_p2(0) = '1') else 
        add_ln1057_fu_403_p2;
    select_ln1057_fu_469_p3 <= 
        pny_5_reg_647 when (select_ln317_2_reg_640(0) = '1') else 
        select_ln317_reg_635;
    select_ln317_1_fu_436_p3 <= 
        cmp_i_i_mid130_reg_606 when (icmp_ln1057_7_reg_629(0) = '1') else 
        cmp_i_i_reg_621;
    select_ln317_2_fu_370_p3 <= 
        icmp_ln1057_reg_611 when (icmp_ln1057_7_fu_352_p2(0) = '1') else 
        icmp_ln1057_8_fu_365_p2;
    select_ln317_3_fu_446_p3 <= 
        cmp_mid1_fu_441_p2 when (select_ln317_2_reg_640(0) = '1') else 
        or_ln317_fu_432_p2;
    select_ln317_4_fu_462_p3 <= 
        cmp_i_i_mid1_fu_457_p2 when (select_ln317_2_reg_640(0) = '1') else 
        select_ln317_1_fu_436_p3;
    select_ln317_fu_357_p3 <= 
        ap_const_lv8_0 when (icmp_ln1057_7_fu_352_p2(0) = '1') else 
        pny_fu_94;
    smax2_fu_250_p3 <= 
        y_reg_532 when (empty_171_fu_246_p2(0) = '1') else 
        empty_170_reg_541;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_i_i_fu_285_p2 <= std_logic_vector(unsigned(ctrl2_reg_load_cast_cast_fu_282_p1) + unsigned(ap_const_lv9_1FF));
    sub_ln319_fu_260_p2 <= std_logic_vector(unsigned(zext_ln319_fu_256_p1) - unsigned(tmp_cast_fu_243_p1));
    tmp_cast_fu_243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_reg_532),9));
    zext_ln319_fu_256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(smax2_fu_250_p3),9));
end behav;
