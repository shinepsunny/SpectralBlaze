// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fwd_fft_fft_stage_0_018 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        IN_r_address0,
        IN_r_ce0,
        IN_r_q0,
        IN_r_address1,
        IN_r_ce1,
        IN_r_q1,
        OUT_r_address0,
        OUT_r_ce0,
        OUT_r_we0,
        OUT_r_d0,
        OUT_r_address1,
        OUT_r_ce1,
        OUT_r_we1,
        OUT_r_d1,
        p_read,
        ap_return
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [5:0] IN_r_address0;
output   IN_r_ce0;
input  [31:0] IN_r_q0;
output  [5:0] IN_r_address1;
output   IN_r_ce1;
input  [31:0] IN_r_q1;
output  [5:0] OUT_r_address0;
output   OUT_r_ce0;
output   OUT_r_we0;
output  [31:0] OUT_r_d0;
output  [5:0] OUT_r_address1;
output   OUT_r_ce1;
output   OUT_r_we1;
output  [31:0] OUT_r_d1;
input  [31:0] p_read;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] IN_r_address0;
reg IN_r_ce0;
reg[5:0] IN_r_address1;
reg IN_r_ce1;
reg[5:0] OUT_r_address0;
reg OUT_r_ce0;
reg OUT_r_we0;
reg[31:0] OUT_r_d0;
reg[5:0] OUT_r_address1;
reg OUT_r_ce1;
reg OUT_r_we1;
reg[31:0] OUT_r_d1;
reg[31:0] ap_return;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    w_M_real40_ce0;
wire   [15:0] w_M_real40_q0;
reg    w_M_imag29_ce0;
wire   [15:0] w_M_imag29_q0;
wire   [0:0] icmp_ln1069_fu_98_p2;
reg   [0:0] icmp_ln1069_reg_124;
wire   [7:0] empty_fu_104_p1;
reg   [7:0] empty_reg_128;
reg   [6:0] trunc_ln5_reg_133;
wire    ap_CS_fsm_state2;
reg   [15:0] w_M_real40_load_reg_138;
reg   [15:0] w_M_imag29_load_reg_143;
wire    grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_start;
wire    grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_done;
wire    grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_idle;
wire    grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_ready;
wire   [5:0] grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_IN_r_address0;
wire    grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_IN_r_ce0;
wire   [5:0] grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_IN_r_address1;
wire    grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_IN_r_ce1;
wire   [5:0] grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_address0;
wire    grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_ce0;
wire    grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_we0;
wire   [31:0] grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_d0;
wire   [5:0] grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_address1;
wire    grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_ce1;
wire    grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_we1;
wire   [31:0] grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_d1;
wire    grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_start;
wire    grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_done;
wire    grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_idle;
wire    grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_ready;
wire   [5:0] grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_IN_r_address0;
wire    grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_IN_r_ce0;
wire   [5:0] grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_IN_r_address1;
wire    grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_IN_r_ce1;
wire   [5:0] grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_address0;
wire    grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_ce0;
wire    grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_we0;
wire   [31:0] grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_d0;
wire   [5:0] grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_address1;
wire    grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_ce1;
wire    grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_we1;
wire   [31:0] grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_d1;
reg    grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_start_reg;
reg    ap_block_state1_ignore_call0;
wire    ap_CS_fsm_state4;
reg    grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_start_reg;
wire    ap_CS_fsm_state3;
reg    ap_block_state1;
wire   [7:0] trunc_ln_fu_88_p4;
reg   [31:0] ap_return_preg;
reg    ap_block_state3_on_subcall_done;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_start_reg = 1'b0;
#0 grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_start_reg = 1'b0;
#0 ap_return_preg = 32'd0;
end

fwd_fft_fft_stage_0_018_w_M_real40 #(
    .DataWidth( 16 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
w_M_real40_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(8'd0),
    .ce0(w_M_real40_ce0),
    .q0(w_M_real40_q0)
);

fwd_fft_fft_stage_0_018_w_M_imag29 #(
    .DataWidth( 16 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
w_M_imag29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(8'd0),
    .ce0(w_M_imag29_ce0),
    .q0(w_M_imag29_q0)
);

fwd_fft_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1 grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_start),
    .ap_done(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_done),
    .ap_idle(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_idle),
    .ap_ready(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_ready),
    .zext_ln40(empty_reg_128),
    .IN_r_address0(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_IN_r_address0),
    .IN_r_ce0(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_IN_r_ce0),
    .IN_r_q0(IN_r_q0),
    .IN_r_address1(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_IN_r_address1),
    .IN_r_ce1(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_IN_r_ce1),
    .IN_r_q1(IN_r_q1),
    .OUT_r_address0(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_address0),
    .OUT_r_ce0(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_ce0),
    .OUT_r_we0(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_we0),
    .OUT_r_d0(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_d0),
    .OUT_r_address1(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_address1),
    .OUT_r_ce1(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_ce1),
    .OUT_r_we1(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_we1),
    .OUT_r_d1(grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_d1)
);

fwd_fft_fft_stage_0_018_Pipeline_SKIP_X grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_start),
    .ap_done(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_done),
    .ap_idle(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_idle),
    .ap_ready(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_ready),
    .trunc_ln18(trunc_ln5_reg_133),
    .IN_r_address0(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_IN_r_address0),
    .IN_r_ce0(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_IN_r_ce0),
    .IN_r_q0(IN_r_q0),
    .IN_r_address1(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_IN_r_address1),
    .IN_r_ce1(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_IN_r_ce1),
    .IN_r_q1(IN_r_q1),
    .w1_M_real(w_M_real40_load_reg_138),
    .w1_M_imag(w_M_imag29_load_reg_143),
    .OUT_r_address0(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_address0),
    .OUT_r_ce0(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_ce0),
    .OUT_r_we0(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_we0),
    .OUT_r_d0(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_d0),
    .OUT_r_address1(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_address1),
    .OUT_r_ce1(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_ce1),
    .OUT_r_we1(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_we1),
    .OUT_r_d1(grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
            ap_return_preg <= p_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_start_reg <= 1'b1;
        end else if ((grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_ready == 1'b1)) begin
            grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (icmp_ln1069_fu_98_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_start_reg <= 1'b1;
        end else if ((grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_ready == 1'b1)) begin
            grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_128 <= empty_fu_104_p1;
        icmp_ln1069_reg_124 <= icmp_ln1069_fu_98_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        trunc_ln5_reg_133 <= {{p_read[7:1]}};
        w_M_imag29_load_reg_143 <= w_M_imag29_q0;
        w_M_real40_load_reg_138 <= w_M_real40_q0;
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_124 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        IN_r_address0 = grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_IN_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        IN_r_address0 = grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_IN_r_address0;
    end else begin
        IN_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_124 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        IN_r_address1 = grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_IN_r_address1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        IN_r_address1 = grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_IN_r_address1;
    end else begin
        IN_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_124 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        IN_r_ce0 = grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_IN_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        IN_r_ce0 = grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_IN_r_ce0;
    end else begin
        IN_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_124 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        IN_r_ce1 = grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_IN_r_ce1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        IN_r_ce1 = grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_IN_r_ce1;
    end else begin
        IN_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_124 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        OUT_r_address0 = grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        OUT_r_address0 = grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_address0;
    end else begin
        OUT_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_124 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        OUT_r_address1 = grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_address1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        OUT_r_address1 = grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_address1;
    end else begin
        OUT_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_124 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        OUT_r_ce0 = grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        OUT_r_ce0 = grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_ce0;
    end else begin
        OUT_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_124 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        OUT_r_ce1 = grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_ce1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        OUT_r_ce1 = grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_ce1;
    end else begin
        OUT_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_124 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        OUT_r_d0 = grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        OUT_r_d0 = grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_d0;
    end else begin
        OUT_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_124 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        OUT_r_d1 = grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_d1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        OUT_r_d1 = grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_d1;
    end else begin
        OUT_r_d1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_124 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        OUT_r_we0 = grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        OUT_r_we0 = grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_we0;
    end else begin
        OUT_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_124 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        OUT_r_we1 = grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_OUT_r_we1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        OUT_r_we1 = grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_OUT_r_we1;
    end else begin
        OUT_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state3_on_subcall_done)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
        ap_return = p_read;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        w_M_imag29_ce0 = 1'b1;
    end else begin
        w_M_imag29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        w_M_real40_ce0 = 1'b1;
    end else begin
        w_M_real40_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (icmp_ln1069_fu_98_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (icmp_ln1069_fu_98_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3_on_subcall_done = ((icmp_ln1069_reg_124 == 1'd0) & (grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_done == 1'b0));
end

assign empty_fu_104_p1 = p_read[7:0];

assign grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_start = grp_fft_stage_0_018_Pipeline_SKIP_X_fu_75_ap_start_reg;

assign grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_start = grp_fft_stage_0_018_Pipeline_VITIS_LOOP_40_1_fu_66_ap_start_reg;

assign icmp_ln1069_fu_98_p2 = ((trunc_ln_fu_88_p4 == 8'd0) ? 1'b1 : 1'b0);

assign trunc_ln_fu_88_p4 = {{p_read[15:8]}};

endmodule //fwd_fft_fft_stage_0_018
