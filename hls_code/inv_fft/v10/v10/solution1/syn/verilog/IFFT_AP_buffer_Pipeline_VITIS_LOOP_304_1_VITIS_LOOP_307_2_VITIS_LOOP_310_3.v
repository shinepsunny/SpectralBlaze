// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module IFFT_AP_buffer_Pipeline_VITIS_LOOP_304_1_VITIS_LOOP_307_2_VITIS_LOOP_310_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_st_dout,
        out_st_num_data_valid,
        out_st_fifo_cap,
        out_st_empty_n,
        out_st_read,
        bound4,
        buffer1_0_address0,
        buffer1_0_ce0,
        buffer1_0_we0,
        buffer1_0_d0,
        buffer1_1_address0,
        buffer1_1_ce0,
        buffer1_1_we0,
        buffer1_1_d0,
        bound,
        div_cast,
        conv_i_i72,
        icmp_ln1027
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] out_st_dout;
input  [1:0] out_st_num_data_valid;
input  [1:0] out_st_fifo_cap;
input   out_st_empty_n;
output   out_st_read;
input  [46:0] bound4;
output  [12:0] buffer1_0_address0;
output   buffer1_0_ce0;
output   buffer1_0_we0;
output  [15:0] buffer1_0_d0;
output  [12:0] buffer1_1_address0;
output   buffer1_1_ce0;
output   buffer1_1_we0;
output  [15:0] buffer1_1_d0;
input  [38:0] bound;
input  [7:0] div_cast;
input  [7:0] conv_i_i72;
input  [0:0] icmp_ln1027;

reg ap_idle;
reg out_st_read;
reg[12:0] buffer1_0_address0;
reg buffer1_0_ce0;
reg buffer1_0_we0;
reg[15:0] buffer1_0_d0;
reg[12:0] buffer1_1_address0;
reg buffer1_1_ce0;
reg buffer1_1_we0;
reg[15:0] buffer1_1_d0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln1027_11_reg_546;
reg   [0:0] icmp_ln1027_11_reg_546_pp0_iter2_reg;
reg    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1027_11_fu_231_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    out_st_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] conv_i_i72_cast_fu_188_p1;
reg   [31:0] conv_i_i72_cast_reg_531;
wire   [15:0] div_cast_cast_fu_192_p1;
reg   [15:0] div_cast_cast_reg_536;
wire   [39:0] bound_cast_fu_196_p1;
reg   [39:0] bound_cast_reg_541;
wire   [0:0] icmp_ln307_fu_251_p2;
reg   [0:0] icmp_ln307_reg_550;
reg   [0:0] icmp_ln307_reg_550_pp0_iter2_reg;
wire   [7:0] select_ln302_2_fu_256_p3;
reg   [7:0] select_ln302_2_reg_558;
wire   [13:0] trunc_ln302_1_fu_311_p1;
reg   [13:0] trunc_ln302_1_reg_563;
wire   [0:0] trunc_ln302_2_fu_315_p1;
reg   [0:0] trunc_ln302_2_reg_568;
reg   [0:0] trunc_ln302_2_reg_568_pp0_iter3_reg;
wire   [0:0] select_ln302_3_fu_324_p3;
reg   [0:0] select_ln302_3_reg_572;
wire   [31:0] select_ln307_fu_330_p3;
reg   [31:0] select_ln307_reg_578;
wire   [13:0] trunc_ln1495_fu_338_p1;
reg   [13:0] trunc_ln1495_reg_583;
wire   [15:0] trunc_ln313_fu_395_p1;
reg   [15:0] trunc_ln313_reg_588;
reg   [15:0] trunc_ln313_2_reg_593;
wire   [12:0] add_ln314_fu_423_p2;
reg   [12:0] add_ln314_reg_598;
wire   [12:0] add_ln316_fu_445_p2;
reg   [12:0] add_ln316_reg_603;
reg    ap_condition_exit_pp0_iter3_stage0;
wire   [63:0] zext_ln314_fu_476_p1;
wire   [63:0] zext_ln316_fu_481_p1;
reg   [31:0] rhs_V_fu_90;
wire   [31:0] x_fu_451_p2;
reg   [31:0] ap_sig_allocacmp_rhs_V_load;
wire    ap_loop_init;
reg   [7:0] y_fu_94;
wire   [7:0] select_ln307_1_fu_388_p3;
reg   [39:0] indvar_flatten_fu_98;
wire   [39:0] select_ln307_2_fu_270_p3;
reg   [7:0] pn_x_fu_102;
reg   [46:0] indvar_flatten13_fu_106;
wire   [46:0] add_ln1027_fu_236_p2;
wire   [15:0] bitcast_ln313_fu_466_p1;
wire   [15:0] bitcast_ln313_1_fu_471_p1;
wire   [7:0] pn_x_2_fu_245_p2;
wire   [39:0] add_ln307_1_fu_264_p2;
wire   [7:0] mul_ln302_fu_306_p0;
wire   [7:0] mul_ln302_fu_306_p1;
wire   [15:0] mul_ln302_fu_306_p2;
wire   [0:0] icmp_ln1027_12_fu_319_p2;
wire   [31:0] select_ln302_1_fu_296_p3;
wire   [7:0] select_ln302_fu_349_p3;
wire   [7:0] add_ln307_fu_356_p2;
wire   [5:0] trunc_ln302_fu_345_p1;
wire   [5:0] select_ln302_4_fu_366_p3;
wire   [5:0] empty_fu_362_p1;
wire   [5:0] select_ln314_fu_373_p3;
wire   [13:0] ret_V_4_fu_409_p2;
wire   [12:0] tmp_s_fu_380_p3;
wire   [12:0] lshr_ln_fu_413_p4;
wire   [13:0] ret_V_fu_429_p2;
wire   [12:0] lshr_ln2_fu_435_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [15:0] mul_ln302_fu_306_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

IFFT_AP_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U369(
    .din0(mul_ln302_fu_306_p0),
    .din1(mul_ln302_fu_306_p1),
    .dout(mul_ln302_fu_306_p2)
);

IFFT_AP_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter3_stage0)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten13_fu_106 <= 47'd0;
        end else if (((icmp_ln1027_11_fu_231_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten13_fu_106 <= add_ln1027_fu_236_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_98 <= 40'd0;
        end else if (((icmp_ln1027_11_fu_231_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_98 <= select_ln307_2_fu_270_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pn_x_fu_102 <= 8'd0;
        end else if (((icmp_ln1027_11_fu_231_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pn_x_fu_102 <= select_ln302_2_fu_256_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            rhs_V_fu_90 <= 32'd0;
        end else if (((icmp_ln1027_11_reg_546_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            rhs_V_fu_90 <= x_fu_451_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            y_fu_94 <= 8'd0;
        end else if (((icmp_ln1027_11_reg_546_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            y_fu_94 <= select_ln307_1_fu_388_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_11_reg_546_pp0_iter2_reg == 1'd0))) begin
        add_ln314_reg_598 <= add_ln314_fu_423_p2;
        add_ln316_reg_603 <= add_ln316_fu_445_p2;
        trunc_ln313_2_reg_593 <= {{out_st_dout[47:32]}};
        trunc_ln313_reg_588 <= trunc_ln313_fu_395_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        bound_cast_reg_541[38 : 0] <= bound_cast_fu_196_p1[38 : 0];
        conv_i_i72_cast_reg_531[7 : 0] <= conv_i_i72_cast_fu_188_p1[7 : 0];
        div_cast_cast_reg_536[7 : 0] <= div_cast_cast_fu_192_p1[7 : 0];
        icmp_ln1027_11_reg_546 <= icmp_ln1027_11_fu_231_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln1027_11_reg_546_pp0_iter2_reg <= icmp_ln1027_11_reg_546;
        icmp_ln307_reg_550_pp0_iter2_reg <= icmp_ln307_reg_550;
        trunc_ln302_2_reg_568_pp0_iter3_reg <= trunc_ln302_2_reg_568;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_11_fu_231_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln307_reg_550 <= icmp_ln307_fu_251_p2;
        select_ln302_2_reg_558 <= select_ln302_2_fu_256_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_11_reg_546 == 1'd0))) begin
        select_ln302_3_reg_572 <= select_ln302_3_fu_324_p3;
        select_ln307_reg_578 <= select_ln307_fu_330_p3;
        trunc_ln1495_reg_583 <= trunc_ln1495_fu_338_p1;
        trunc_ln302_1_reg_563 <= trunc_ln302_1_fu_311_p1;
        trunc_ln302_2_reg_568 <= trunc_ln302_2_fu_315_p1;
    end
end

always @ (*) begin
    if (((icmp_ln1027_11_fu_231_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1027_11_reg_546_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_11_reg_546_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_rhs_V_load = x_fu_451_p2;
    end else begin
        ap_sig_allocacmp_rhs_V_load = rhs_V_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if ((trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd1)) begin
            buffer1_0_address0 = zext_ln316_fu_481_p1;
        end else if ((trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd0)) begin
            buffer1_0_address0 = zext_ln314_fu_476_p1;
        end else begin
            buffer1_0_address0 = 'bx;
        end
    end else begin
        buffer1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd0)))) begin
        buffer1_0_ce0 = 1'b1;
    end else begin
        buffer1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if ((trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd1)) begin
            buffer1_0_d0 = bitcast_ln313_1_fu_471_p1;
        end else if ((trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd0)) begin
            buffer1_0_d0 = bitcast_ln313_fu_466_p1;
        end else begin
            buffer1_0_d0 = 'bx;
        end
    end else begin
        buffer1_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd0)))) begin
        buffer1_0_we0 = 1'b1;
    end else begin
        buffer1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if ((trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd0)) begin
            buffer1_1_address0 = zext_ln316_fu_481_p1;
        end else if ((trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd1)) begin
            buffer1_1_address0 = zext_ln314_fu_476_p1;
        end else begin
            buffer1_1_address0 = 'bx;
        end
    end else begin
        buffer1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd0)))) begin
        buffer1_1_ce0 = 1'b1;
    end else begin
        buffer1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if ((trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd0)) begin
            buffer1_1_d0 = bitcast_ln313_1_fu_471_p1;
        end else if ((trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd1)) begin
            buffer1_1_d0 = bitcast_ln313_fu_466_p1;
        end else begin
            buffer1_1_d0 = 'bx;
        end
    end else begin
        buffer1_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln302_2_reg_568_pp0_iter3_reg == 1'd0)))) begin
        buffer1_1_we0 = 1'b1;
    end else begin
        buffer1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_11_reg_546_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_st_blk_n = out_st_empty_n;
    end else begin
        out_st_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_11_reg_546_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_st_read = 1'b1;
    end else begin
        out_st_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1027_fu_236_p2 = (indvar_flatten13_fu_106 + 47'd1);

assign add_ln307_1_fu_264_p2 = (indvar_flatten_fu_98 + 40'd1);

assign add_ln307_fu_356_p2 = (select_ln302_fu_349_p3 + 8'd1);

assign add_ln314_fu_423_p2 = (tmp_s_fu_380_p3 + lshr_ln_fu_413_p4);

assign add_ln316_fu_445_p2 = (tmp_s_fu_380_p3 + lshr_ln2_fu_435_p4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln1027_11_reg_546_pp0_iter2_reg == 1'd0) & (out_st_empty_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln1027_11_reg_546_pp0_iter2_reg == 1'd0) & (out_st_empty_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((icmp_ln1027_11_reg_546_pp0_iter2_reg == 1'd0) & (out_st_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign bitcast_ln313_1_fu_471_p1 = trunc_ln313_2_reg_593;

assign bitcast_ln313_fu_466_p1 = trunc_ln313_reg_588;

assign bound_cast_fu_196_p1 = bound;

assign conv_i_i72_cast_fu_188_p1 = conv_i_i72;

assign div_cast_cast_fu_192_p1 = div_cast;

assign empty_fu_362_p1 = add_ln307_fu_356_p2[5:0];

assign icmp_ln1027_11_fu_231_p2 = ((indvar_flatten13_fu_106 == bound4) ? 1'b1 : 1'b0);

assign icmp_ln1027_12_fu_319_p2 = ((ap_sig_allocacmp_rhs_V_load < conv_i_i72_cast_reg_531) ? 1'b1 : 1'b0);

assign icmp_ln307_fu_251_p2 = ((indvar_flatten_fu_98 == bound_cast_reg_541) ? 1'b1 : 1'b0);

assign lshr_ln2_fu_435_p4 = {{ret_V_fu_429_p2[13:1]}};

assign lshr_ln_fu_413_p4 = {{ret_V_4_fu_409_p2[13:1]}};

assign mul_ln302_fu_306_p0 = mul_ln302_fu_306_p00;

assign mul_ln302_fu_306_p00 = select_ln302_2_reg_558;

assign mul_ln302_fu_306_p1 = div_cast_cast_reg_536;

assign pn_x_2_fu_245_p2 = (pn_x_fu_102 + 8'd1);

assign ret_V_4_fu_409_p2 = (trunc_ln1495_reg_583 + trunc_ln302_1_reg_563);

assign ret_V_fu_429_p2 = (ret_V_4_fu_409_p2 + 14'd1);

assign select_ln302_1_fu_296_p3 = ((icmp_ln307_reg_550[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_rhs_V_load);

assign select_ln302_2_fu_256_p3 = ((icmp_ln307_fu_251_p2[0:0] == 1'b1) ? pn_x_2_fu_245_p2 : pn_x_fu_102);

assign select_ln302_3_fu_324_p3 = ((icmp_ln307_reg_550[0:0] == 1'b1) ? icmp_ln1027 : icmp_ln1027_12_fu_319_p2);

assign select_ln302_4_fu_366_p3 = ((icmp_ln307_reg_550_pp0_iter2_reg[0:0] == 1'b1) ? 6'd0 : trunc_ln302_fu_345_p1);

assign select_ln302_fu_349_p3 = ((icmp_ln307_reg_550_pp0_iter2_reg[0:0] == 1'b1) ? 8'd0 : y_fu_94);

assign select_ln307_1_fu_388_p3 = ((select_ln302_3_reg_572[0:0] == 1'b1) ? select_ln302_fu_349_p3 : add_ln307_fu_356_p2);

assign select_ln307_2_fu_270_p3 = ((icmp_ln307_fu_251_p2[0:0] == 1'b1) ? 40'd1 : add_ln307_1_fu_264_p2);

assign select_ln307_fu_330_p3 = ((select_ln302_3_fu_324_p3[0:0] == 1'b1) ? select_ln302_1_fu_296_p3 : 32'd0);

assign select_ln314_fu_373_p3 = ((select_ln302_3_reg_572[0:0] == 1'b1) ? select_ln302_4_fu_366_p3 : empty_fu_362_p1);

assign tmp_s_fu_380_p3 = {{select_ln314_fu_373_p3}, {7'd0}};

assign trunc_ln1495_fu_338_p1 = select_ln307_fu_330_p3[13:0];

assign trunc_ln302_1_fu_311_p1 = mul_ln302_fu_306_p2[13:0];

assign trunc_ln302_2_fu_315_p1 = mul_ln302_fu_306_p2[0:0];

assign trunc_ln302_fu_345_p1 = y_fu_94[5:0];

assign trunc_ln313_fu_395_p1 = out_st_dout[15:0];

assign x_fu_451_p2 = (select_ln307_reg_578 + 32'd2);

assign zext_ln314_fu_476_p1 = add_ln314_reg_598;

assign zext_ln316_fu_481_p1 = add_ln316_reg_603;

always @ (posedge ap_clk) begin
    conv_i_i72_cast_reg_531[31:8] <= 24'b000000000000000000000000;
    div_cast_cast_reg_536[15:8] <= 8'b00000000;
    bound_cast_reg_541[39] <= 1'b0;
end

endmodule //IFFT_AP_buffer_Pipeline_VITIS_LOOP_304_1_VITIS_LOOP_307_2_VITIS_LOOP_310_3
