// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module IFFT_AP_push_out (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        O_address0,
        O_ce0,
        O_q0,
        O_address1,
        O_ce1,
        O_q1,
        out_st_din,
        out_st_num_data_valid,
        out_st_fifo_cap,
        out_st_full_n,
        out_st_write,
        p_read,
        p_read1
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [11:0] O_address0;
output   O_ce0;
input  [31:0] O_q0;
output  [11:0] O_address1;
output   O_ce1;
input  [31:0] O_q1;
output  [63:0] out_st_din;
input  [1:0] out_st_num_data_valid;
input  [1:0] out_st_fifo_cap;
input   out_st_full_n;
output   out_st_write;
input  [31:0] p_read;
input  [31:0] p_read1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_st_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] p_cast_reg_124;
reg   [7:0] p_cast4_reg_129;
wire   [7:0] grp_fu_88_p2;
reg   [7:0] div_reg_134;
wire    ap_CS_fsm_state13;
reg   [7:0] tmp_reg_141;
wire    ap_CS_fsm_state14;
wire   [70:0] bound_fu_117_p2;
reg   [70:0] bound_reg_146;
wire    ap_CS_fsm_state15;
wire    grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_start;
wire    grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_done;
wire    grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_idle;
wire    grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_ready;
wire   [63:0] grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_out_st_din;
wire    grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_out_st_write;
wire   [11:0] grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_O_address0;
wire    grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_O_ce0;
wire   [11:0] grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_O_address1;
wire    grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_O_ce1;
reg    grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_start_reg;
wire    ap_CS_fsm_state16;
reg    ap_block_state1;
wire    ap_CS_fsm_state2;
wire   [8:0] zext_ln136_fu_92_p1;
wire   [8:0] add_ln136_fu_95_p2;
wire   [7:0] bound_fu_117_p0;
wire   [7:0] bound_fu_117_p1;
reg    grp_fu_88_ap_start;
wire    grp_fu_88_ap_done;
reg   [15:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire   [70:0] bound_fu_117_p00;
wire   [70:0] bound_fu_117_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 16'd1;
#0 grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_start_reg = 1'b0;
end

IFFT_AP_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2 grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_start),
    .ap_done(grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_done),
    .ap_idle(grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_idle),
    .ap_ready(grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_ready),
    .out_st_din(grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_out_st_din),
    .out_st_num_data_valid(2'd0),
    .out_st_fifo_cap(2'd0),
    .out_st_full_n(out_st_full_n),
    .out_st_write(grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_out_st_write),
    .bound(bound_reg_146),
    .zext_ln136(div_reg_134),
    .O_address0(grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_O_address0),
    .O_ce0(grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_O_ce0),
    .O_q0(O_q0),
    .O_address1(grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_O_address1),
    .O_ce1(grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_O_ce1),
    .O_q1(O_q1)
);

IFFT_AP_udiv_8ns_8ns_8_12_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
udiv_8ns_8ns_8_12_seq_1_U316(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_88_ap_start),
    .done(grp_fu_88_ap_done),
    .din0(p_cast_reg_124),
    .din1(p_cast4_reg_129),
    .ce(1'b1),
    .dout(grp_fu_88_p2)
);

IFFT_AP_mul_8ns_8ns_71_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 71 ))
mul_8ns_8ns_71_1_1_U317(
    .din0(bound_fu_117_p0),
    .din1(bound_fu_117_p1),
    .dout(bound_fu_117_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_start_reg <= 1'b1;
        end else if ((grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_ready == 1'b1)) begin
            grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        bound_reg_146 <= bound_fu_117_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        div_reg_134 <= grp_fu_88_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        p_cast4_reg_129 <= {{p_read1[31:24]}};
        p_cast_reg_124 <= {{p_read[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_reg_141 <= {{add_ln136_fu_95_p2[8:1]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_done == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_88_ap_start = 1'b1;
    end else begin
        grp_fu_88_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        out_st_write = grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_out_st_write;
    end else begin
        out_st_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign O_address0 = grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_O_address0;

assign O_address1 = grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_O_address1;

assign O_ce0 = grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_O_ce0;

assign O_ce1 = grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_O_ce1;

assign add_ln136_fu_95_p2 = (zext_ln136_fu_92_p1 + 9'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign bound_fu_117_p0 = bound_fu_117_p00;

assign bound_fu_117_p00 = div_reg_134;

assign bound_fu_117_p1 = bound_fu_117_p10;

assign bound_fu_117_p10 = tmp_reg_141;

assign grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_start = grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_ap_start_reg;

assign out_st_din = grp_push_out_Pipeline_VITIS_LOOP_136_1_VITIS_LOOP_139_2_fu_58_out_st_din;

assign zext_ln136_fu_92_p1 = div_reg_134;

endmodule //IFFT_AP_push_out
