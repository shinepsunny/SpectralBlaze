// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module IFFT_AP_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mul_ln63,
        zext_ln63,
        I_address0,
        I_ce0,
        I_q0,
        I_address1,
        I_ce1,
        I_q1,
        X_0_0_address0,
        X_0_0_ce0,
        X_0_0_we0,
        X_0_0_d0,
        X_0_1_address0,
        X_0_1_ce0,
        X_0_1_we0,
        X_0_1_d0,
        X_1_0_address0,
        X_1_0_ce0,
        X_1_0_we0,
        X_1_0_d0,
        X_1_1_address0,
        X_1_1_ce0,
        X_1_1_we0,
        X_1_1_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [69:0] mul_ln63;
input  [7:0] zext_ln63;
output  [11:0] I_address0;
output   I_ce0;
input  [31:0] I_q0;
output  [11:0] I_address1;
output   I_ce1;
input  [31:0] I_q1;
output  [9:0] X_0_0_address0;
output   X_0_0_ce0;
output   X_0_0_we0;
output  [31:0] X_0_0_d0;
output  [9:0] X_0_1_address0;
output   X_0_1_ce0;
output   X_0_1_we0;
output  [31:0] X_0_1_d0;
output  [9:0] X_1_0_address0;
output   X_1_0_ce0;
output   X_1_0_we0;
output  [31:0] X_1_0_d0;
output  [9:0] X_1_1_address0;
output   X_1_1_ce0;
output   X_1_1_we0;
output  [31:0] X_1_1_d0;

reg ap_idle;
reg[11:0] I_address0;
reg I_ce0;
reg[11:0] I_address1;
reg I_ce1;
reg[9:0] X_0_0_address0;
reg X_0_0_ce0;
reg X_0_0_we0;
reg[9:0] X_0_1_address0;
reg X_0_1_ce0;
reg X_0_1_we0;
reg[9:0] X_1_0_address0;
reg X_1_0_ce0;
reg X_1_0_we0;
reg[9:0] X_1_1_address0;
reg X_1_1_ce0;
reg X_1_1_we0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln1027_fu_259_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln63_cast_fu_237_p1;
reg   [63:0] zext_ln63_cast_reg_483;
reg   [0:0] icmp_ln1027_reg_488;
wire    ap_block_pp0_stage1_11001;
reg   [63:0] y1_load_reg_492;
wire   [0:0] icmp_ln1027_5_fu_282_p2;
reg   [0:0] icmp_ln1027_5_reg_497;
wire   [5:0] trunc_ln70_fu_295_p1;
reg   [5:0] trunc_ln70_reg_502;
reg   [4:0] p_cast31_mid2_v_reg_507;
wire   [0:0] trunc_ln1027_2_fu_309_p1;
reg   [0:0] trunc_ln1027_2_reg_512;
reg   [0:0] trunc_ln1027_2_reg_512_pp0_iter1_reg;
wire   [11:0] trunc_ln1027_fu_329_p1;
reg   [11:0] trunc_ln1027_reg_516;
wire   [11:0] tmp_s_fu_333_p3;
reg   [11:0] tmp_s_reg_522;
reg   [9:0] lshr_ln70_1_reg_533;
wire   [9:0] add_ln72_1_fu_444_p2;
reg   [9:0] add_ln72_1_reg_554;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln70_fu_346_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln71_fu_373_p1;
wire   [63:0] zext_ln70_2_fu_401_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln72_fu_419_p1;
wire   [63:0] zext_ln73_fu_434_p1;
wire   [63:0] zext_ln72_1_fu_450_p1;
reg   [63:0] y1_fu_84;
wire   [63:0] add_ln66_fu_378_p2;
wire    ap_loop_init;
reg   [7:0] x1_fu_88;
wire   [7:0] select_ln1027_3_fu_287_p3;
reg   [69:0] indvar_flatten17_fu_92;
wire   [69:0] add_ln1027_fu_264_p2;
wire   [7:0] add_ln63_fu_276_p2;
wire   [63:0] select_ln1027_fu_323_p3;
wire   [11:0] add_ln70_fu_340_p2;
wire   [11:0] or_ln71_fu_361_p2;
wire   [11:0] add_ln71_fu_367_p2;
wire   [9:0] tmp_7_fu_389_p3;
wire   [9:0] add_ln70_1_fu_396_p2;
wire   [11:0] or_ln72_fu_409_p2;
wire   [11:0] add_ln72_fu_414_p2;
wire   [11:0] or_ln73_fu_424_p2;
wire   [11:0] add_ln73_fu_429_p2;
wire   [9:0] or_ln72_1_fu_439_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage0;
reg    ap_idle_pp0_0to0;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to2;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

IFFT_AP_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        indvar_flatten17_fu_92 <= 70'd0;
    end else if (((icmp_ln1027_fu_259_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten17_fu_92 <= add_ln1027_fu_264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        x1_fu_88 <= 8'd0;
    end else if (((icmp_ln1027_fu_259_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        x1_fu_88 <= select_ln1027_3_fu_287_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            y1_fu_84 <= 64'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_488 == 1'd0))) begin
            y1_fu_84 <= add_ln66_fu_378_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln72_1_reg_554[9 : 1] <= add_ln72_1_fu_444_p2[9 : 1];
        icmp_ln1027_reg_488 <= icmp_ln1027_fu_259_p2;
        trunc_ln1027_2_reg_512_pp0_iter1_reg <= trunc_ln1027_2_reg_512;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_fu_259_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln1027_5_reg_497 <= icmp_ln1027_5_fu_282_p2;
        p_cast31_mid2_v_reg_507 <= {{select_ln1027_3_fu_287_p3[5:1]}};
        trunc_ln1027_2_reg_512 <= trunc_ln1027_2_fu_309_p1;
        trunc_ln70_reg_502 <= trunc_ln70_fu_295_p1;
        y1_load_reg_492 <= y1_fu_84;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_488 == 1'd0))) begin
        lshr_ln70_1_reg_533 <= {{select_ln1027_fu_323_p3[10:1]}};
        tmp_s_reg_522[11 : 6] <= tmp_s_fu_333_p3[11 : 6];
        trunc_ln1027_reg_516 <= trunc_ln1027_fu_329_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln63_cast_reg_483[7 : 0] <= zext_ln63_cast_fu_237_p1[7 : 0];
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            I_address0 = zext_ln73_fu_434_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            I_address0 = zext_ln71_fu_373_p1;
        end else begin
            I_address0 = 'bx;
        end
    end else begin
        I_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            I_address1 = zext_ln72_fu_419_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            I_address1 = zext_ln70_fu_346_p1;
        end else begin
            I_address1 = 'bx;
        end
    end else begin
        I_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        I_ce0 = 1'b1;
    end else begin
        I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        I_ce1 = 1'b1;
    end else begin
        I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_0_0_address0 = zext_ln72_1_fu_450_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_0_0_address0 = zext_ln70_2_fu_401_p1;
    end else begin
        X_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        X_0_0_ce0 = 1'b1;
    end else begin
        X_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln1027_2_reg_512 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln1027_2_reg_512_pp0_iter1_reg == 1'd0)))) begin
        X_0_0_we0 = 1'b1;
    end else begin
        X_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_0_1_address0 = zext_ln72_1_fu_450_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_0_1_address0 = zext_ln70_2_fu_401_p1;
    end else begin
        X_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        X_0_1_ce0 = 1'b1;
    end else begin
        X_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln1027_2_reg_512 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln1027_2_reg_512_pp0_iter1_reg == 1'd0)))) begin
        X_0_1_we0 = 1'b1;
    end else begin
        X_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_1_0_address0 = zext_ln72_1_fu_450_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_1_0_address0 = zext_ln70_2_fu_401_p1;
    end else begin
        X_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        X_1_0_ce0 = 1'b1;
    end else begin
        X_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln1027_2_reg_512 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln1027_2_reg_512_pp0_iter1_reg == 1'd1)))) begin
        X_1_0_we0 = 1'b1;
    end else begin
        X_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_1_1_address0 = zext_ln72_1_fu_450_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_1_1_address0 = zext_ln70_2_fu_401_p1;
    end else begin
        X_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        X_1_1_ce0 = 1'b1;
    end else begin
        X_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln1027_2_reg_512 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln1027_2_reg_512_pp0_iter1_reg == 1'd1)))) begin
        X_1_1_we0 = 1'b1;
    end else begin
        X_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1027_fu_259_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_488 == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign X_0_0_d0 = I_q1;

assign X_0_1_d0 = I_q0;

assign X_1_0_d0 = I_q1;

assign X_1_1_d0 = I_q0;

assign add_ln1027_fu_264_p2 = (indvar_flatten17_fu_92 + 70'd1);

assign add_ln63_fu_276_p2 = (x1_fu_88 + 8'd1);

assign add_ln66_fu_378_p2 = (select_ln1027_fu_323_p3 + 64'd4);

assign add_ln70_1_fu_396_p2 = (tmp_7_fu_389_p3 + lshr_ln70_1_reg_533);

assign add_ln70_fu_340_p2 = (tmp_s_fu_333_p3 + trunc_ln1027_fu_329_p1);

assign add_ln71_fu_367_p2 = (tmp_s_fu_333_p3 + or_ln71_fu_361_p2);

assign add_ln72_1_fu_444_p2 = (tmp_7_fu_389_p3 + or_ln72_1_fu_439_p2);

assign add_ln72_fu_414_p2 = (tmp_s_reg_522 + or_ln72_fu_409_p2);

assign add_ln73_fu_429_p2 = (tmp_s_reg_522 + or_ln73_fu_424_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign icmp_ln1027_5_fu_282_p2 = ((y1_fu_84 < zext_ln63_cast_reg_483) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_259_p2 = ((indvar_flatten17_fu_92 == mul_ln63) ? 1'b1 : 1'b0);

assign or_ln71_fu_361_p2 = (trunc_ln1027_fu_329_p1 | 12'd1);

assign or_ln72_1_fu_439_p2 = (lshr_ln70_1_reg_533 | 10'd1);

assign or_ln72_fu_409_p2 = (trunc_ln1027_reg_516 | 12'd2);

assign or_ln73_fu_424_p2 = (trunc_ln1027_reg_516 | 12'd3);

assign select_ln1027_3_fu_287_p3 = ((icmp_ln1027_5_fu_282_p2[0:0] == 1'b1) ? x1_fu_88 : add_ln63_fu_276_p2);

assign select_ln1027_fu_323_p3 = ((icmp_ln1027_5_reg_497[0:0] == 1'b1) ? y1_load_reg_492 : 64'd0);

assign tmp_7_fu_389_p3 = {{p_cast31_mid2_v_reg_507}, {5'd0}};

assign tmp_s_fu_333_p3 = {{trunc_ln70_reg_502}, {6'd0}};

assign trunc_ln1027_2_fu_309_p1 = select_ln1027_3_fu_287_p3[0:0];

assign trunc_ln1027_fu_329_p1 = select_ln1027_fu_323_p3[11:0];

assign trunc_ln70_fu_295_p1 = select_ln1027_3_fu_287_p3[5:0];

assign zext_ln63_cast_fu_237_p1 = zext_ln63;

assign zext_ln70_2_fu_401_p1 = add_ln70_1_fu_396_p2;

assign zext_ln70_fu_346_p1 = add_ln70_fu_340_p2;

assign zext_ln71_fu_373_p1 = add_ln71_fu_367_p2;

assign zext_ln72_1_fu_450_p1 = add_ln72_1_reg_554;

assign zext_ln72_fu_419_p1 = add_ln72_fu_414_p2;

assign zext_ln73_fu_434_p1 = add_ln73_fu_429_p2;

always @ (posedge ap_clk) begin
    zext_ln63_cast_reg_483[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    tmp_s_reg_522[5:0] <= 6'b000000;
    add_ln72_1_reg_554[0] <= 1'b1;
end

endmodule //IFFT_AP_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2
