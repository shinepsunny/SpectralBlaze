-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity IFFT_AP_fft_stage_3_Pipeline_SKIP_X_SKIP_Y is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bound : IN STD_LOGIC_VECTOR (13 downto 0);
    trunc_ln17 : IN STD_LOGIC_VECTOR (6 downto 0);
    I_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    I_ce0 : OUT STD_LOGIC;
    I_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    I_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    I_ce1 : OUT STD_LOGIC;
    I_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    X_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    X_ce0 : OUT STD_LOGIC;
    X_we0 : OUT STD_LOGIC;
    X_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    X_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    X_ce1 : OUT STD_LOGIC;
    X_we1 : OUT STD_LOGIC;
    X_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of IFFT_AP_fft_stage_3_Pipeline_SKIP_X_SKIP_Y is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln1027_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal w_7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_7_ce0 : STD_LOGIC;
    signal w_7_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_7_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_7_ce1 : STD_LOGIC;
    signal w_7_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_12_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_12_ce0 : STD_LOGIC;
    signal w_12_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_12_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_12_ce1 : STD_LOGIC;
    signal w_12_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add40_fu_405_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add40_reg_911 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln1027_reg_916 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_916_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_916_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_916_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_916_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_916_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_916_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_916_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_916_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_916_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_916_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_916_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_8_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_8_reg_920 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1027_12_fu_486_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_12_reg_927 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1027_18_fu_494_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1027_18_reg_932 : STD_LOGIC_VECTOR (2 downto 0);
    signal add40_mid1_fu_506_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add40_mid1_reg_937 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln1027_11_fu_567_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_11_reg_942 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_13_fu_574_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln1027_13_reg_947 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1027_2_fu_579_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1027_2_reg_952 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln28_fu_602_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln28_reg_967 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln29_fu_607_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln29_reg_972 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln30_fu_613_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln30_reg_978 : STD_LOGIC_VECTOR (11 downto 0);
    signal w_7_load_reg_984 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_12_load_reg_990 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln388_fu_709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1006 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1006_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1006_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1006_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1006_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1006_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1006_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1006_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1006_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1006_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1006_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1006_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln328_fu_714_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_1016 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_1016_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_1016_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_1016_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_1016_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln388_9_fu_724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_9_reg_1021 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_9_reg_1021_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_9_reg_1021_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_9_reg_1021_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_9_reg_1021_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_9_reg_1021_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_9_reg_1021_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_9_reg_1021_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_9_reg_1021_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_9_reg_1021_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_9_reg_1021_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln388_6_fu_729_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln388_6_reg_1031 : STD_LOGIC_VECTOR (11 downto 0);
    signal w2_M_real_reg_1036 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_M_imag_reg_1042 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_fu_743_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_reg_1058 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_fu_747_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_reg_1064 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln388_10_fu_751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_10_reg_1070 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_10_reg_1070_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_10_reg_1070_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_10_reg_1070_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_10_reg_1070_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_10_reg_1070_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_10_reg_1070_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_10_reg_1070_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_10_reg_1070_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_10_reg_1070_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_10_reg_1070_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal p_r_M_real_59_fu_759_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_59_reg_1080 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_65_fu_763_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_65_reg_1086 : STD_LOGIC_VECTOR (15 downto 0);
    signal w12_M_real_reg_1092 : STD_LOGIC_VECTOR (15 downto 0);
    signal w12_M_imag_reg_1098 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_61_fu_771_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_61_reg_1104 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_67_fu_775_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_67_reg_1110 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_314_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_i_i_reg_1116 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_318_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul3_i_i_reg_1121 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_322_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul6_i_i_reg_1126 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_326_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul9_i_i_reg_1131 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_330_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_i_i5_reg_1136 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_334_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul3_i_i5_reg_1141 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul6_i_i5_reg_1146 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul9_i_i5_reg_1151 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_i_i6_reg_1156 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul3_i_i6_reg_1161 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul6_i_i6_reg_1166 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul9_i_i6_reg_1171 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln328_fu_779_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1176 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1176_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1176_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1176_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1176_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1176_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1176_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_286_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_reg_1186 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_258_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_71_reg_1192 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_290_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_7_reg_1198 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_63_fu_787_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_63_reg_1204 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_69_fu_791_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_69_reg_1210 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_81_reg_1216 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_8_reg_1222 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_262_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_82_reg_1228 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_266_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_72_reg_1234 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_70_reg_1240 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_70_reg_1240_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_78_reg_1246 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_75_reg_1252 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_270_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_83_reg_1258 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_294_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_76_reg_1264 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_298_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_76_reg_1270 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_302_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_84_reg_1276 : STD_LOGIC_VECTOR (15 downto 0);
    signal add3_i_i290_partset_fu_803_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_i_i290_partset_reg_1282 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_i_i294_partset_fu_819_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_i_i294_partset_reg_1287 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i298_partset_fu_835_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i298_partset_reg_1292 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i302_partset_fu_851_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i302_partset_reg_1297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln1027_fu_585_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln27_fu_699_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln28_fu_734_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k2_fu_74 : STD_LOGIC_VECTOR (6 downto 0);
    signal k2_5_fu_526_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal j2_fu_78 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_9_fu_659_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m2_fu_82 : STD_LOGIC_VECTOR (31 downto 0);
    signal m2_6_fu_667_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_fu_86 : STD_LOGIC_VECTOR (31 downto 0);
    signal m1_fu_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_14_fu_512_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_fu_94 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1027_fu_416_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_258_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_258_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_262_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_262_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_266_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_266_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_270_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_270_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_286_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_286_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_290_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_290_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_294_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_294_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_298_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_298_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_314_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_314_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_318_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_318_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_322_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_322_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_326_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_326_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_330_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_330_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_334_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_334_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1027_17_fu_401_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1027_fu_397_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln54_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln57_fu_443_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln50_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j1_16_fu_431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_17_fu_449_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m1_11_fu_457_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_18_fu_465_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m1_12_fu_473_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1027_20_fu_502_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1027_19_fu_498_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln22_fu_520_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1027_fu_560_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1027_23_fu_598_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1027_22_fu_594_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1027_21_fu_590_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln44_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln47_fu_637_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln40_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j2_7_fu_625_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_8_fu_643_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m2_5_fu_651_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_685_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln388_fu_704_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_692_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln388_5_fu_719_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln388_fu_739_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_338_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln388_11_fu_755_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_348_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln388_12_fu_767_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln328_fu_783_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_274_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln36_3_fu_799_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln36_fu_795_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_278_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_282_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln37_3_fu_815_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln37_fu_811_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln38_3_fu_831_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln38_fu_827_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_306_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_310_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln39_3_fu_847_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln39_fu_843_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter12_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to11 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to13 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_fft_stage_3_Pipeline_SKIP_X_SKIP_Y_w_7_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_fft_stage_3_Pipeline_SKIP_X_SKIP_Y_w_12_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    w_7_U : component IFFT_AP_fft_stage_3_Pipeline_SKIP_X_SKIP_Y_w_7_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w_7_address0,
        ce0 => w_7_ce0,
        q0 => w_7_q0,
        address1 => w_7_address1,
        ce1 => w_7_ce1,
        q1 => w_7_q1);

    w_12_U : component IFFT_AP_fft_stage_3_Pipeline_SKIP_X_SKIP_Y_w_12_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w_12_address0,
        ce0 => w_12_ce0,
        q0 => w_12_q0,
        address1 => w_12_address1,
        ce1 => w_12_ce1,
        q1 => w_12_q1);

    hadd_16ns_16ns_16_5_full_dsp_1_U136 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_258_p0,
        din1 => grp_fu_258_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_258_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U137 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_262_p0,
        din1 => grp_fu_262_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_262_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U138 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_266_p0,
        din1 => grp_fu_266_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_266_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U139 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_270_p0,
        din1 => grp_fu_270_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_270_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U140 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_78_reg_1246,
        din1 => p_r_M_imag_83_reg_1258,
        ce => ap_const_logic_1,
        dout => grp_fu_274_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U141 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_real_70_reg_1240,
        din1 => p_r_M_real_76_reg_1270,
        ce => ap_const_logic_1,
        dout => grp_fu_278_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U142 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_76_reg_1264,
        din1 => p_r_M_imag_84_reg_1276,
        ce => ap_const_logic_1,
        dout => grp_fu_282_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U143 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_286_p0,
        din1 => grp_fu_286_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_286_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U144 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_290_p0,
        din1 => grp_fu_290_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_290_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U145 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_294_p0,
        din1 => grp_fu_294_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_294_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U146 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_298_p0,
        din1 => grp_fu_298_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_298_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U147 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_71_reg_1192,
        din1 => p_r_M_imag_82_reg_1228,
        ce => ap_const_logic_1,
        dout => grp_fu_302_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U148 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_real_70_reg_1240_pp0_iter10_reg,
        din1 => p_r_M_real_76_reg_1270,
        ce => ap_const_logic_1,
        dout => grp_fu_306_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U149 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_76_reg_1264,
        din1 => p_r_M_imag_84_reg_1276,
        ce => ap_const_logic_1,
        dout => grp_fu_310_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U150 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_314_p0,
        din1 => grp_fu_314_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_314_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U151 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_318_p0,
        din1 => grp_fu_318_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_318_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U152 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_322_p0,
        din1 => grp_fu_322_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_322_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U153 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_326_p0,
        din1 => grp_fu_326_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_326_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U154 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_330_p0,
        din1 => grp_fu_330_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_330_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U155 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_334_p0,
        din1 => grp_fu_334_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_334_p2);

    flow_control_loop_pipe_sequential_init_U : component IFFT_AP_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter11_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter12_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_fu_94 <= ap_const_lv14_0;
            elsif (((icmp_ln1027_fu_411_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                indvar_flatten_fu_94 <= add_ln1027_fu_416_p2;
            end if; 
        end if;
    end process;

    j1_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j1_fu_86 <= ap_const_lv32_0;
            elsif (((icmp_ln1027_fu_411_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                j1_fu_86 <= select_ln1027_12_fu_486_p3;
            end if; 
        end if;
    end process;

    j2_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    j2_fu_78 <= ap_const_lv32_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_916 = ap_const_lv1_0))) then 
                    j2_fu_78 <= j2_9_fu_659_p3;
                end if;
            end if; 
        end if;
    end process;

    k2_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                k2_fu_74 <= ap_const_lv7_0;
            elsif (((icmp_ln1027_fu_411_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                k2_fu_74 <= k2_5_fu_526_p3;
            end if; 
        end if;
    end process;

    m1_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                m1_fu_90 <= ap_const_lv32_0;
            elsif (((icmp_ln1027_fu_411_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                m1_fu_90 <= select_ln1027_14_fu_512_p3;
            end if; 
        end if;
    end process;

    m2_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    m2_fu_82 <= ap_const_lv32_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_916 = ap_const_lv1_0))) then 
                    m2_fu_82 <= m2_6_fu_667_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add3_i_i290_partset_reg_1282 <= add3_i_i290_partset_fu_803_p3;
                add3_i_i294_partset_reg_1287 <= add3_i_i294_partset_fu_819_p3;
                p_r_M_imag_65_reg_1086 <= p_r_M_imag_65_fu_763_p1;
                p_r_M_imag_reg_1064 <= p_r_M_imag_fu_747_p1;
                p_r_M_real_59_reg_1080 <= p_r_M_real_59_fu_759_p1;
                p_r_M_real_70_reg_1240_pp0_iter10_reg <= p_r_M_real_70_reg_1240;
                p_r_M_real_reg_1058 <= p_r_M_real_fu_743_p1;
                sub3_i_i298_partset_reg_1292 <= sub3_i_i298_partset_fu_835_p3;
                    zext_ln328_reg_1176(11 downto 0) <= zext_ln328_fu_779_p1(11 downto 0);
                    zext_ln328_reg_1176_pp0_iter10_reg(11 downto 0) <= zext_ln328_reg_1176_pp0_iter9_reg(11 downto 0);
                    zext_ln328_reg_1176_pp0_iter11_reg(11 downto 0) <= zext_ln328_reg_1176_pp0_iter10_reg(11 downto 0);
                    zext_ln328_reg_1176_pp0_iter12_reg(11 downto 0) <= zext_ln328_reg_1176_pp0_iter11_reg(11 downto 0);
                    zext_ln328_reg_1176_pp0_iter7_reg(11 downto 0) <= zext_ln328_reg_1176(11 downto 0);
                    zext_ln328_reg_1176_pp0_iter8_reg(11 downto 0) <= zext_ln328_reg_1176_pp0_iter7_reg(11 downto 0);
                    zext_ln328_reg_1176_pp0_iter9_reg(11 downto 0) <= zext_ln328_reg_1176_pp0_iter8_reg(11 downto 0);
                    zext_ln388_10_reg_1070(11 downto 0) <= zext_ln388_10_fu_751_p1(11 downto 0);
                    zext_ln388_10_reg_1070_pp0_iter10_reg(11 downto 0) <= zext_ln388_10_reg_1070_pp0_iter9_reg(11 downto 0);
                    zext_ln388_10_reg_1070_pp0_iter11_reg(11 downto 0) <= zext_ln388_10_reg_1070_pp0_iter10_reg(11 downto 0);
                    zext_ln388_10_reg_1070_pp0_iter12_reg(11 downto 0) <= zext_ln388_10_reg_1070_pp0_iter11_reg(11 downto 0);
                    zext_ln388_10_reg_1070_pp0_iter3_reg(11 downto 0) <= zext_ln388_10_reg_1070(11 downto 0);
                    zext_ln388_10_reg_1070_pp0_iter4_reg(11 downto 0) <= zext_ln388_10_reg_1070_pp0_iter3_reg(11 downto 0);
                    zext_ln388_10_reg_1070_pp0_iter5_reg(11 downto 0) <= zext_ln388_10_reg_1070_pp0_iter4_reg(11 downto 0);
                    zext_ln388_10_reg_1070_pp0_iter6_reg(11 downto 0) <= zext_ln388_10_reg_1070_pp0_iter5_reg(11 downto 0);
                    zext_ln388_10_reg_1070_pp0_iter7_reg(11 downto 0) <= zext_ln388_10_reg_1070_pp0_iter6_reg(11 downto 0);
                    zext_ln388_10_reg_1070_pp0_iter8_reg(11 downto 0) <= zext_ln388_10_reg_1070_pp0_iter7_reg(11 downto 0);
                    zext_ln388_10_reg_1070_pp0_iter9_reg(11 downto 0) <= zext_ln388_10_reg_1070_pp0_iter8_reg(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_fu_411_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add40_mid1_reg_937 <= add40_mid1_fu_506_p2;
                icmp_ln1027_8_reg_920 <= icmp_ln1027_8_fu_481_p2;
                select_ln1027_12_reg_927 <= select_ln1027_12_fu_486_p3;
                trunc_ln1027_18_reg_932 <= trunc_ln1027_18_fu_494_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add40_reg_911 <= add40_fu_405_p2;
                add_ln328_reg_1016 <= add_ln328_fu_714_p2;
                add_ln328_reg_1016_pp0_iter2_reg <= add_ln328_reg_1016;
                add_ln328_reg_1016_pp0_iter3_reg <= add_ln328_reg_1016_pp0_iter2_reg;
                add_ln328_reg_1016_pp0_iter4_reg <= add_ln328_reg_1016_pp0_iter3_reg;
                add_ln328_reg_1016_pp0_iter5_reg <= add_ln328_reg_1016_pp0_iter4_reg;
                add_ln388_6_reg_1031 <= add_ln388_6_fu_729_p2;
                icmp_ln1027_reg_916 <= icmp_ln1027_fu_411_p2;
                icmp_ln1027_reg_916_pp0_iter10_reg <= icmp_ln1027_reg_916_pp0_iter9_reg;
                icmp_ln1027_reg_916_pp0_iter11_reg <= icmp_ln1027_reg_916_pp0_iter10_reg;
                icmp_ln1027_reg_916_pp0_iter1_reg <= icmp_ln1027_reg_916;
                icmp_ln1027_reg_916_pp0_iter2_reg <= icmp_ln1027_reg_916_pp0_iter1_reg;
                icmp_ln1027_reg_916_pp0_iter3_reg <= icmp_ln1027_reg_916_pp0_iter2_reg;
                icmp_ln1027_reg_916_pp0_iter4_reg <= icmp_ln1027_reg_916_pp0_iter3_reg;
                icmp_ln1027_reg_916_pp0_iter5_reg <= icmp_ln1027_reg_916_pp0_iter4_reg;
                icmp_ln1027_reg_916_pp0_iter6_reg <= icmp_ln1027_reg_916_pp0_iter5_reg;
                icmp_ln1027_reg_916_pp0_iter7_reg <= icmp_ln1027_reg_916_pp0_iter6_reg;
                icmp_ln1027_reg_916_pp0_iter8_reg <= icmp_ln1027_reg_916_pp0_iter7_reg;
                icmp_ln1027_reg_916_pp0_iter9_reg <= icmp_ln1027_reg_916_pp0_iter8_reg;
                p_r_M_imag_67_reg_1110 <= p_r_M_imag_67_fu_775_p1;
                p_r_M_imag_69_reg_1210 <= p_r_M_imag_69_fu_791_p1;
                p_r_M_imag_84_reg_1276 <= grp_fu_302_p2;
                p_r_M_real_61_reg_1104 <= p_r_M_real_61_fu_771_p1;
                p_r_M_real_63_reg_1204 <= p_r_M_real_63_fu_787_p1;
                sub3_i_i302_partset_reg_1297 <= sub3_i_i302_partset_fu_851_p3;
                    zext_ln388_9_reg_1021(11 downto 0) <= zext_ln388_9_fu_724_p1(11 downto 0);
                    zext_ln388_9_reg_1021_pp0_iter10_reg(11 downto 0) <= zext_ln388_9_reg_1021_pp0_iter9_reg(11 downto 0);
                    zext_ln388_9_reg_1021_pp0_iter11_reg(11 downto 0) <= zext_ln388_9_reg_1021_pp0_iter10_reg(11 downto 0);
                    zext_ln388_9_reg_1021_pp0_iter2_reg(11 downto 0) <= zext_ln388_9_reg_1021(11 downto 0);
                    zext_ln388_9_reg_1021_pp0_iter3_reg(11 downto 0) <= zext_ln388_9_reg_1021_pp0_iter2_reg(11 downto 0);
                    zext_ln388_9_reg_1021_pp0_iter4_reg(11 downto 0) <= zext_ln388_9_reg_1021_pp0_iter3_reg(11 downto 0);
                    zext_ln388_9_reg_1021_pp0_iter5_reg(11 downto 0) <= zext_ln388_9_reg_1021_pp0_iter4_reg(11 downto 0);
                    zext_ln388_9_reg_1021_pp0_iter6_reg(11 downto 0) <= zext_ln388_9_reg_1021_pp0_iter5_reg(11 downto 0);
                    zext_ln388_9_reg_1021_pp0_iter7_reg(11 downto 0) <= zext_ln388_9_reg_1021_pp0_iter6_reg(11 downto 0);
                    zext_ln388_9_reg_1021_pp0_iter8_reg(11 downto 0) <= zext_ln388_9_reg_1021_pp0_iter7_reg(11 downto 0);
                    zext_ln388_9_reg_1021_pp0_iter9_reg(11 downto 0) <= zext_ln388_9_reg_1021_pp0_iter8_reg(11 downto 0);
                    zext_ln388_reg_1006(11 downto 0) <= zext_ln388_fu_709_p1(11 downto 0);
                    zext_ln388_reg_1006_pp0_iter10_reg(11 downto 0) <= zext_ln388_reg_1006_pp0_iter9_reg(11 downto 0);
                    zext_ln388_reg_1006_pp0_iter11_reg(11 downto 0) <= zext_ln388_reg_1006_pp0_iter10_reg(11 downto 0);
                    zext_ln388_reg_1006_pp0_iter12_reg(11 downto 0) <= zext_ln388_reg_1006_pp0_iter11_reg(11 downto 0);
                    zext_ln388_reg_1006_pp0_iter2_reg(11 downto 0) <= zext_ln388_reg_1006(11 downto 0);
                    zext_ln388_reg_1006_pp0_iter3_reg(11 downto 0) <= zext_ln388_reg_1006_pp0_iter2_reg(11 downto 0);
                    zext_ln388_reg_1006_pp0_iter4_reg(11 downto 0) <= zext_ln388_reg_1006_pp0_iter3_reg(11 downto 0);
                    zext_ln388_reg_1006_pp0_iter5_reg(11 downto 0) <= zext_ln388_reg_1006_pp0_iter4_reg(11 downto 0);
                    zext_ln388_reg_1006_pp0_iter6_reg(11 downto 0) <= zext_ln388_reg_1006_pp0_iter5_reg(11 downto 0);
                    zext_ln388_reg_1006_pp0_iter7_reg(11 downto 0) <= zext_ln388_reg_1006_pp0_iter6_reg(11 downto 0);
                    zext_ln388_reg_1006_pp0_iter8_reg(11 downto 0) <= zext_ln388_reg_1006_pp0_iter7_reg(11 downto 0);
                    zext_ln388_reg_1006_pp0_iter9_reg(11 downto 0) <= zext_ln388_reg_1006_pp0_iter8_reg(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_916 = ap_const_lv1_0))) then
                add_ln1027_2_reg_952 <= add_ln1027_2_fu_579_p2;
                add_ln28_reg_967 <= add_ln28_fu_602_p2;
                add_ln29_reg_972 <= add_ln29_fu_607_p2;
                add_ln30_reg_978 <= add_ln30_fu_613_p2;
                select_ln1027_11_reg_942 <= select_ln1027_11_fu_567_p3;
                select_ln1027_13_reg_947 <= select_ln1027_13_fu_574_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul3_i_i5_reg_1141 <= grp_fu_334_p2;
                mul3_i_i_reg_1121 <= grp_fu_318_p2;
                mul6_i_i_reg_1126 <= grp_fu_322_p2;
                mul9_i_i_reg_1131 <= grp_fu_326_p2;
                mul_i_i5_reg_1136 <= grp_fu_330_p2;
                mul_i_i_reg_1116 <= grp_fu_314_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul3_i_i6_reg_1161 <= grp_fu_326_p2;
                mul6_i_i5_reg_1146 <= grp_fu_314_p2;
                mul6_i_i6_reg_1166 <= grp_fu_330_p2;
                mul9_i_i5_reg_1151 <= grp_fu_318_p2;
                mul9_i_i6_reg_1171 <= grp_fu_334_p2;
                mul_i_i6_reg_1156 <= grp_fu_322_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_r_7_reg_1198 <= grp_fu_290_p2;
                p_r_M_imag_71_reg_1192 <= grp_fu_258_p2;
                p_r_reg_1186 <= grp_fu_286_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_r_8_reg_1222 <= grp_fu_286_p2;
                p_r_M_imag_81_reg_1216 <= grp_fu_258_p2;
                p_r_M_imag_82_reg_1228 <= grp_fu_262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_r_M_imag_76_reg_1264 <= grp_fu_294_p2;
                p_r_M_imag_78_reg_1246 <= grp_fu_262_p2;
                p_r_M_imag_83_reg_1258 <= grp_fu_270_p2;
                p_r_M_real_75_reg_1252 <= grp_fu_266_p2;
                p_r_M_real_76_reg_1270 <= grp_fu_298_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_r_M_real_70_reg_1240 <= grp_fu_290_p2;
                p_r_M_real_72_reg_1234 <= grp_fu_266_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                w12_M_imag_reg_1098 <= w_12_q0;
                w12_M_real_reg_1092 <= w_7_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                w2_M_imag_reg_1042 <= w_12_q0;
                w2_M_real_reg_1036 <= w_7_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                w_12_load_reg_990 <= w_12_q1;
                w_7_load_reg_984 <= w_7_q1;
            end if;
        end if;
    end process;
    zext_ln388_reg_1006(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1006_pp0_iter2_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1006_pp0_iter3_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1006_pp0_iter4_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1006_pp0_iter5_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1006_pp0_iter6_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1006_pp0_iter7_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1006_pp0_iter8_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1006_pp0_iter9_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1006_pp0_iter10_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1006_pp0_iter11_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1006_pp0_iter12_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_9_reg_1021(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_9_reg_1021_pp0_iter2_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_9_reg_1021_pp0_iter3_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_9_reg_1021_pp0_iter4_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_9_reg_1021_pp0_iter5_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_9_reg_1021_pp0_iter6_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_9_reg_1021_pp0_iter7_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_9_reg_1021_pp0_iter8_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_9_reg_1021_pp0_iter9_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_9_reg_1021_pp0_iter10_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_9_reg_1021_pp0_iter11_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_10_reg_1070(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_10_reg_1070_pp0_iter3_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_10_reg_1070_pp0_iter4_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_10_reg_1070_pp0_iter5_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_10_reg_1070_pp0_iter6_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_10_reg_1070_pp0_iter7_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_10_reg_1070_pp0_iter8_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_10_reg_1070_pp0_iter9_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_10_reg_1070_pp0_iter10_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_10_reg_1070_pp0_iter11_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_10_reg_1070_pp0_iter12_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1176(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1176_pp0_iter7_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1176_pp0_iter8_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1176_pp0_iter9_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1176_pp0_iter10_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1176_pp0_iter11_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1176_pp0_iter12_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter12_stage0, ap_idle_pp0_0to11, ap_idle_pp0_1to13, ap_done_pending_pp0, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to13 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    I_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, zext_ln388_9_fu_724_p1, zext_ln328_fu_779_p1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            I_address0 <= zext_ln328_fu_779_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            I_address0 <= zext_ln388_9_fu_724_p1(12 - 1 downto 0);
        else 
            I_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    I_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, zext_ln388_fu_709_p1, zext_ln388_10_fu_751_p1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            I_address1 <= zext_ln388_10_fu_751_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            I_address1 <= zext_ln388_fu_709_p1(12 - 1 downto 0);
        else 
            I_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    I_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            I_ce0 <= ap_const_logic_1;
        else 
            I_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    I_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            I_ce1 <= ap_const_logic_1;
        else 
            I_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, zext_ln388_9_reg_1021_pp0_iter11_reg, zext_ln388_10_reg_1070_pp0_iter12_reg, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_address0 <= zext_ln388_10_reg_1070_pp0_iter12_reg(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_address0 <= zext_ln388_9_reg_1021_pp0_iter11_reg(12 - 1 downto 0);
        else 
            X_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    X_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, zext_ln388_reg_1006_pp0_iter12_reg, zext_ln328_reg_1176_pp0_iter12_reg, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_address1 <= zext_ln388_reg_1006_pp0_iter12_reg(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_address1 <= zext_ln328_reg_1176_pp0_iter12_reg(12 - 1 downto 0);
        else 
            X_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    X_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_ce0 <= ap_const_logic_1;
        else 
            X_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_ce1 <= ap_const_logic_1;
        else 
            X_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, add3_i_i294_partset_reg_1287, sub3_i_i302_partset_reg_1297, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_d0 <= sub3_i_i302_partset_reg_1297;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_d0 <= add3_i_i294_partset_reg_1287;
        else 
            X_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, add3_i_i290_partset_reg_1282, sub3_i_i298_partset_reg_1292, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_d1 <= sub3_i_i298_partset_reg_1292;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_d1 <= add3_i_i290_partset_reg_1282;
        else 
            X_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_we0 <= ap_const_logic_1;
        else 
            X_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_we1 <= ap_const_logic_1;
        else 
            X_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add3_i_i290_partset_fu_803_p3 <= (bitcast_ln36_3_fu_799_p1 & bitcast_ln36_fu_795_p1);
    add3_i_i294_partset_fu_819_p3 <= (bitcast_ln37_3_fu_815_p1 & bitcast_ln37_fu_811_p1);
    add40_fu_405_p2 <= std_logic_vector(unsigned(trunc_ln1027_17_fu_401_p1) + unsigned(trunc_ln1027_fu_397_p1));
    add40_mid1_fu_506_p2 <= std_logic_vector(unsigned(trunc_ln1027_20_fu_502_p1) + unsigned(trunc_ln1027_19_fu_498_p1));
    add_ln1027_2_fu_579_p2 <= std_logic_vector(unsigned(select_ln1027_13_fu_574_p3) + unsigned(ap_const_lv6_8));
    add_ln1027_fu_416_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_94) + unsigned(ap_const_lv14_1));
    add_ln22_fu_520_p2 <= std_logic_vector(unsigned(k2_fu_74) + unsigned(ap_const_lv7_1));
    add_ln28_fu_602_p2 <= std_logic_vector(unsigned(trunc_ln1027_23_fu_598_p1) + unsigned(trunc_ln1027_18_reg_932));
    add_ln29_fu_607_p2 <= std_logic_vector(unsigned(trunc_ln1027_22_fu_594_p1) + unsigned(trunc_ln1027_21_fu_590_p1));
    add_ln30_fu_613_p2 <= std_logic_vector(unsigned(add_ln29_fu_607_p2) + unsigned(ap_const_lv12_8));
    add_ln328_fu_714_p2 <= std_logic_vector(unsigned(tmp_s_fu_692_p3) + unsigned(add_ln29_reg_972));
    add_ln388_5_fu_719_p2 <= std_logic_vector(unsigned(tmp_s_fu_692_p3) + unsigned(add_ln30_reg_978));
    add_ln388_6_fu_729_p2 <= std_logic_vector(unsigned(tmp_fu_685_p3) + unsigned(add_ln30_reg_978));
    add_ln388_fu_704_p2 <= std_logic_vector(unsigned(tmp_fu_685_p3) + unsigned(add_ln29_reg_972));
    add_ln47_fu_637_p2 <= std_logic_vector(unsigned(select_ln1027_fu_560_p3) + unsigned(ap_const_lv32_10));
    add_ln57_fu_443_p2 <= std_logic_vector(unsigned(m1_fu_90) + unsigned(ap_const_lv32_10));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln1027_fu_411_p2)
    begin
        if (((icmp_ln1027_fu_411_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter12_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, icmp_ln1027_reg_916_pp0_iter11_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_916_pp0_iter11_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter12_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter12_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter12_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg, ap_loop_exit_ready_pp0_iter2_reg, ap_loop_exit_ready_pp0_iter3_reg, ap_loop_exit_ready_pp0_iter4_reg, ap_loop_exit_ready_pp0_iter5_reg, ap_loop_exit_ready_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg, ap_loop_exit_ready_pp0_iter8_reg, ap_loop_exit_ready_pp0_iter9_reg, ap_loop_exit_ready_pp0_iter10_reg, ap_loop_exit_ready_pp0_iter11_reg, ap_loop_exit_ready_pp0_iter12_reg)
    begin
        if (not(((ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter11_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_0) and (ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to11_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to11 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to13_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to13 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to13 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln36_3_fu_799_p1 <= grp_fu_274_p2;
    bitcast_ln36_fu_795_p1 <= grp_fu_270_p2;
    bitcast_ln37_3_fu_815_p1 <= grp_fu_282_p2;
    bitcast_ln37_fu_811_p1 <= grp_fu_278_p2;
    bitcast_ln38_3_fu_831_p1 <= grp_fu_298_p2;
    bitcast_ln38_fu_827_p1 <= grp_fu_294_p2;
    bitcast_ln39_3_fu_847_p1 <= grp_fu_310_p2;
    bitcast_ln39_fu_843_p1 <= grp_fu_306_p2;

    grp_fu_258_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul6_i_i_reg_1126, mul6_i_i5_reg_1146, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_258_p0 <= mul6_i_i5_reg_1146;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_258_p0 <= mul6_i_i_reg_1126;
        else 
            grp_fu_258_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_258_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul9_i_i_reg_1131, mul9_i_i5_reg_1151, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_258_p1 <= mul9_i_i5_reg_1151;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_258_p1 <= mul9_i_i_reg_1131;
        else 
            grp_fu_258_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_262_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, mul6_i_i6_reg_1166, p_r_M_imag_69_reg_1210, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_262_p0 <= p_r_M_imag_69_reg_1210;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_262_p0 <= mul6_i_i6_reg_1166;
        else 
            grp_fu_262_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_262_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, mul9_i_i6_reg_1171, p_r_M_imag_81_reg_1216, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_262_p1 <= p_r_M_imag_81_reg_1216;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_262_p1 <= mul9_i_i6_reg_1171;
        else 
            grp_fu_262_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_266_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, p_r_reg_1186, p_r_M_real_63_reg_1204, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter7 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_266_p0 <= p_r_reg_1186;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_266_p0 <= p_r_M_real_63_reg_1204;
            else 
                grp_fu_266_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_266_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_266_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, p_r_7_reg_1198, p_r_8_reg_1222, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter7 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_266_p1 <= p_r_8_reg_1222;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_266_p1 <= p_r_7_reg_1198;
            else 
                grp_fu_266_p1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_266_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_270_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_M_imag_71_reg_1192, p_r_M_real_72_reg_1234, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_270_p0 <= p_r_M_real_72_reg_1234;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_270_p0 <= p_r_M_imag_71_reg_1192;
        else 
            grp_fu_270_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_270_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_M_imag_82_reg_1228, p_r_M_real_75_reg_1252, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_270_p1 <= p_r_M_real_75_reg_1252;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_270_p1 <= p_r_M_imag_82_reg_1228;
        else 
            grp_fu_270_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_286_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul_i_i_reg_1116, mul_i_i6_reg_1156, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_286_p0 <= mul_i_i6_reg_1156;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_286_p0 <= mul_i_i_reg_1116;
        else 
            grp_fu_286_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_286_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul3_i_i_reg_1121, mul3_i_i6_reg_1161, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_286_p1 <= mul3_i_i6_reg_1161;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_286_p1 <= mul3_i_i_reg_1121;
        else 
            grp_fu_286_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_290_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, mul_i_i5_reg_1136, p_r_M_real_63_reg_1204, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_290_p0 <= p_r_M_real_63_reg_1204;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_290_p0 <= mul_i_i5_reg_1136;
        else 
            grp_fu_290_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_290_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, mul3_i_i5_reg_1141, p_r_7_reg_1198, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_290_p1 <= p_r_7_reg_1198;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_290_p1 <= mul3_i_i5_reg_1141;
        else 
            grp_fu_290_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_294_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_M_imag_69_reg_1210, p_r_M_real_72_reg_1234, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_294_p0 <= p_r_M_real_72_reg_1234;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_294_p0 <= p_r_M_imag_69_reg_1210;
        else 
            grp_fu_294_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_294_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_M_imag_81_reg_1216, p_r_M_real_75_reg_1252, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_294_p1 <= p_r_M_real_75_reg_1252;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_294_p1 <= p_r_M_imag_81_reg_1216;
        else 
            grp_fu_294_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_298_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_reg_1186, p_r_M_imag_78_reg_1246, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_298_p0 <= p_r_M_imag_78_reg_1246;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_298_p0 <= p_r_reg_1186;
        else 
            grp_fu_298_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_298_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_8_reg_1222, p_r_M_imag_83_reg_1258, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_298_p1 <= p_r_M_imag_83_reg_1258;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_298_p1 <= p_r_8_reg_1222;
        else 
            grp_fu_298_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_314_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_real_reg_1058, p_r_M_real_59_reg_1080, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_314_p0 <= p_r_M_real_59_reg_1080;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_314_p0 <= p_r_M_real_reg_1058;
        else 
            grp_fu_314_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_314_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w_7_load_reg_984, w2_M_imag_reg_1042, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_314_p1 <= w2_M_imag_reg_1042;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_314_p1 <= w_7_load_reg_984;
        else 
            grp_fu_314_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_318_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_imag_reg_1064, p_r_M_imag_65_reg_1086, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_318_p0 <= p_r_M_imag_65_reg_1086;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_318_p0 <= p_r_M_imag_reg_1064;
        else 
            grp_fu_318_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_318_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w_12_load_reg_990, w2_M_real_reg_1036, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_318_p1 <= w2_M_real_reg_1036;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_318_p1 <= w_12_load_reg_990;
        else 
            grp_fu_318_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_322_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_real_reg_1058, p_r_M_real_61_reg_1104, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_322_p0 <= p_r_M_real_61_reg_1104;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_322_p0 <= p_r_M_real_reg_1058;
        else 
            grp_fu_322_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_322_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w_12_load_reg_990, w12_M_real_reg_1092, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_322_p1 <= w12_M_real_reg_1092;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_322_p1 <= w_12_load_reg_990;
        else 
            grp_fu_322_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_326_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_imag_reg_1064, p_r_M_imag_67_reg_1110, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_326_p0 <= p_r_M_imag_67_reg_1110;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_326_p0 <= p_r_M_imag_reg_1064;
        else 
            grp_fu_326_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_326_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w_7_load_reg_984, w12_M_imag_reg_1098, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_326_p1 <= w12_M_imag_reg_1098;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_326_p1 <= w_7_load_reg_984;
        else 
            grp_fu_326_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_330_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_real_59_reg_1080, p_r_M_real_61_reg_1104, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_330_p0 <= p_r_M_real_61_reg_1104;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_330_p0 <= p_r_M_real_59_reg_1080;
        else 
            grp_fu_330_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_330_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w2_M_real_reg_1036, w12_M_imag_reg_1098, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_330_p1 <= w12_M_imag_reg_1098;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_330_p1 <= w2_M_real_reg_1036;
        else 
            grp_fu_330_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_334_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_imag_65_reg_1086, p_r_M_imag_67_reg_1110, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_334_p0 <= p_r_M_imag_67_reg_1110;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_334_p0 <= p_r_M_imag_65_reg_1086;
        else 
            grp_fu_334_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_334_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w2_M_imag_reg_1042, w12_M_real_reg_1092, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_334_p1 <= w12_M_real_reg_1092;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_334_p1 <= w2_M_imag_reg_1042;
        else 
            grp_fu_334_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_338_p4 <= I_q1(31 downto 16);
    grp_fu_348_p4 <= I_q0(31 downto 16);
    icmp_ln1027_8_fu_481_p2 <= "1" when (k2_fu_74 = trunc_ln17) else "0";
    icmp_ln1027_fu_411_p2 <= "1" when (indvar_flatten_fu_94 = bound) else "0";
    icmp_ln40_fu_619_p2 <= "1" when (unsigned(select_ln1027_11_fu_567_p3) < unsigned(ap_const_lv32_7)) else "0";
    icmp_ln44_fu_631_p2 <= "1" when (select_ln1027_11_fu_567_p3 = ap_const_lv32_7) else "0";
    icmp_ln50_fu_425_p2 <= "1" when (unsigned(j1_fu_86) < unsigned(ap_const_lv32_7)) else "0";
    icmp_ln54_fu_437_p2 <= "1" when (j1_fu_86 = ap_const_lv32_7) else "0";
    j1_16_fu_431_p2 <= std_logic_vector(unsigned(j1_fu_86) + unsigned(ap_const_lv32_1));
    j1_17_fu_449_p3 <= 
        ap_const_lv32_0 when (icmp_ln54_fu_437_p2(0) = '1') else 
        j1_fu_86;
    j1_18_fu_465_p3 <= 
        j1_16_fu_431_p2 when (icmp_ln50_fu_425_p2(0) = '1') else 
        j1_17_fu_449_p3;
    j2_7_fu_625_p2 <= std_logic_vector(unsigned(select_ln1027_11_fu_567_p3) + unsigned(ap_const_lv32_1));
    j2_8_fu_643_p3 <= 
        ap_const_lv32_0 when (icmp_ln44_fu_631_p2(0) = '1') else 
        select_ln1027_11_fu_567_p3;
    j2_9_fu_659_p3 <= 
        j2_7_fu_625_p2 when (icmp_ln40_fu_619_p2(0) = '1') else 
        j2_8_fu_643_p3;
    k2_5_fu_526_p3 <= 
        ap_const_lv7_1 when (icmp_ln1027_8_fu_481_p2(0) = '1') else 
        add_ln22_fu_520_p2;
    m1_11_fu_457_p3 <= 
        add_ln57_fu_443_p2 when (icmp_ln54_fu_437_p2(0) = '1') else 
        m1_fu_90;
    m1_12_fu_473_p3 <= 
        m1_fu_90 when (icmp_ln50_fu_425_p2(0) = '1') else 
        m1_11_fu_457_p3;
    m2_5_fu_651_p3 <= 
        add_ln47_fu_637_p2 when (icmp_ln44_fu_631_p2(0) = '1') else 
        select_ln1027_fu_560_p3;
    m2_6_fu_667_p3 <= 
        select_ln1027_fu_560_p3 when (icmp_ln40_fu_619_p2(0) = '1') else 
        m2_5_fu_651_p3;
    p_r_M_imag_65_fu_763_p1 <= grp_fu_348_p4;
    p_r_M_imag_67_fu_775_p1 <= grp_fu_338_p4;
    p_r_M_imag_69_fu_791_p1 <= grp_fu_348_p4;
    p_r_M_imag_fu_747_p1 <= grp_fu_338_p4;
    p_r_M_real_59_fu_759_p1 <= trunc_ln388_11_fu_755_p1;
    p_r_M_real_61_fu_771_p1 <= trunc_ln388_12_fu_767_p1;
    p_r_M_real_63_fu_787_p1 <= trunc_ln328_fu_783_p1;
    p_r_M_real_fu_743_p1 <= trunc_ln388_fu_739_p1;
    select_ln1027_11_fu_567_p3 <= 
        ap_const_lv32_0 when (icmp_ln1027_8_reg_920(0) = '1') else 
        j2_fu_78;
    select_ln1027_12_fu_486_p3 <= 
        j1_18_fu_465_p3 when (icmp_ln1027_8_fu_481_p2(0) = '1') else 
        j1_fu_86;
    select_ln1027_13_fu_574_p3 <= 
        add40_mid1_reg_937 when (icmp_ln1027_8_reg_920(0) = '1') else 
        add40_reg_911;
    select_ln1027_14_fu_512_p3 <= 
        m1_12_fu_473_p3 when (icmp_ln1027_8_fu_481_p2(0) = '1') else 
        m1_fu_90;
    select_ln1027_fu_560_p3 <= 
        ap_const_lv32_0 when (icmp_ln1027_8_reg_920(0) = '1') else 
        m2_fu_82;
    sub3_i_i298_partset_fu_835_p3 <= (bitcast_ln38_3_fu_831_p1 & bitcast_ln38_fu_827_p1);
    sub3_i_i302_partset_fu_851_p3 <= (bitcast_ln39_3_fu_847_p1 & bitcast_ln39_fu_843_p1);
    tmp_fu_685_p3 <= (add_ln1027_2_reg_952 & ap_const_lv6_0);
    tmp_s_fu_692_p3 <= (select_ln1027_13_reg_947 & ap_const_lv6_0);
    trunc_ln1027_17_fu_401_p1 <= j1_fu_86(6 - 1 downto 0);
    trunc_ln1027_18_fu_494_p1 <= select_ln1027_12_fu_486_p3(3 - 1 downto 0);
    trunc_ln1027_19_fu_498_p1 <= m1_12_fu_473_p3(6 - 1 downto 0);
    trunc_ln1027_20_fu_502_p1 <= j1_18_fu_465_p3(6 - 1 downto 0);
    trunc_ln1027_21_fu_590_p1 <= select_ln1027_fu_560_p3(12 - 1 downto 0);
    trunc_ln1027_22_fu_594_p1 <= select_ln1027_11_fu_567_p3(12 - 1 downto 0);
    trunc_ln1027_23_fu_598_p1 <= select_ln1027_11_fu_567_p3(3 - 1 downto 0);
    trunc_ln1027_fu_397_p1 <= m1_fu_90(6 - 1 downto 0);
    trunc_ln328_fu_783_p1 <= I_q0(16 - 1 downto 0);
    trunc_ln388_11_fu_755_p1 <= I_q0(16 - 1 downto 0);
    trunc_ln388_12_fu_767_p1 <= I_q1(16 - 1 downto 0);
    trunc_ln388_fu_739_p1 <= I_q1(16 - 1 downto 0);

    w_12_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln27_fu_699_p1, ap_block_pp0_stage1, zext_ln28_fu_734_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w_12_address0 <= zext_ln28_fu_734_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            w_12_address0 <= zext_ln27_fu_699_p1(5 - 1 downto 0);
        else 
            w_12_address0 <= "XXXXX";
        end if; 
    end process;

    w_12_address1 <= zext_ln1027_fu_585_p1(5 - 1 downto 0);

    w_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w_12_ce0 <= ap_const_logic_1;
        else 
            w_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w_12_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w_12_ce1 <= ap_const_logic_1;
        else 
            w_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    w_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln27_fu_699_p1, ap_block_pp0_stage1, zext_ln28_fu_734_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w_7_address0 <= zext_ln28_fu_734_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            w_7_address0 <= zext_ln27_fu_699_p1(5 - 1 downto 0);
        else 
            w_7_address0 <= "XXXXX";
        end if; 
    end process;

    w_7_address1 <= zext_ln1027_fu_585_p1(5 - 1 downto 0);

    w_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w_7_ce0 <= ap_const_logic_1;
        else 
            w_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w_7_ce1 <= ap_const_logic_1;
        else 
            w_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1027_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1027_12_reg_927),64));
    zext_ln27_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1027_11_reg_942),64));
    zext_ln28_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_reg_967),64));
    zext_ln328_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln328_reg_1016_pp0_iter5_reg),64));
    zext_ln388_10_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln388_6_reg_1031),64));
    zext_ln388_9_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln388_5_fu_719_p2),64));
    zext_ln388_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln388_fu_704_p2),64));
end behav;
