-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity IFFT_AP_fft_stage_1_Pipeline_SKIP_X_SKIP_Y is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bound : IN STD_LOGIC_VECTOR (13 downto 0);
    trunc_ln17 : IN STD_LOGIC_VECTOR (6 downto 0);
    I_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    I_ce0 : OUT STD_LOGIC;
    I_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    I_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    I_ce1 : OUT STD_LOGIC;
    I_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    X_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    X_ce0 : OUT STD_LOGIC;
    X_we0 : OUT STD_LOGIC;
    X_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    X_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    X_ce1 : OUT STD_LOGIC;
    X_we1 : OUT STD_LOGIC;
    X_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of IFFT_AP_fft_stage_1_Pipeline_SKIP_X_SKIP_Y is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln1027_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal w_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ce0 : STD_LOGIC;
    signal w_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_ce1 : STD_LOGIC;
    signal w_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_10_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_10_ce0 : STD_LOGIC;
    signal w_10_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_10_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_10_ce1 : STD_LOGIC;
    signal w_10_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add40_fu_405_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add40_reg_903 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln1027_reg_908 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_908_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_908_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_908_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_908_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_908_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_908_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_908_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_908_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_908_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_908_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_908_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_10_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_10_reg_912 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1027_20_fu_482_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_20_reg_919 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1027_32_fu_490_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1027_32_reg_924 : STD_LOGIC_VECTOR (0 downto 0);
    signal add40_mid1_fu_502_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add40_mid1_reg_929 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln1027_19_fu_563_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_19_reg_934 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_21_fu_570_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln1027_21_reg_939 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1027_4_fu_575_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1027_4_reg_944 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln28_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln28_reg_949 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln29_fu_598_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln29_reg_954 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln30_fu_604_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln30_reg_960 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln388_fu_701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_986 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_986_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_986_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_986_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_986_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_986_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_986_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_986_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_986_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_986_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_986_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_986_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln328_fu_706_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_996 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_996_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_996_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_996_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_996_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln388_13_fu_716_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_13_reg_1001 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_13_reg_1001_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_13_reg_1001_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_13_reg_1001_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_13_reg_1001_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_13_reg_1001_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_13_reg_1001_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_13_reg_1001_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_13_reg_1001_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_13_reg_1001_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_13_reg_1001_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln388_10_fu_721_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln388_10_reg_1011 : STD_LOGIC_VECTOR (11 downto 0);
    signal w_load_reg_1016 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_10_load_reg_1022 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_M_real_reg_1028 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_M_imag_reg_1034 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_fu_735_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_reg_1050 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_fu_739_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_reg_1056 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln388_14_fu_743_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_14_reg_1062 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_14_reg_1062_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_14_reg_1062_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_14_reg_1062_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_14_reg_1062_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_14_reg_1062_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_14_reg_1062_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_14_reg_1062_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_14_reg_1062_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_14_reg_1062_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_14_reg_1062_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal p_r_M_real_97_fu_751_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_97_reg_1072 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_107_fu_755_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_107_reg_1078 : STD_LOGIC_VECTOR (15 downto 0);
    signal w12_M_real_reg_1084 : STD_LOGIC_VECTOR (15 downto 0);
    signal w12_M_imag_reg_1090 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_99_fu_763_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_99_reg_1096 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_109_fu_767_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_109_reg_1102 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_314_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_i_i_reg_1108 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_318_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul3_i_i_reg_1113 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_322_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul6_i_i_reg_1118 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_326_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul9_i_i_reg_1123 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_330_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_i_i9_reg_1128 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_334_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul3_i_i9_reg_1133 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul6_i_i9_reg_1138 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul9_i_i9_reg_1143 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_i_i1_reg_1148 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul3_i_i1_reg_1153 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul6_i_i1_reg_1158 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul9_i_i1_reg_1163 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln328_fu_771_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1168 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1168_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1168_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1168_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1168_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1168_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1168_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_286_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_reg_1178 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_258_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_113_reg_1184 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_290_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_11_reg_1190 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_101_fu_779_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_101_reg_1196 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_111_fu_783_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_111_reg_1202 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_123_reg_1208 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_12_reg_1214 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_262_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_124_reg_1220 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_266_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_110_reg_1226 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_108_reg_1232 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_108_reg_1232_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_120_reg_1238 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_113_reg_1244 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_270_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_125_reg_1250 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_294_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_118_reg_1256 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_298_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_114_reg_1262 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_302_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_126_reg_1268 : STD_LOGIC_VECTOR (15 downto 0);
    signal add3_i_i290_partset_fu_795_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_i_i290_partset_reg_1274 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_i_i294_partset_fu_811_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_i_i294_partset_reg_1279 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i298_partset_fu_827_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i298_partset_reg_1284 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i302_partset_fu_843_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i302_partset_reg_1289 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln1027_fu_686_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln27_fu_691_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_fu_726_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal k2_fu_74 : STD_LOGIC_VECTOR (6 downto 0);
    signal k2_7_fu_522_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal j2_fu_78 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_13_fu_646_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m2_fu_82 : STD_LOGIC_VECTOR (31 downto 0);
    signal m2_10_fu_654_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_fu_86 : STD_LOGIC_VECTOR (31 downto 0);
    signal m1_fu_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_22_fu_508_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_fu_94 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1027_fu_416_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_258_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_258_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_262_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_262_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_266_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_266_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_270_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_270_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_286_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_286_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_290_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_290_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_294_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_294_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_298_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_298_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_314_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_314_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_318_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_318_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_322_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_322_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_326_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_326_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_330_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_330_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_334_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_334_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1027_31_fu_401_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1027_fu_397_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln54_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln57_fu_437_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln50_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln50_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln50_fu_451_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal m1_17_fu_443_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_24_fu_461_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m1_18_fu_469_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1027_34_fu_498_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1027_33_fu_494_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln22_fu_516_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1027_fu_556_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1027_37_fu_589_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1027_36_fu_585_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1027_35_fu_581_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln44_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln47_fu_622_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln40_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln40_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln40_fu_636_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal m2_9_fu_628_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_672_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln388_fu_696_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_679_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln388_9_fu_711_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln388_fu_731_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_338_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln388_15_fu_747_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_348_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln388_16_fu_759_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln328_fu_775_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_274_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln36_5_fu_791_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln36_fu_787_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_278_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_282_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln37_5_fu_807_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln37_fu_803_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln38_5_fu_823_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln38_fu_819_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_306_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_310_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln39_5_fu_839_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln39_fu_835_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter12_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to11 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to13 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_fft_stage_1_Pipeline_SKIP_X_SKIP_Y_w_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_fft_stage_1_Pipeline_SKIP_X_SKIP_Y_w_10_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    w_U : component IFFT_AP_fft_stage_1_Pipeline_SKIP_X_SKIP_Y_w_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w_address0,
        ce0 => w_ce0,
        q0 => w_q0,
        address1 => w_address1,
        ce1 => w_ce1,
        q1 => w_q1);

    w_10_U : component IFFT_AP_fft_stage_1_Pipeline_SKIP_X_SKIP_Y_w_10_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w_10_address0,
        ce0 => w_10_ce0,
        q0 => w_10_q0,
        address1 => w_10_address1,
        ce1 => w_10_ce1,
        q1 => w_10_q1);

    hadd_16ns_16ns_16_5_full_dsp_1_U68 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_258_p0,
        din1 => grp_fu_258_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_258_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U69 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_262_p0,
        din1 => grp_fu_262_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_262_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U70 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_266_p0,
        din1 => grp_fu_266_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_266_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U71 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_270_p0,
        din1 => grp_fu_270_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_270_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U72 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_120_reg_1238,
        din1 => p_r_M_imag_125_reg_1250,
        ce => ap_const_logic_1,
        dout => grp_fu_274_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U73 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_real_108_reg_1232,
        din1 => p_r_M_real_114_reg_1262,
        ce => ap_const_logic_1,
        dout => grp_fu_278_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U74 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_118_reg_1256,
        din1 => p_r_M_imag_126_reg_1268,
        ce => ap_const_logic_1,
        dout => grp_fu_282_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U75 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_286_p0,
        din1 => grp_fu_286_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_286_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U76 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_290_p0,
        din1 => grp_fu_290_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_290_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U77 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_294_p0,
        din1 => grp_fu_294_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_294_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U78 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_298_p0,
        din1 => grp_fu_298_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_298_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U79 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_113_reg_1184,
        din1 => p_r_M_imag_124_reg_1220,
        ce => ap_const_logic_1,
        dout => grp_fu_302_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U80 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_real_108_reg_1232_pp0_iter10_reg,
        din1 => p_r_M_real_114_reg_1262,
        ce => ap_const_logic_1,
        dout => grp_fu_306_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U81 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_118_reg_1256,
        din1 => p_r_M_imag_126_reg_1268,
        ce => ap_const_logic_1,
        dout => grp_fu_310_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U82 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_314_p0,
        din1 => grp_fu_314_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_314_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U83 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_318_p0,
        din1 => grp_fu_318_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_318_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U84 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_322_p0,
        din1 => grp_fu_322_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_322_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U85 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_326_p0,
        din1 => grp_fu_326_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_326_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U86 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_330_p0,
        din1 => grp_fu_330_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_330_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U87 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_334_p0,
        din1 => grp_fu_334_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_334_p2);

    flow_control_loop_pipe_sequential_init_U : component IFFT_AP_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter11_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter12_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_fu_94 <= ap_const_lv14_0;
            elsif (((icmp_ln1027_fu_411_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                indvar_flatten_fu_94 <= add_ln1027_fu_416_p2;
            end if; 
        end if;
    end process;

    j1_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j1_fu_86 <= ap_const_lv32_0;
            elsif (((icmp_ln1027_fu_411_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                j1_fu_86 <= select_ln1027_20_fu_482_p3;
            end if; 
        end if;
    end process;

    j2_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    j2_fu_78 <= ap_const_lv32_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_908 = ap_const_lv1_0))) then 
                    j2_fu_78 <= j2_13_fu_646_p3;
                end if;
            end if; 
        end if;
    end process;

    k2_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                k2_fu_74 <= ap_const_lv7_0;
            elsif (((icmp_ln1027_fu_411_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                k2_fu_74 <= k2_7_fu_522_p3;
            end if; 
        end if;
    end process;

    m1_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                m1_fu_90 <= ap_const_lv32_0;
            elsif (((icmp_ln1027_fu_411_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                m1_fu_90 <= select_ln1027_22_fu_508_p3;
            end if; 
        end if;
    end process;

    m2_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    m2_fu_82 <= ap_const_lv32_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_908 = ap_const_lv1_0))) then 
                    m2_fu_82 <= m2_10_fu_654_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add3_i_i290_partset_reg_1274 <= add3_i_i290_partset_fu_795_p3;
                add3_i_i294_partset_reg_1279 <= add3_i_i294_partset_fu_811_p3;
                p_r_M_imag_107_reg_1078 <= p_r_M_imag_107_fu_755_p1;
                p_r_M_imag_reg_1056 <= p_r_M_imag_fu_739_p1;
                p_r_M_real_108_reg_1232_pp0_iter10_reg <= p_r_M_real_108_reg_1232;
                p_r_M_real_97_reg_1072 <= p_r_M_real_97_fu_751_p1;
                p_r_M_real_reg_1050 <= p_r_M_real_fu_735_p1;
                sub3_i_i298_partset_reg_1284 <= sub3_i_i298_partset_fu_827_p3;
                    zext_ln328_reg_1168(11 downto 0) <= zext_ln328_fu_771_p1(11 downto 0);
                    zext_ln328_reg_1168_pp0_iter10_reg(11 downto 0) <= zext_ln328_reg_1168_pp0_iter9_reg(11 downto 0);
                    zext_ln328_reg_1168_pp0_iter11_reg(11 downto 0) <= zext_ln328_reg_1168_pp0_iter10_reg(11 downto 0);
                    zext_ln328_reg_1168_pp0_iter12_reg(11 downto 0) <= zext_ln328_reg_1168_pp0_iter11_reg(11 downto 0);
                    zext_ln328_reg_1168_pp0_iter7_reg(11 downto 0) <= zext_ln328_reg_1168(11 downto 0);
                    zext_ln328_reg_1168_pp0_iter8_reg(11 downto 0) <= zext_ln328_reg_1168_pp0_iter7_reg(11 downto 0);
                    zext_ln328_reg_1168_pp0_iter9_reg(11 downto 0) <= zext_ln328_reg_1168_pp0_iter8_reg(11 downto 0);
                    zext_ln388_14_reg_1062(11 downto 0) <= zext_ln388_14_fu_743_p1(11 downto 0);
                    zext_ln388_14_reg_1062_pp0_iter10_reg(11 downto 0) <= zext_ln388_14_reg_1062_pp0_iter9_reg(11 downto 0);
                    zext_ln388_14_reg_1062_pp0_iter11_reg(11 downto 0) <= zext_ln388_14_reg_1062_pp0_iter10_reg(11 downto 0);
                    zext_ln388_14_reg_1062_pp0_iter12_reg(11 downto 0) <= zext_ln388_14_reg_1062_pp0_iter11_reg(11 downto 0);
                    zext_ln388_14_reg_1062_pp0_iter3_reg(11 downto 0) <= zext_ln388_14_reg_1062(11 downto 0);
                    zext_ln388_14_reg_1062_pp0_iter4_reg(11 downto 0) <= zext_ln388_14_reg_1062_pp0_iter3_reg(11 downto 0);
                    zext_ln388_14_reg_1062_pp0_iter5_reg(11 downto 0) <= zext_ln388_14_reg_1062_pp0_iter4_reg(11 downto 0);
                    zext_ln388_14_reg_1062_pp0_iter6_reg(11 downto 0) <= zext_ln388_14_reg_1062_pp0_iter5_reg(11 downto 0);
                    zext_ln388_14_reg_1062_pp0_iter7_reg(11 downto 0) <= zext_ln388_14_reg_1062_pp0_iter6_reg(11 downto 0);
                    zext_ln388_14_reg_1062_pp0_iter8_reg(11 downto 0) <= zext_ln388_14_reg_1062_pp0_iter7_reg(11 downto 0);
                    zext_ln388_14_reg_1062_pp0_iter9_reg(11 downto 0) <= zext_ln388_14_reg_1062_pp0_iter8_reg(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_fu_411_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add40_mid1_reg_929 <= add40_mid1_fu_502_p2;
                icmp_ln1027_10_reg_912 <= icmp_ln1027_10_fu_477_p2;
                select_ln1027_20_reg_919 <= select_ln1027_20_fu_482_p3;
                trunc_ln1027_32_reg_924 <= trunc_ln1027_32_fu_490_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add40_reg_903 <= add40_fu_405_p2;
                add_ln328_reg_996 <= add_ln328_fu_706_p2;
                add_ln328_reg_996_pp0_iter2_reg <= add_ln328_reg_996;
                add_ln328_reg_996_pp0_iter3_reg <= add_ln328_reg_996_pp0_iter2_reg;
                add_ln328_reg_996_pp0_iter4_reg <= add_ln328_reg_996_pp0_iter3_reg;
                add_ln328_reg_996_pp0_iter5_reg <= add_ln328_reg_996_pp0_iter4_reg;
                add_ln388_10_reg_1011 <= add_ln388_10_fu_721_p2;
                icmp_ln1027_reg_908 <= icmp_ln1027_fu_411_p2;
                icmp_ln1027_reg_908_pp0_iter10_reg <= icmp_ln1027_reg_908_pp0_iter9_reg;
                icmp_ln1027_reg_908_pp0_iter11_reg <= icmp_ln1027_reg_908_pp0_iter10_reg;
                icmp_ln1027_reg_908_pp0_iter1_reg <= icmp_ln1027_reg_908;
                icmp_ln1027_reg_908_pp0_iter2_reg <= icmp_ln1027_reg_908_pp0_iter1_reg;
                icmp_ln1027_reg_908_pp0_iter3_reg <= icmp_ln1027_reg_908_pp0_iter2_reg;
                icmp_ln1027_reg_908_pp0_iter4_reg <= icmp_ln1027_reg_908_pp0_iter3_reg;
                icmp_ln1027_reg_908_pp0_iter5_reg <= icmp_ln1027_reg_908_pp0_iter4_reg;
                icmp_ln1027_reg_908_pp0_iter6_reg <= icmp_ln1027_reg_908_pp0_iter5_reg;
                icmp_ln1027_reg_908_pp0_iter7_reg <= icmp_ln1027_reg_908_pp0_iter6_reg;
                icmp_ln1027_reg_908_pp0_iter8_reg <= icmp_ln1027_reg_908_pp0_iter7_reg;
                icmp_ln1027_reg_908_pp0_iter9_reg <= icmp_ln1027_reg_908_pp0_iter8_reg;
                p_r_M_imag_109_reg_1102 <= p_r_M_imag_109_fu_767_p1;
                p_r_M_imag_111_reg_1202 <= p_r_M_imag_111_fu_783_p1;
                p_r_M_imag_126_reg_1268 <= grp_fu_302_p2;
                p_r_M_real_101_reg_1196 <= p_r_M_real_101_fu_779_p1;
                p_r_M_real_99_reg_1096 <= p_r_M_real_99_fu_763_p1;
                sub3_i_i302_partset_reg_1289 <= sub3_i_i302_partset_fu_843_p3;
                    zext_ln388_13_reg_1001(11 downto 0) <= zext_ln388_13_fu_716_p1(11 downto 0);
                    zext_ln388_13_reg_1001_pp0_iter10_reg(11 downto 0) <= zext_ln388_13_reg_1001_pp0_iter9_reg(11 downto 0);
                    zext_ln388_13_reg_1001_pp0_iter11_reg(11 downto 0) <= zext_ln388_13_reg_1001_pp0_iter10_reg(11 downto 0);
                    zext_ln388_13_reg_1001_pp0_iter2_reg(11 downto 0) <= zext_ln388_13_reg_1001(11 downto 0);
                    zext_ln388_13_reg_1001_pp0_iter3_reg(11 downto 0) <= zext_ln388_13_reg_1001_pp0_iter2_reg(11 downto 0);
                    zext_ln388_13_reg_1001_pp0_iter4_reg(11 downto 0) <= zext_ln388_13_reg_1001_pp0_iter3_reg(11 downto 0);
                    zext_ln388_13_reg_1001_pp0_iter5_reg(11 downto 0) <= zext_ln388_13_reg_1001_pp0_iter4_reg(11 downto 0);
                    zext_ln388_13_reg_1001_pp0_iter6_reg(11 downto 0) <= zext_ln388_13_reg_1001_pp0_iter5_reg(11 downto 0);
                    zext_ln388_13_reg_1001_pp0_iter7_reg(11 downto 0) <= zext_ln388_13_reg_1001_pp0_iter6_reg(11 downto 0);
                    zext_ln388_13_reg_1001_pp0_iter8_reg(11 downto 0) <= zext_ln388_13_reg_1001_pp0_iter7_reg(11 downto 0);
                    zext_ln388_13_reg_1001_pp0_iter9_reg(11 downto 0) <= zext_ln388_13_reg_1001_pp0_iter8_reg(11 downto 0);
                    zext_ln388_reg_986(11 downto 0) <= zext_ln388_fu_701_p1(11 downto 0);
                    zext_ln388_reg_986_pp0_iter10_reg(11 downto 0) <= zext_ln388_reg_986_pp0_iter9_reg(11 downto 0);
                    zext_ln388_reg_986_pp0_iter11_reg(11 downto 0) <= zext_ln388_reg_986_pp0_iter10_reg(11 downto 0);
                    zext_ln388_reg_986_pp0_iter12_reg(11 downto 0) <= zext_ln388_reg_986_pp0_iter11_reg(11 downto 0);
                    zext_ln388_reg_986_pp0_iter2_reg(11 downto 0) <= zext_ln388_reg_986(11 downto 0);
                    zext_ln388_reg_986_pp0_iter3_reg(11 downto 0) <= zext_ln388_reg_986_pp0_iter2_reg(11 downto 0);
                    zext_ln388_reg_986_pp0_iter4_reg(11 downto 0) <= zext_ln388_reg_986_pp0_iter3_reg(11 downto 0);
                    zext_ln388_reg_986_pp0_iter5_reg(11 downto 0) <= zext_ln388_reg_986_pp0_iter4_reg(11 downto 0);
                    zext_ln388_reg_986_pp0_iter6_reg(11 downto 0) <= zext_ln388_reg_986_pp0_iter5_reg(11 downto 0);
                    zext_ln388_reg_986_pp0_iter7_reg(11 downto 0) <= zext_ln388_reg_986_pp0_iter6_reg(11 downto 0);
                    zext_ln388_reg_986_pp0_iter8_reg(11 downto 0) <= zext_ln388_reg_986_pp0_iter7_reg(11 downto 0);
                    zext_ln388_reg_986_pp0_iter9_reg(11 downto 0) <= zext_ln388_reg_986_pp0_iter8_reg(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_908 = ap_const_lv1_0))) then
                add_ln1027_4_reg_944 <= add_ln1027_4_fu_575_p2;
                add_ln29_reg_954 <= add_ln29_fu_598_p2;
                add_ln30_reg_960 <= add_ln30_fu_604_p2;
                select_ln1027_19_reg_934 <= select_ln1027_19_fu_563_p3;
                select_ln1027_21_reg_939 <= select_ln1027_21_fu_570_p3;
                xor_ln28_reg_949 <= xor_ln28_fu_593_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul3_i_i1_reg_1153 <= grp_fu_326_p2;
                mul6_i_i1_reg_1158 <= grp_fu_330_p2;
                mul6_i_i9_reg_1138 <= grp_fu_314_p2;
                mul9_i_i1_reg_1163 <= grp_fu_334_p2;
                mul9_i_i9_reg_1143 <= grp_fu_318_p2;
                mul_i_i1_reg_1148 <= grp_fu_322_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul3_i_i9_reg_1133 <= grp_fu_334_p2;
                mul3_i_i_reg_1113 <= grp_fu_318_p2;
                mul6_i_i_reg_1118 <= grp_fu_322_p2;
                mul9_i_i_reg_1123 <= grp_fu_326_p2;
                mul_i_i9_reg_1128 <= grp_fu_330_p2;
                mul_i_i_reg_1108 <= grp_fu_314_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_r_11_reg_1190 <= grp_fu_290_p2;
                p_r_M_imag_113_reg_1184 <= grp_fu_258_p2;
                p_r_reg_1178 <= grp_fu_286_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_r_12_reg_1214 <= grp_fu_286_p2;
                p_r_M_imag_123_reg_1208 <= grp_fu_258_p2;
                p_r_M_imag_124_reg_1220 <= grp_fu_262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_r_M_imag_118_reg_1256 <= grp_fu_294_p2;
                p_r_M_imag_120_reg_1238 <= grp_fu_262_p2;
                p_r_M_imag_125_reg_1250 <= grp_fu_270_p2;
                p_r_M_real_113_reg_1244 <= grp_fu_266_p2;
                p_r_M_real_114_reg_1262 <= grp_fu_298_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_r_M_real_108_reg_1232 <= grp_fu_290_p2;
                p_r_M_real_110_reg_1226 <= grp_fu_266_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                w12_M_imag_reg_1090 <= w_10_q0;
                w12_M_real_reg_1084 <= w_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                w2_M_imag_reg_1034 <= w_10_q0;
                w2_M_real_reg_1028 <= w_q0;
                w_10_load_reg_1022 <= w_10_q1;
                w_load_reg_1016 <= w_q1;
            end if;
        end if;
    end process;
    zext_ln388_reg_986(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_986_pp0_iter2_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_986_pp0_iter3_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_986_pp0_iter4_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_986_pp0_iter5_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_986_pp0_iter6_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_986_pp0_iter7_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_986_pp0_iter8_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_986_pp0_iter9_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_986_pp0_iter10_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_986_pp0_iter11_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_986_pp0_iter12_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_13_reg_1001(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_13_reg_1001_pp0_iter2_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_13_reg_1001_pp0_iter3_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_13_reg_1001_pp0_iter4_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_13_reg_1001_pp0_iter5_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_13_reg_1001_pp0_iter6_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_13_reg_1001_pp0_iter7_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_13_reg_1001_pp0_iter8_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_13_reg_1001_pp0_iter9_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_13_reg_1001_pp0_iter10_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_13_reg_1001_pp0_iter11_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_14_reg_1062(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_14_reg_1062_pp0_iter3_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_14_reg_1062_pp0_iter4_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_14_reg_1062_pp0_iter5_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_14_reg_1062_pp0_iter6_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_14_reg_1062_pp0_iter7_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_14_reg_1062_pp0_iter8_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_14_reg_1062_pp0_iter9_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_14_reg_1062_pp0_iter10_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_14_reg_1062_pp0_iter11_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_14_reg_1062_pp0_iter12_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1168(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1168_pp0_iter7_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1168_pp0_iter8_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1168_pp0_iter9_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1168_pp0_iter10_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1168_pp0_iter11_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1168_pp0_iter12_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter12_stage0, ap_idle_pp0_0to11, ap_idle_pp0_1to13, ap_done_pending_pp0, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_idle_pp0_1to13 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    I_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, zext_ln388_13_fu_716_p1, zext_ln328_fu_771_p1, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            I_address0 <= zext_ln328_fu_771_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            I_address0 <= zext_ln388_13_fu_716_p1(12 - 1 downto 0);
        else 
            I_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    I_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, zext_ln388_fu_701_p1, zext_ln388_14_fu_743_p1, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            I_address1 <= zext_ln388_14_fu_743_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            I_address1 <= zext_ln388_fu_701_p1(12 - 1 downto 0);
        else 
            I_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    I_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            I_ce0 <= ap_const_logic_1;
        else 
            I_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    I_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            I_ce1 <= ap_const_logic_1;
        else 
            I_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, zext_ln388_13_reg_1001_pp0_iter11_reg, zext_ln388_14_reg_1062_pp0_iter12_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_address0 <= zext_ln388_14_reg_1062_pp0_iter12_reg(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_address0 <= zext_ln388_13_reg_1001_pp0_iter11_reg(12 - 1 downto 0);
        else 
            X_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    X_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, zext_ln388_reg_986_pp0_iter12_reg, zext_ln328_reg_1168_pp0_iter12_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_address1 <= zext_ln388_reg_986_pp0_iter12_reg(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_address1 <= zext_ln328_reg_1168_pp0_iter12_reg(12 - 1 downto 0);
        else 
            X_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    X_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_ce0 <= ap_const_logic_1;
        else 
            X_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_ce1 <= ap_const_logic_1;
        else 
            X_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, add3_i_i294_partset_reg_1279, sub3_i_i302_partset_reg_1289, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_d0 <= sub3_i_i302_partset_reg_1289;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_d0 <= add3_i_i294_partset_reg_1279;
        else 
            X_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, add3_i_i290_partset_reg_1274, sub3_i_i298_partset_reg_1284, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_d1 <= sub3_i_i298_partset_reg_1284;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_d1 <= add3_i_i290_partset_reg_1274;
        else 
            X_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_we0 <= ap_const_logic_1;
        else 
            X_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_we1 <= ap_const_logic_1;
        else 
            X_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add3_i_i290_partset_fu_795_p3 <= (bitcast_ln36_5_fu_791_p1 & bitcast_ln36_fu_787_p1);
    add3_i_i294_partset_fu_811_p3 <= (bitcast_ln37_5_fu_807_p1 & bitcast_ln37_fu_803_p1);
    add40_fu_405_p2 <= std_logic_vector(unsigned(trunc_ln1027_31_fu_401_p1) + unsigned(trunc_ln1027_fu_397_p1));
    add40_mid1_fu_502_p2 <= std_logic_vector(unsigned(trunc_ln1027_34_fu_498_p1) + unsigned(trunc_ln1027_33_fu_494_p1));
    add_ln1027_4_fu_575_p2 <= std_logic_vector(unsigned(select_ln1027_21_fu_570_p3) + unsigned(ap_const_lv6_2));
    add_ln1027_fu_416_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_94) + unsigned(ap_const_lv14_1));
    add_ln22_fu_516_p2 <= std_logic_vector(unsigned(k2_fu_74) + unsigned(ap_const_lv7_1));
    add_ln29_fu_598_p2 <= std_logic_vector(unsigned(trunc_ln1027_36_fu_585_p1) + unsigned(trunc_ln1027_35_fu_581_p1));
    add_ln30_fu_604_p2 <= std_logic_vector(unsigned(add_ln29_fu_598_p2) + unsigned(ap_const_lv12_2));
    add_ln328_fu_706_p2 <= std_logic_vector(unsigned(tmp_s_fu_679_p3) + unsigned(add_ln29_reg_954));
    add_ln388_10_fu_721_p2 <= std_logic_vector(unsigned(tmp_fu_672_p3) + unsigned(add_ln30_reg_960));
    add_ln388_9_fu_711_p2 <= std_logic_vector(unsigned(tmp_s_fu_679_p3) + unsigned(add_ln30_reg_960));
    add_ln388_fu_696_p2 <= std_logic_vector(unsigned(tmp_fu_672_p3) + unsigned(add_ln29_reg_954));
    add_ln47_fu_622_p2 <= std_logic_vector(unsigned(select_ln1027_fu_556_p3) + unsigned(ap_const_lv32_4));
    add_ln57_fu_437_p2 <= std_logic_vector(unsigned(m1_fu_90) + unsigned(ap_const_lv32_4));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln1027_fu_411_p2)
    begin
        if (((icmp_ln1027_fu_411_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter12_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, icmp_ln1027_reg_908_pp0_iter11_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_908_pp0_iter11_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter12_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter12_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter12_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg, ap_loop_exit_ready_pp0_iter2_reg, ap_loop_exit_ready_pp0_iter3_reg, ap_loop_exit_ready_pp0_iter4_reg, ap_loop_exit_ready_pp0_iter5_reg, ap_loop_exit_ready_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg, ap_loop_exit_ready_pp0_iter8_reg, ap_loop_exit_ready_pp0_iter9_reg, ap_loop_exit_ready_pp0_iter10_reg, ap_loop_exit_ready_pp0_iter11_reg, ap_loop_exit_ready_pp0_iter12_reg)
    begin
        if (not(((ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter11_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_0) and (ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to11_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to11 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to13_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to13 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to13 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln36_5_fu_791_p1 <= grp_fu_274_p2;
    bitcast_ln36_fu_787_p1 <= grp_fu_270_p2;
    bitcast_ln37_5_fu_807_p1 <= grp_fu_282_p2;
    bitcast_ln37_fu_803_p1 <= grp_fu_278_p2;
    bitcast_ln38_5_fu_823_p1 <= grp_fu_298_p2;
    bitcast_ln38_fu_819_p1 <= grp_fu_294_p2;
    bitcast_ln39_5_fu_839_p1 <= grp_fu_310_p2;
    bitcast_ln39_fu_835_p1 <= grp_fu_306_p2;

    grp_fu_258_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul6_i_i_reg_1118, mul6_i_i9_reg_1138, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_258_p0 <= mul6_i_i9_reg_1138;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_258_p0 <= mul6_i_i_reg_1118;
        else 
            grp_fu_258_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_258_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul9_i_i_reg_1123, mul9_i_i9_reg_1143, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_258_p1 <= mul9_i_i9_reg_1143;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_258_p1 <= mul9_i_i_reg_1123;
        else 
            grp_fu_258_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_262_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, mul6_i_i1_reg_1158, p_r_M_imag_111_reg_1202, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_262_p0 <= p_r_M_imag_111_reg_1202;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_262_p0 <= mul6_i_i1_reg_1158;
        else 
            grp_fu_262_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_262_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, mul9_i_i1_reg_1163, p_r_M_imag_123_reg_1208, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_262_p1 <= p_r_M_imag_123_reg_1208;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_262_p1 <= mul9_i_i1_reg_1163;
        else 
            grp_fu_262_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_266_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, p_r_reg_1178, p_r_M_real_101_reg_1196, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter7 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_266_p0 <= p_r_reg_1178;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_266_p0 <= p_r_M_real_101_reg_1196;
            else 
                grp_fu_266_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_266_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_266_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, p_r_11_reg_1190, p_r_12_reg_1214, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter7 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_266_p1 <= p_r_12_reg_1214;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_266_p1 <= p_r_11_reg_1190;
            else 
                grp_fu_266_p1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_266_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_270_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_M_imag_113_reg_1184, p_r_M_real_110_reg_1226, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_270_p0 <= p_r_M_real_110_reg_1226;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_270_p0 <= p_r_M_imag_113_reg_1184;
        else 
            grp_fu_270_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_270_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_M_imag_124_reg_1220, p_r_M_real_113_reg_1244, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_270_p1 <= p_r_M_real_113_reg_1244;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_270_p1 <= p_r_M_imag_124_reg_1220;
        else 
            grp_fu_270_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_286_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul_i_i_reg_1108, mul_i_i1_reg_1148, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_286_p0 <= mul_i_i1_reg_1148;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_286_p0 <= mul_i_i_reg_1108;
        else 
            grp_fu_286_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_286_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul3_i_i_reg_1113, mul3_i_i1_reg_1153, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_286_p1 <= mul3_i_i1_reg_1153;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_286_p1 <= mul3_i_i_reg_1113;
        else 
            grp_fu_286_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_290_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, mul_i_i9_reg_1128, p_r_M_real_101_reg_1196, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_290_p0 <= p_r_M_real_101_reg_1196;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_290_p0 <= mul_i_i9_reg_1128;
        else 
            grp_fu_290_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_290_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, mul3_i_i9_reg_1133, p_r_11_reg_1190, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_290_p1 <= p_r_11_reg_1190;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_290_p1 <= mul3_i_i9_reg_1133;
        else 
            grp_fu_290_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_294_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_M_imag_111_reg_1202, p_r_M_real_110_reg_1226, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_294_p0 <= p_r_M_real_110_reg_1226;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_294_p0 <= p_r_M_imag_111_reg_1202;
        else 
            grp_fu_294_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_294_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_M_imag_123_reg_1208, p_r_M_real_113_reg_1244, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_294_p1 <= p_r_M_real_113_reg_1244;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_294_p1 <= p_r_M_imag_123_reg_1208;
        else 
            grp_fu_294_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_298_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_reg_1178, p_r_M_imag_120_reg_1238, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_298_p0 <= p_r_M_imag_120_reg_1238;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_298_p0 <= p_r_reg_1178;
        else 
            grp_fu_298_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_298_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_12_reg_1214, p_r_M_imag_125_reg_1250, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_298_p1 <= p_r_M_imag_125_reg_1250;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_298_p1 <= p_r_12_reg_1214;
        else 
            grp_fu_298_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_314_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_real_reg_1050, p_r_M_real_97_reg_1072, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_314_p0 <= p_r_M_real_97_reg_1072;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_314_p0 <= p_r_M_real_reg_1050;
        else 
            grp_fu_314_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_314_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w_load_reg_1016, w2_M_imag_reg_1034, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_314_p1 <= w2_M_imag_reg_1034;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_314_p1 <= w_load_reg_1016;
        else 
            grp_fu_314_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_318_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_imag_reg_1056, p_r_M_imag_107_reg_1078, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_318_p0 <= p_r_M_imag_107_reg_1078;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_318_p0 <= p_r_M_imag_reg_1056;
        else 
            grp_fu_318_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_318_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w_10_load_reg_1022, w2_M_real_reg_1028, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_318_p1 <= w2_M_real_reg_1028;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_318_p1 <= w_10_load_reg_1022;
        else 
            grp_fu_318_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_322_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_real_reg_1050, p_r_M_real_99_reg_1096, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_322_p0 <= p_r_M_real_99_reg_1096;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_322_p0 <= p_r_M_real_reg_1050;
        else 
            grp_fu_322_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_322_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w_10_load_reg_1022, w12_M_real_reg_1084, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_322_p1 <= w12_M_real_reg_1084;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_322_p1 <= w_10_load_reg_1022;
        else 
            grp_fu_322_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_326_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_imag_reg_1056, p_r_M_imag_109_reg_1102, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_326_p0 <= p_r_M_imag_109_reg_1102;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_326_p0 <= p_r_M_imag_reg_1056;
        else 
            grp_fu_326_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_326_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w_load_reg_1016, w12_M_imag_reg_1090, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_326_p1 <= w12_M_imag_reg_1090;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_326_p1 <= w_load_reg_1016;
        else 
            grp_fu_326_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_330_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_real_97_reg_1072, p_r_M_real_99_reg_1096, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_330_p0 <= p_r_M_real_99_reg_1096;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_330_p0 <= p_r_M_real_97_reg_1072;
        else 
            grp_fu_330_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_330_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w2_M_real_reg_1028, w12_M_imag_reg_1090, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_330_p1 <= w12_M_imag_reg_1090;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_330_p1 <= w2_M_real_reg_1028;
        else 
            grp_fu_330_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_334_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_imag_107_reg_1078, p_r_M_imag_109_reg_1102, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_334_p0 <= p_r_M_imag_109_reg_1102;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_334_p0 <= p_r_M_imag_107_reg_1078;
        else 
            grp_fu_334_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_334_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w2_M_imag_reg_1034, w12_M_real_reg_1084, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_334_p1 <= w12_M_real_reg_1084;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_334_p1 <= w2_M_imag_reg_1034;
        else 
            grp_fu_334_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_338_p4 <= I_q1(31 downto 16);
    grp_fu_348_p4 <= I_q0(31 downto 16);
    icmp_ln1027_10_fu_477_p2 <= "1" when (k2_fu_74 = trunc_ln17) else "0";
    icmp_ln1027_fu_411_p2 <= "1" when (indvar_flatten_fu_94 = bound) else "0";
    icmp_ln40_fu_610_p2 <= "1" when (select_ln1027_19_fu_563_p3 = ap_const_lv32_0) else "0";
    icmp_ln44_fu_616_p2 <= "1" when (select_ln1027_19_fu_563_p3 = ap_const_lv32_1) else "0";
    icmp_ln50_fu_425_p2 <= "1" when (j1_fu_86 = ap_const_lv32_0) else "0";
    icmp_ln54_fu_431_p2 <= "1" when (j1_fu_86 = ap_const_lv32_1) else "0";
    j1_24_fu_461_p3 <= 
        zext_ln50_fu_451_p1 when (or_ln50_fu_455_p2(0) = '1') else 
        j1_fu_86;
    j2_13_fu_646_p3 <= 
        zext_ln40_fu_636_p1 when (or_ln40_fu_640_p2(0) = '1') else 
        select_ln1027_19_fu_563_p3;
    k2_7_fu_522_p3 <= 
        ap_const_lv7_1 when (icmp_ln1027_10_fu_477_p2(0) = '1') else 
        add_ln22_fu_516_p2;
    m1_17_fu_443_p3 <= 
        add_ln57_fu_437_p2 when (icmp_ln54_fu_431_p2(0) = '1') else 
        m1_fu_90;
    m1_18_fu_469_p3 <= 
        m1_fu_90 when (icmp_ln50_fu_425_p2(0) = '1') else 
        m1_17_fu_443_p3;
    m2_10_fu_654_p3 <= 
        select_ln1027_fu_556_p3 when (icmp_ln40_fu_610_p2(0) = '1') else 
        m2_9_fu_628_p3;
    m2_9_fu_628_p3 <= 
        add_ln47_fu_622_p2 when (icmp_ln44_fu_616_p2(0) = '1') else 
        select_ln1027_fu_556_p3;
    or_ln40_fu_640_p2 <= (icmp_ln44_fu_616_p2 or icmp_ln40_fu_610_p2);
    or_ln50_fu_455_p2 <= (icmp_ln54_fu_431_p2 or icmp_ln50_fu_425_p2);
    p_r_M_imag_107_fu_755_p1 <= grp_fu_348_p4;
    p_r_M_imag_109_fu_767_p1 <= grp_fu_338_p4;
    p_r_M_imag_111_fu_783_p1 <= grp_fu_348_p4;
    p_r_M_imag_fu_739_p1 <= grp_fu_338_p4;
    p_r_M_real_101_fu_779_p1 <= trunc_ln328_fu_775_p1;
    p_r_M_real_97_fu_751_p1 <= trunc_ln388_15_fu_747_p1;
    p_r_M_real_99_fu_763_p1 <= trunc_ln388_16_fu_759_p1;
    p_r_M_real_fu_735_p1 <= trunc_ln388_fu_731_p1;
    select_ln1027_19_fu_563_p3 <= 
        ap_const_lv32_0 when (icmp_ln1027_10_reg_912(0) = '1') else 
        j2_fu_78;
    select_ln1027_20_fu_482_p3 <= 
        j1_24_fu_461_p3 when (icmp_ln1027_10_fu_477_p2(0) = '1') else 
        j1_fu_86;
    select_ln1027_21_fu_570_p3 <= 
        add40_mid1_reg_929 when (icmp_ln1027_10_reg_912(0) = '1') else 
        add40_reg_903;
    select_ln1027_22_fu_508_p3 <= 
        m1_18_fu_469_p3 when (icmp_ln1027_10_fu_477_p2(0) = '1') else 
        m1_fu_90;
    select_ln1027_fu_556_p3 <= 
        ap_const_lv32_0 when (icmp_ln1027_10_reg_912(0) = '1') else 
        m2_fu_82;
    sub3_i_i298_partset_fu_827_p3 <= (bitcast_ln38_5_fu_823_p1 & bitcast_ln38_fu_819_p1);
    sub3_i_i302_partset_fu_843_p3 <= (bitcast_ln39_5_fu_839_p1 & bitcast_ln39_fu_835_p1);
    tmp_fu_672_p3 <= (add_ln1027_4_reg_944 & ap_const_lv6_0);
    tmp_s_fu_679_p3 <= (select_ln1027_21_reg_939 & ap_const_lv6_0);
    trunc_ln1027_31_fu_401_p1 <= j1_fu_86(6 - 1 downto 0);
    trunc_ln1027_32_fu_490_p1 <= select_ln1027_20_fu_482_p3(1 - 1 downto 0);
    trunc_ln1027_33_fu_494_p1 <= m1_18_fu_469_p3(6 - 1 downto 0);
    trunc_ln1027_34_fu_498_p1 <= j1_24_fu_461_p3(6 - 1 downto 0);
    trunc_ln1027_35_fu_581_p1 <= select_ln1027_fu_556_p3(12 - 1 downto 0);
    trunc_ln1027_36_fu_585_p1 <= select_ln1027_19_fu_563_p3(12 - 1 downto 0);
    trunc_ln1027_37_fu_589_p1 <= select_ln1027_19_fu_563_p3(1 - 1 downto 0);
    trunc_ln1027_fu_397_p1 <= m1_fu_90(6 - 1 downto 0);
    trunc_ln328_fu_775_p1 <= I_q0(16 - 1 downto 0);
    trunc_ln388_15_fu_747_p1 <= I_q0(16 - 1 downto 0);
    trunc_ln388_16_fu_759_p1 <= I_q1(16 - 1 downto 0);
    trunc_ln388_fu_731_p1 <= I_q1(16 - 1 downto 0);

    w_10_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln27_fu_691_p1, zext_ln28_fu_726_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w_10_address0 <= zext_ln28_fu_726_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            w_10_address0 <= zext_ln27_fu_691_p1(5 - 1 downto 0);
        else 
            w_10_address0 <= "XXXXX";
        end if; 
    end process;

    w_10_address1 <= zext_ln1027_fu_686_p1(5 - 1 downto 0);

    w_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w_10_ce0 <= ap_const_logic_1;
        else 
            w_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w_10_ce1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            w_10_ce1 <= ap_const_logic_1;
        else 
            w_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    w_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln27_fu_691_p1, zext_ln28_fu_726_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w_address0 <= zext_ln28_fu_726_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            w_address0 <= zext_ln27_fu_691_p1(5 - 1 downto 0);
        else 
            w_address0 <= "XXXXX";
        end if; 
    end process;

    w_address1 <= zext_ln1027_fu_686_p1(5 - 1 downto 0);

    w_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w_ce0 <= ap_const_logic_1;
        else 
            w_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w_ce1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            w_ce1 <= ap_const_logic_1;
        else 
            w_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln28_fu_593_p2 <= (trunc_ln1027_37_fu_589_p1 xor trunc_ln1027_32_reg_924);
    zext_ln1027_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1027_20_reg_919),64));
    zext_ln27_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1027_19_reg_934),64));
    zext_ln28_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln28_reg_949),64));
    zext_ln328_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln328_reg_996_pp0_iter5_reg),64));
    zext_ln388_13_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln388_9_fu_711_p2),64));
    zext_ln388_14_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln388_10_reg_1011),64));
    zext_ln388_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln388_fu_696_p2),64));
    zext_ln40_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln40_fu_610_p2),32));
    zext_ln50_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln50_fu_425_p2),32));
end behav;
