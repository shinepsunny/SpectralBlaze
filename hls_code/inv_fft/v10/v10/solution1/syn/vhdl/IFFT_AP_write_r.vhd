-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity IFFT_AP_write_r is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    buffer1_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    buffer1_0_ce0 : OUT STD_LOGIC;
    buffer1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    buffer1_0_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    buffer1_0_ce1 : OUT STD_LOGIC;
    buffer1_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    buffer1_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    buffer1_1_ce0 : OUT STD_LOGIC;
    buffer1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    buffer1_1_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    buffer1_1_ce1 : OUT STD_LOGIC;
    buffer1_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    out1_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    out1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    out1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    out1_empty_n : IN STD_LOGIC;
    out1_read : OUT STD_LOGIC;
    out2_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    out2_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    out2_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    out2_empty_n : IN STD_LOGIC;
    out2_read : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (7 downto 0);
    layer2_reg_2_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    layer2_reg_2_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    layer2_reg_2_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    layer2_reg_2_empty_n : IN STD_LOGIC;
    layer2_reg_2_read : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of IFFT_AP_write_r is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (50 downto 0) := "000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (50 downto 0) := "000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (50 downto 0) := "000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (50 downto 0) := "000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (50 downto 0) := "000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (50 downto 0) := "000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (50 downto 0) := "000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (50 downto 0) := "000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (50 downto 0) := "000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (50 downto 0) := "001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (50 downto 0) := "010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (50 downto 0) := "100000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv62_1 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal wr_ptr1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal wr_ptr2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal cmp_i_i577_reg_495 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal out1_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal out2_blk_n : STD_LOGIC;
    signal layer2_reg_2_blk_n : STD_LOGIC;
    signal layer2_reg_2_read_reg_458 : STD_LOGIC_VECTOR (15 downto 0);
    signal out2_read_reg_463 : STD_LOGIC_VECTOR (63 downto 0);
    signal out1_read_reg_468 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_186_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_reg_473 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal icmp_ln1027_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_479 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i577_fu_209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal trunc_ln_reg_499 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln270_1_fu_245_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln270_1_reg_506 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal sext_ln270_2_fu_257_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln270_2_reg_512 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln270_2_fu_273_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln270_2_reg_522 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal tmp_fu_279_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_reg_527 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1027_1_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1_reg_532 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln293_fu_342_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln293_reg_545 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln283_fu_377_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln283_reg_558 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal tmp_1_fu_383_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_reg_563 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1027_2_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2_reg_568 : STD_LOGIC_VECTOR (59 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_done : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_idle : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_ready : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce0 : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce1 : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce0 : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce1 : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_done : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_idle : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_ready : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce0 : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce1 : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce0 : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce1 : STD_LOGIC;
    signal grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (50 downto 0);
    signal ap_NS_fsm_state36 : STD_LOGIC;
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm_state45 : STD_LOGIC;
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal sext_ln273_1_fu_351_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln286_1_fu_433_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state42 : BOOLEAN;
    signal ap_block_state51 : BOOLEAN;
    signal add_ln280_fu_318_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln293_1_fu_422_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_fu_108 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal y_1_fu_112 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state12 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_199_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_199_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln270_fu_215_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln270_fu_219_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln270_fu_235_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln270_1_fu_238_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln270_1_fu_242_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln273_1_fu_251_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln1027_fu_264_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln_fu_291_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln273_fu_299_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln273_fu_303_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln283_fu_329_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln283_fu_332_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln293_fu_336_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln1027_1_fu_368_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln1_fu_395_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln286_fu_403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln286_fu_407_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_186_ap_start : STD_LOGIC;
    signal grp_fu_186_ap_done : STD_LOGIC;
    signal grp_fu_186_ce : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fu_199_ap_start : STD_LOGIC;
    signal grp_fu_199_ap_done : STD_LOGIC;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal grp_fu_199_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component IFFT_AP_write_Pipeline_VITIS_LOOP_273_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln273_1 : IN STD_LOGIC_VECTOR (59 downto 0);
        add_ln270_1 : IN STD_LOGIC_VECTOR (61 downto 0);
        zext_ln278_4 : IN STD_LOGIC_VECTOR (12 downto 0);
        buffer1_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        buffer1_0_ce0 : OUT STD_LOGIC;
        buffer1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        buffer1_0_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        buffer1_0_ce1 : OUT STD_LOGIC;
        buffer1_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        buffer1_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        buffer1_1_ce0 : OUT STD_LOGIC;
        buffer1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        buffer1_1_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        buffer1_1_ce1 : OUT STD_LOGIC;
        buffer1_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_write_Pipeline_VITIS_LOOP_286_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln286_1 : IN STD_LOGIC_VECTOR (59 downto 0);
        add_ln270_1 : IN STD_LOGIC_VECTOR (61 downto 0);
        zext_ln291_4 : IN STD_LOGIC_VECTOR (12 downto 0);
        buffer1_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        buffer1_0_ce0 : OUT STD_LOGIC;
        buffer1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        buffer1_0_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        buffer1_0_ce1 : OUT STD_LOGIC;
        buffer1_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        buffer1_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        buffer1_1_ce0 : OUT STD_LOGIC;
        buffer1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        buffer1_1_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        buffer1_1_ce1 : OUT STD_LOGIC;
        buffer1_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_udiv_8ns_8ns_8_12_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component IFFT_AP_udiv_16ns_8ns_16_20_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160 : component IFFT_AP_write_Pipeline_VITIS_LOOP_273_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start,
        ap_done => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_done,
        ap_idle => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_idle,
        ap_ready => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_ready,
        m_axi_gmem_AWVALID => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => m_axi_gmem_WREADY,
        m_axi_gmem_WDATA => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv128_lc_1,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => m_axi_gmem_BVALID,
        m_axi_gmem_BREADY => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => m_axi_gmem_BRESP,
        m_axi_gmem_BID => m_axi_gmem_BID,
        m_axi_gmem_BUSER => m_axi_gmem_BUSER,
        sext_ln273_1 => trunc_ln1_reg_532,
        add_ln270_1 => add_ln270_1_reg_506,
        zext_ln278_4 => tmp_reg_527,
        buffer1_0_address0 => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address0,
        buffer1_0_ce0 => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce0,
        buffer1_0_q0 => buffer1_0_q0,
        buffer1_0_address1 => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address1,
        buffer1_0_ce1 => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce1,
        buffer1_0_q1 => buffer1_0_q1,
        buffer1_1_address0 => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address0,
        buffer1_1_ce0 => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce0,
        buffer1_1_q0 => buffer1_1_q0,
        buffer1_1_address1 => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address1,
        buffer1_1_ce1 => grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce1,
        buffer1_1_q1 => buffer1_1_q1);

    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173 : component IFFT_AP_write_Pipeline_VITIS_LOOP_286_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start,
        ap_done => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_done,
        ap_idle => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_idle,
        ap_ready => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_ready,
        m_axi_gmem_AWVALID => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => m_axi_gmem_WREADY,
        m_axi_gmem_WDATA => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv128_lc_1,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => m_axi_gmem_BVALID,
        m_axi_gmem_BREADY => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => m_axi_gmem_BRESP,
        m_axi_gmem_BID => m_axi_gmem_BID,
        m_axi_gmem_BUSER => m_axi_gmem_BUSER,
        sext_ln286_1 => trunc_ln2_reg_568,
        add_ln270_1 => add_ln270_1_reg_506,
        zext_ln291_4 => tmp_1_reg_563,
        buffer1_0_address0 => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address0,
        buffer1_0_ce0 => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce0,
        buffer1_0_q0 => buffer1_0_q0,
        buffer1_0_address1 => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address1,
        buffer1_0_ce1 => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce1,
        buffer1_0_q1 => buffer1_0_q1,
        buffer1_1_address0 => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address0,
        buffer1_1_ce0 => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce0,
        buffer1_1_q0 => buffer1_1_q0,
        buffer1_1_address1 => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address1,
        buffer1_1_ce1 => grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce1,
        buffer1_1_q1 => buffer1_1_q1);

    udiv_8ns_8ns_8_12_seq_1_U401 : component IFFT_AP_udiv_8ns_8ns_8_12_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_186_ap_start,
        done => grp_fu_186_ap_done,
        din0 => p_read,
        din1 => p_read1,
        ce => grp_fu_186_ce,
        dout => grp_fu_186_p2);

    udiv_16ns_8ns_16_20_seq_1_U402 : component IFFT_AP_udiv_16ns_8ns_16_20_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 20,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_199_ap_start,
        done => grp_fu_199_ap_done,
        din0 => layer2_reg_2_read_reg_458,
        din1 => grp_fu_199_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_199_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state43) and ((icmp_ln1027_2_fu_372_p2 = ap_const_lv1_1) or (icmp_ln1027_reg_479 = ap_const_lv1_1)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state36) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_ready = ap_const_logic_1)) then 
                    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state45) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_ready = ap_const_logic_1)) then 
                    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    y_1_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_1_fu_268_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                y_1_fu_112 <= ap_const_lv8_0;
            elsif ((not(((cmp_i_i577_reg_495 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                y_1_fu_112 <= add_ln283_reg_558;
            end if; 
        end if;
    end process;

    y_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                y_fu_108 <= ap_const_lv8_0;
            elsif ((not(((cmp_i_i577_reg_495 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                y_fu_108 <= add_ln270_2_reg_522;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                add_ln270_1_reg_506 <= add_ln270_1_fu_245_p2;
                sext_ln270_2_reg_512 <= sext_ln270_2_fu_257_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                add_ln270_2_reg_522 <= add_ln270_2_fu_273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_479 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                add_ln283_reg_558 <= add_ln283_fu_377_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                cmp_i_i577_reg_495 <= cmp_i_i577_fu_209_p2;
                trunc_ln_reg_499 <= add_ln270_fu_219_p2(16 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                div_reg_473 <= grp_fu_186_p2;
                icmp_ln1027_reg_479 <= icmp_ln1027_fu_190_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                layer2_reg_2_read_reg_458 <= layer2_reg_2_dout;
                out1_read_reg_468 <= out1_dout;
                out2_read_reg_463 <= out2_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_2_fu_372_p2 = ap_const_lv1_0) and (icmp_ln1027_reg_479 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    tmp_1_reg_563(12 downto 7) <= tmp_1_fu_383_p3(12 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_1_fu_268_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    tmp_reg_527(12 downto 7) <= tmp_fu_279_p3(12 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_1_fu_268_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34) and (cmp_i_i577_reg_495 = ap_const_lv1_0))) then
                trunc_ln1_reg_532 <= add_ln273_fu_303_p2(63 downto 4);
                wr_ptr1 <= add_ln280_fu_318_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_2_fu_372_p2 = ap_const_lv1_0) and (icmp_ln1027_reg_479 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43) and (cmp_i_i577_reg_495 = ap_const_lv1_0))) then
                trunc_ln2_reg_568 <= add_ln286_fu_407_p2(63 downto 4);
                wr_ptr2 <= add_ln293_1_fu_422_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_1_fu_268_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    zext_ln293_reg_545(29 downto 0) <= zext_ln293_fu_342_p1(29 downto 0);
            end if;
        end if;
    end process;
    tmp_reg_527(6 downto 0) <= "0000000";
    zext_ln293_reg_545(31 downto 30) <= "00";
    tmp_1_reg_563(6 downto 0) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem_AWREADY, m_axi_gmem_BVALID, out1_empty_n, out2_empty_n, layer2_reg_2_empty_n, ap_CS_fsm_state35, ap_CS_fsm_state42, cmp_i_i577_reg_495, ap_CS_fsm_state44, ap_CS_fsm_state51, ap_CS_fsm_state12, ap_CS_fsm_state13, icmp_ln1027_fu_190_p2, icmp_ln1027_reg_479, ap_CS_fsm_state34, icmp_ln1027_1_fu_268_p2, ap_CS_fsm_state43, icmp_ln1027_2_fu_372_p2, grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_done, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_done, ap_CS_fsm_state37, ap_CS_fsm_state46)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if ((not(((layer2_reg_2_empty_n = ap_const_logic_0) or (out2_empty_n = ap_const_logic_0) or (out1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((icmp_ln1027_fu_190_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                if (((icmp_ln1027_1_fu_268_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                elsif (((icmp_ln1027_1_fu_268_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34) and (cmp_i_i577_reg_495 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state35 => 
                if (((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                if ((not(((cmp_i_i577_reg_495 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state43 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state43) and ((icmp_ln1027_2_fu_372_p2 = ap_const_lv1_1) or (icmp_ln1027_reg_479 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((icmp_ln1027_2_fu_372_p2 = ap_const_lv1_0) and (icmp_ln1027_reg_479 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43) and (cmp_i_i577_reg_495 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state44 => 
                if (((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                if (((grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                if ((not(((cmp_i_i577_reg_495 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state51))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state51;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln270_1_fu_245_p2 <= std_logic_vector(unsigned(zext_ln270_1_fu_238_p1) + unsigned(ap_const_lv62_1));
    add_ln270_2_fu_273_p2 <= std_logic_vector(unsigned(y_fu_108) + unsigned(ap_const_lv8_1));
    add_ln270_fu_219_p2 <= std_logic_vector(unsigned(zext_ln270_fu_215_p1) + unsigned(ap_const_lv17_1FFFF));
    add_ln273_1_fu_251_p2 <= std_logic_vector(signed(sext_ln270_1_fu_242_p1) + signed(ap_const_lv15_1));
    add_ln273_fu_303_p2 <= std_logic_vector(unsigned(out1_read_reg_468) + unsigned(sext_ln273_fu_299_p1));
    add_ln280_fu_318_p2 <= std_logic_vector(unsigned(wr_ptr1) + unsigned(sext_ln270_2_reg_512));
    add_ln283_fu_377_p2 <= std_logic_vector(unsigned(y_1_fu_112) + unsigned(ap_const_lv8_1));
    add_ln286_fu_407_p2 <= std_logic_vector(unsigned(out2_read_reg_463) + unsigned(sext_ln286_fu_403_p1));
    add_ln293_1_fu_422_p2 <= std_logic_vector(unsigned(wr_ptr2) + unsigned(zext_ln293_reg_545));
    add_ln293_fu_336_p2 <= std_logic_vector(unsigned(zext_ln283_fu_332_p1) + unsigned(ap_const_lv30_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state36 <= ap_NS_fsm(35);
    ap_NS_fsm_state45 <= ap_NS_fsm(44);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(out1_empty_n, out2_empty_n, layer2_reg_2_empty_n)
    begin
        if (((layer2_reg_2_empty_n = ap_const_logic_0) or (out2_empty_n = ap_const_logic_0) or (out1_empty_n = ap_const_logic_0))) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;

    ap_ST_fsm_state35_blk_assign_proc : process(m_axi_gmem_AWREADY)
    begin
        if ((m_axi_gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state35_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state35_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state36_blk <= ap_const_logic_0;

    ap_ST_fsm_state37_blk_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_done)
    begin
        if ((grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state37_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state37_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;

    ap_ST_fsm_state42_blk_assign_proc : process(m_axi_gmem_BVALID, cmp_i_i577_reg_495)
    begin
        if (((cmp_i_i577_reg_495 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state42_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state42_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state43_blk <= ap_const_logic_0;

    ap_ST_fsm_state44_blk_assign_proc : process(m_axi_gmem_AWREADY)
    begin
        if ((m_axi_gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state44_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state44_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state45_blk <= ap_const_logic_0;

    ap_ST_fsm_state46_blk_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_done)
    begin
        if ((grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state46_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state46_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;

    ap_ST_fsm_state51_blk_assign_proc : process(m_axi_gmem_BVALID, cmp_i_i577_reg_495)
    begin
        if (((cmp_i_i577_reg_495 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state51_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state51_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state12_assign_proc : process(out1_empty_n, out2_empty_n, layer2_reg_2_empty_n)
    begin
                ap_block_state12 <= ((layer2_reg_2_empty_n = ap_const_logic_0) or (out2_empty_n = ap_const_logic_0) or (out1_empty_n = ap_const_logic_0));
    end process;


    ap_block_state42_assign_proc : process(m_axi_gmem_BVALID, cmp_i_i577_reg_495)
    begin
                ap_block_state42 <= ((cmp_i_i577_reg_495 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0));
    end process;


    ap_block_state51_assign_proc : process(m_axi_gmem_BVALID, cmp_i_i577_reg_495)
    begin
                ap_block_state51 <= ((cmp_i_i577_reg_495 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln1027_reg_479, ap_CS_fsm_state43, icmp_ln1027_2_fu_372_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state43) and ((icmp_ln1027_2_fu_372_p2 = ap_const_lv1_1) or (icmp_ln1027_reg_479 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln1027_reg_479, ap_CS_fsm_state43, icmp_ln1027_2_fu_372_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state43) and ((icmp_ln1027_2_fu_372_p2 = ap_const_lv1_1) or (icmp_ln1027_reg_479 = ap_const_lv1_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buffer1_0_address0_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address0, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address0, ap_CS_fsm_state37, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            buffer1_0_address0 <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            buffer1_0_address0 <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address0;
        else 
            buffer1_0_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    buffer1_0_address1_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address1, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address1, ap_CS_fsm_state37, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            buffer1_0_address1 <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            buffer1_0_address1 <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address1;
        else 
            buffer1_0_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    buffer1_0_ce0_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce0, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce0, ap_CS_fsm_state37, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            buffer1_0_ce0 <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            buffer1_0_ce0 <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce0;
        else 
            buffer1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer1_0_ce1_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce1, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce1, ap_CS_fsm_state37, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            buffer1_0_ce1 <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            buffer1_0_ce1 <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce1;
        else 
            buffer1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer1_1_address0_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address0, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address0, ap_CS_fsm_state37, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            buffer1_1_address0 <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            buffer1_1_address0 <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address0;
        else 
            buffer1_1_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    buffer1_1_address1_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address1, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address1, ap_CS_fsm_state37, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            buffer1_1_address1 <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            buffer1_1_address1 <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address1;
        else 
            buffer1_1_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    buffer1_1_ce0_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce0, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce0, ap_CS_fsm_state37, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            buffer1_1_ce0 <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            buffer1_1_ce0 <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce0;
        else 
            buffer1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer1_1_ce1_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce1, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce1, ap_CS_fsm_state37, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            buffer1_1_ce1 <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            buffer1_1_ce1 <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce1;
        else 
            buffer1_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i577_fu_209_p2 <= "1" when (grp_fu_199_p2 = ap_const_lv16_0) else "0";

    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state35, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state42, cmp_i_i577_reg_495, ap_CS_fsm_state51)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state51) and (cmp_i_i577_reg_495 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state42) and (cmp_i_i577_reg_495 = ap_const_lv1_0)))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_186_ap_start_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_186_ap_start <= ap_const_logic_1;
        else 
            grp_fu_186_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_186_ce_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_186_ce <= ap_const_logic_1;
        else 
            grp_fu_186_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_199_ap_start_assign_proc : process(ap_CS_fsm_state13, icmp_ln1027_fu_190_p2)
    begin
        if (((icmp_ln1027_fu_190_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_199_ap_start <= ap_const_logic_1;
        else 
            grp_fu_199_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_199_p1 <= grp_fu_199_p10(8 - 1 downto 0);
    grp_fu_199_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1),16));
    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start_reg;
    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start_reg;
    icmp_ln1027_1_fu_268_p2 <= "1" when (y_fu_108 = div_reg_473) else "0";
    icmp_ln1027_2_fu_372_p2 <= "1" when (y_1_fu_112 = div_reg_473) else "0";
    icmp_ln1027_fu_190_p2 <= "1" when (grp_fu_186_p2 = ap_const_lv8_0) else "0";

    layer2_reg_2_blk_n_assign_proc : process(layer2_reg_2_empty_n, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            layer2_reg_2_blk_n <= layer2_reg_2_empty_n;
        else 
            layer2_reg_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer2_reg_2_read_assign_proc : process(out1_empty_n, out2_empty_n, layer2_reg_2_empty_n, ap_CS_fsm_state12)
    begin
        if ((not(((layer2_reg_2_empty_n = ap_const_logic_0) or (out2_empty_n = ap_const_logic_0) or (out1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            layer2_reg_2_read <= ap_const_logic_1;
        else 
            layer2_reg_2_read <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_ARADDR <= ap_const_lv64_0;
    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_0;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;
    m_axi_gmem_ARVALID <= ap_const_logic_0;

    m_axi_gmem_AWADDR_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state35, ap_CS_fsm_state44, grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWADDR, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWADDR, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46, sext_ln273_1_fu_351_p1, sext_ln286_1_fu_433_p1)
    begin
        if (((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            m_axi_gmem_AWADDR <= sext_ln286_1_fu_433_p1;
        elsif (((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            m_axi_gmem_AWADDR <= sext_ln273_1_fu_351_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_AWADDR <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_AWADDR <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWADDR;
        else 
            m_axi_gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_AWBURST_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWBURST, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWBURST, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_AWBURST <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_AWBURST <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWBURST;
        else 
            m_axi_gmem_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_AWCACHE_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWCACHE, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWCACHE, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_AWCACHE <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_AWCACHE <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWCACHE;
        else 
            m_axi_gmem_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_AWID_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWID, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWID, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_AWID <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_AWID <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWID;
        else 
            m_axi_gmem_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_AWLEN_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state35, ap_CS_fsm_state44, sext_ln270_2_reg_512, grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLEN, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLEN, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if ((((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            m_axi_gmem_AWLEN <= sext_ln270_2_reg_512;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_AWLEN <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_AWLEN <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLEN;
        else 
            m_axi_gmem_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_AWLOCK_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLOCK, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLOCK, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_AWLOCK <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_AWLOCK <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLOCK;
        else 
            m_axi_gmem_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_AWPROT_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWPROT, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWPROT, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_AWPROT <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_AWPROT <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWPROT;
        else 
            m_axi_gmem_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_AWQOS_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWQOS, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWQOS, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_AWQOS <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_AWQOS <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWQOS;
        else 
            m_axi_gmem_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_AWREGION_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWREGION, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWREGION, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_AWREGION <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_AWREGION <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWREGION;
        else 
            m_axi_gmem_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_AWSIZE_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWSIZE, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWSIZE, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_AWSIZE <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_AWSIZE <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWSIZE;
        else 
            m_axi_gmem_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_AWUSER_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWUSER, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWUSER, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_AWUSER <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_AWUSER <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWUSER;
        else 
            m_axi_gmem_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_AWVALID_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state35, ap_CS_fsm_state44, grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWVALID, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWVALID, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if ((((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            m_axi_gmem_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_AWVALID <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_AWVALID <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWVALID;
        else 
            m_axi_gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_BREADY_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state42, cmp_i_i577_reg_495, ap_CS_fsm_state51, grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_BREADY, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_BREADY, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((not(((cmp_i_i577_reg_495 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state51) and (cmp_i_i577_reg_495 = ap_const_lv1_0)) or (not(((cmp_i_i577_reg_495 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state42) and (cmp_i_i577_reg_495 = ap_const_lv1_0)))) then 
            m_axi_gmem_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_BREADY <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_BREADY <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_BREADY;
        else 
            m_axi_gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_RREADY <= ap_const_logic_0;

    m_axi_gmem_WDATA_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WDATA, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WDATA, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_WDATA <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_WDATA <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WDATA;
        else 
            m_axi_gmem_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_WID_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WID, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WID, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_WID <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_WID <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WID;
        else 
            m_axi_gmem_WID <= "X";
        end if; 
    end process;


    m_axi_gmem_WLAST_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WLAST, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WLAST, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_WLAST <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WLAST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_WLAST <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WLAST;
        else 
            m_axi_gmem_WLAST <= 'X';
        end if; 
    end process;


    m_axi_gmem_WSTRB_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WSTRB, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WSTRB, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_WSTRB <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_WSTRB <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WSTRB;
        else 
            m_axi_gmem_WSTRB <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_WUSER_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WUSER, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WUSER, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_WUSER <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_WUSER <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WUSER;
        else 
            m_axi_gmem_WUSER <= "X";
        end if; 
    end process;


    m_axi_gmem_WVALID_assign_proc : process(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WVALID, grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WVALID, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            m_axi_gmem_WVALID <= grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_gmem_WVALID <= grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WVALID;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    out1_blk_n_assign_proc : process(out1_empty_n, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            out1_blk_n <= out1_empty_n;
        else 
            out1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out1_read_assign_proc : process(out1_empty_n, out2_empty_n, layer2_reg_2_empty_n, ap_CS_fsm_state12)
    begin
        if ((not(((layer2_reg_2_empty_n = ap_const_logic_0) or (out2_empty_n = ap_const_logic_0) or (out1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            out1_read <= ap_const_logic_1;
        else 
            out1_read <= ap_const_logic_0;
        end if; 
    end process;


    out2_blk_n_assign_proc : process(out2_empty_n, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            out2_blk_n <= out2_empty_n;
        else 
            out2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out2_read_assign_proc : process(out1_empty_n, out2_empty_n, layer2_reg_2_empty_n, ap_CS_fsm_state12)
    begin
        if ((not(((layer2_reg_2_empty_n = ap_const_logic_0) or (out2_empty_n = ap_const_logic_0) or (out1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            out2_read <= ap_const_logic_1;
        else 
            out2_read <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln270_1_fu_242_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_499),15));

        sext_ln270_2_fu_257_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln273_1_fu_251_p2),32));

        sext_ln270_fu_235_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_499),61));

        sext_ln273_1_fu_351_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_reg_532),64));

        sext_ln273_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_291_p3),64));

        sext_ln283_fu_329_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_499),29));

        sext_ln286_1_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_reg_568),64));

        sext_ln286_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1_fu_395_p3),64));

    shl_ln1_fu_395_p3 <= (wr_ptr2 & ap_const_lv4_0);
    shl_ln_fu_291_p3 <= (wr_ptr1 & ap_const_lv4_0);
    tmp_1_fu_383_p3 <= (trunc_ln1027_1_fu_368_p1 & ap_const_lv7_0);
    tmp_fu_279_p3 <= (trunc_ln1027_fu_264_p1 & ap_const_lv7_0);
    trunc_ln1027_1_fu_368_p1 <= y_1_fu_112(6 - 1 downto 0);
    trunc_ln1027_fu_264_p1 <= y_fu_108(6 - 1 downto 0);
    zext_ln270_1_fu_238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln270_fu_235_p1),62));
    zext_ln270_fu_215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_199_p2),17));
    zext_ln283_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln283_fu_329_p1),30));
    zext_ln293_fu_342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln293_fu_336_p2),32));
end behav;
