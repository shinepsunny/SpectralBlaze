

================================================================
== Vitis HLS Report for 'rd_data'
================================================================
* Date:           Fri Dec  9 11:04:53 2022

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        v10
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7cg-fbvb900-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  3.000 ns|     2.00 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        1|       78|  5.000 ns|  0.390 us|    1|   78|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 12 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.08>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %ctrl1_regp_c8, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%pn_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %pn"   --->   Operation 14 'read' 'pn_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%in_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %in_r"   --->   Operation 15 'read' 'in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%ctrl1_regp_read = read i32 @_ssdm_op_Read.ap_auto.i32P0A, i32 %ctrl1_regp"   --->   Operation 16 'read' 'ctrl1_regp_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.50ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_fifo.i32P0A, i32 %ctrl1_regp_c8, i32 %ctrl1_regp_read"   --->   Operation 17 'write' 'write_ln0' <Predicate = true> <Delay = 1.50> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 2.16> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i128 %in_st, void @empty_8, i32 0, i32 0, void @empty_18, i32 0, i32 0, void @empty_18, void @empty_18, void @empty_18, i32 0, i32 0, i32 0, i32 0, void @empty_18, void @empty_18, i32 4294967295, i32 0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i128 %gmem, void @empty_16, i32 0, i32 0, void @empty_18, i32 0, i32 1024, void @empty_2, void @empty_9, void @empty_18, i32 16, i32 16, i32 16, i32 16, void @empty_18, void @empty_18, i32 4294967295, i32 0"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.11ns)   --->   "%icmp_ln155 = icmp_eq  i32 %pn_read, i32 0" [src/fft.cpp:155]   --->   Operation 20 'icmp' 'icmp_ln155' <Predicate = true> <Delay = 1.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%rd_ptr_load = load i32 %rd_ptr" [src/fft.cpp:164]   --->   Operation 21 'load' 'rd_ptr_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.52ns)   --->   "%select_ln155 = select i1 %icmp_ln155, i32 0, i32 %rd_ptr_load" [src/fft.cpp:155]   --->   Operation 22 'select' 'select_ln155' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%empty = trunc i32 %ctrl1_regp_read"   --->   Operation 23 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%conv_i_i = zext i8 %empty"   --->   Operation 24 'zext' 'conv_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln1027 = zext i8 %empty"   --->   Operation 25 'zext' 'zext_ln1027' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.85ns)   --->   "%icmp_ln1027 = icmp_eq  i8 %empty, i8 0"   --->   Operation 26 'icmp' 'icmp_ln1027' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.48ns)   --->   "%br_ln157 = br i1 %icmp_ln1027, void %for.body.lr.ph, void %for.end7" [src/fft.cpp:157]   --->   Operation 27 'br' 'br_ln157' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 28 [1/1] (0.90ns)   --->   "%add_ln157 = add i9 %zext_ln1027, i9 511" [src/fft.cpp:157]   --->   Operation 28 'add' 'add_ln157' <Predicate = (!icmp_ln1027)> <Delay = 0.90> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%trunc_ln157_1 = partselect i7 @_ssdm_op_PartSelect.i7.i9.i32.i32, i9 %add_ln157, i32 2, i32 8" [src/fft.cpp:157]   --->   Operation 29 'partselect' 'trunc_ln157_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%sext_ln157_3 = sext i7 %trunc_ln157_1" [src/fft.cpp:157]   --->   Operation 30 'sext' 'sext_ln157_3' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln157 = zext i30 %sext_ln157_3" [src/fft.cpp:157]   --->   Operation 31 'zext' 'zext_ln157' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (1.17ns)   --->   "%add_ln160 = add i31 %zext_ln157, i31 1" [src/fft.cpp:160]   --->   Operation 32 'add' 'add_ln160' <Predicate = (!icmp_ln1027)> <Delay = 1.17> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 2.96>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%sext_ln157 = sext i9 %add_ln157" [src/fft.cpp:157]   --->   Operation 33 'sext' 'sext_ln157' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln157_1 = zext i31 %add_ln160" [src/fft.cpp:157]   --->   Operation 34 'zext' 'zext_ln157_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i36 @_ssdm_op_BitConcatenate.i36.i32.i4, i32 %select_ln155, i4 0" [src/fft.cpp:157]   --->   Operation 35 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%sext_ln157_2 = sext i36 %shl_ln" [src/fft.cpp:157]   --->   Operation 36 'sext' 'sext_ln157_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (1.47ns)   --->   "%add_ln157_1 = add i64 %sext_ln157_2, i64 %in_read" [src/fft.cpp:157]   --->   Operation 37 'add' 'add_ln157_1' <Predicate = true> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i60 @_ssdm_op_PartSelect.i60.i64.i32.i32, i64 %add_ln157_1, i32 4, i32 63" [src/fft.cpp:157]   --->   Operation 38 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [2/2] (2.96ns)   --->   "%mul_ln157 = mul i32 %zext_ln157_1, i32 %conv_i_i" [src/fft.cpp:157]   --->   Operation 39 'mul' 'mul_ln157' <Predicate = true> <Delay = 2.96> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.96> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln157_2 = zext i8 %empty" [src/fft.cpp:157]   --->   Operation 40 'zext' 'zext_ln157_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln157_3 = zext i31 %add_ln160" [src/fft.cpp:157]   --->   Operation 41 'zext' 'zext_ln157_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [2/2] (2.96ns)   --->   "%mul_ln157_2 = mul i38 %zext_ln157_2, i38 %zext_ln157_3" [src/fft.cpp:157]   --->   Operation 42 'mul' 'mul_ln157_2' <Predicate = true> <Delay = 2.96> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.96> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [2/2] (2.96ns)   --->   "%mul_ln157_1 = mul i32 %zext_ln157_1, i32 %sext_ln157" [src/fft.cpp:157]   --->   Operation 43 'mul' 'mul_ln157_1' <Predicate = true> <Delay = 2.96> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.96> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 2.96>
ST_3 : Operation 44 [1/2] (2.96ns)   --->   "%mul_ln157 = mul i32 %zext_ln157_1, i32 %conv_i_i" [src/fft.cpp:157]   --->   Operation 44 'mul' 'mul_ln157' <Predicate = true> <Delay = 2.96> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.96> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/2] (2.96ns)   --->   "%mul_ln157_2 = mul i38 %zext_ln157_2, i38 %zext_ln157_3" [src/fft.cpp:157]   --->   Operation 45 'mul' 'mul_ln157_2' <Predicate = true> <Delay = 2.96> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.96> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/2] (2.96ns)   --->   "%mul_ln157_1 = mul i32 %zext_ln157_1, i32 %sext_ln157" [src/fft.cpp:157]   --->   Operation 46 'mul' 'mul_ln157_1' <Predicate = true> <Delay = 2.96> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.96> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%sext_ln157_1 = sext i60 %trunc_ln" [src/fft.cpp:157]   --->   Operation 47 'sext' 'sext_ln157_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i128 %gmem, i64 %sext_ln157_1" [src/fft.cpp:157]   --->   Operation 48 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [7/7] (3.00ns)   --->   "%empty_62 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %gmem_addr, i32 %mul_ln157" [src/fft.cpp:157]   --->   Operation 49 'readreq' 'empty_62' <Predicate = true> <Delay = 3.00> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 50 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln157_2 = add i32 %select_ln155, i32 %zext_ln157_1" [src/fft.cpp:157]   --->   Operation 50 'add' 'add_ln157_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 51 [1/1] (0.88ns) (root node of TernaryAdder)   --->   "%add_ln157_3 = add i32 %add_ln157_2, i32 %mul_ln157_1" [src/fft.cpp:157]   --->   Operation 51 'add' 'add_ln157_3' <Predicate = true> <Delay = 0.88> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 3.00>
ST_5 : Operation 52 [6/7] (3.00ns)   --->   "%empty_62 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %gmem_addr, i32 %mul_ln157" [src/fft.cpp:157]   --->   Operation 52 'readreq' 'empty_62' <Predicate = true> <Delay = 3.00> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 3.00>
ST_6 : Operation 53 [5/7] (3.00ns)   --->   "%empty_62 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %gmem_addr, i32 %mul_ln157" [src/fft.cpp:157]   --->   Operation 53 'readreq' 'empty_62' <Predicate = true> <Delay = 3.00> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 3.00>
ST_7 : Operation 54 [4/7] (3.00ns)   --->   "%empty_62 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %gmem_addr, i32 %mul_ln157" [src/fft.cpp:157]   --->   Operation 54 'readreq' 'empty_62' <Predicate = true> <Delay = 3.00> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 3.00>
ST_8 : Operation 55 [3/7] (3.00ns)   --->   "%empty_62 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %gmem_addr, i32 %mul_ln157" [src/fft.cpp:157]   --->   Operation 55 'readreq' 'empty_62' <Predicate = true> <Delay = 3.00> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 3.00>
ST_9 : Operation 56 [2/7] (3.00ns)   --->   "%empty_62 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %gmem_addr, i32 %mul_ln157" [src/fft.cpp:157]   --->   Operation 56 'readreq' 'empty_62' <Predicate = true> <Delay = 3.00> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 3.00>
ST_10 : Operation 57 [1/7] (3.00ns)   --->   "%empty_62 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i128, i128 %gmem_addr, i32 %mul_ln157" [src/fft.cpp:157]   --->   Operation 57 'readreq' 'empty_62' <Predicate = true> <Delay = 3.00> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 0.00>
ST_11 : Operation 58 [1/1] (0.00ns)   --->   "%empty_63 = wait i32 @_ssdm_op_Wait"   --->   Operation 58 'wait' 'empty_63' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 59 [2/2] (0.00ns)   --->   "%call_ln157 = call void @rd_data_Pipeline_VITIS_LOOP_157_1_VITIS_LOOP_160_2, i128 %gmem, i60 %trunc_ln, i38 %mul_ln157_2, i128 %in_st" [src/fft.cpp:157]   --->   Operation 59 'call' 'call_ln157' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 0.48>
ST_12 : Operation 60 [1/2] (0.00ns)   --->   "%call_ln157 = call void @rd_data_Pipeline_VITIS_LOOP_157_1_VITIS_LOOP_160_2, i128 %gmem, i60 %trunc_ln, i38 %mul_ln157_2, i128 %in_st" [src/fft.cpp:157]   --->   Operation 60 'call' 'call_ln157' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 61 [1/1] (0.48ns)   --->   "%br_ln167 = br void %for.end7" [src/fft.cpp:167]   --->   Operation 61 'br' 'br_ln167' <Predicate = (!icmp_ln1027)> <Delay = 0.48>
ST_12 : Operation 62 [1/1] (0.00ns)   --->   "%rd_ptr_flag_1 = phi i1 1, void %for.body.lr.ph, i1 %icmp_ln155, void %entry" [src/fft.cpp:155]   --->   Operation 62 'phi' 'rd_ptr_flag_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 63 [1/1] (0.00ns)   --->   "%rd_ptr_new_1 = phi i32 %add_ln157_3, void %for.body.lr.ph, i32 0, void %entry" [src/fft.cpp:157]   --->   Operation 63 'phi' 'rd_ptr_new_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 64 [1/1] (0.00ns)   --->   "%br_ln155 = br i1 %rd_ptr_flag_1, void %for.end7.new, void %mergeST" [src/fft.cpp:155]   --->   Operation 64 'br' 'br_ln155' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 65 [1/1] (0.00ns)   --->   "%store_ln156 = store i32 %rd_ptr_new_1, i32 %rd_ptr" [src/fft.cpp:156]   --->   Operation 65 'store' 'store_ln156' <Predicate = (rd_ptr_flag_1)> <Delay = 0.00>
ST_12 : Operation 66 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.end7.new"   --->   Operation 66 'br' 'br_ln0' <Predicate = (rd_ptr_flag_1)> <Delay = 0.00>
ST_12 : Operation 67 [1/1] (0.00ns)   --->   "%ret_ln167 = ret" [src/fft.cpp:167]   --->   Operation 67 'ret' 'ret_ln167' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 2ns.

 <State 1>: 2.09ns
The critical path consists of the following:
	wire read operation ('ctrl1_regp_read') on port 'ctrl1_regp' [11]  (0 ns)
	'add' operation ('add_ln157', src/fft.cpp:157) [24]  (0.907 ns)
	'add' operation ('add_ln160', src/fft.cpp:160) [29]  (1.18 ns)

 <State 2>: 2.96ns
The critical path consists of the following:
	'mul' operation ('mul_ln157', src/fft.cpp:157) [37]  (2.96 ns)

 <State 3>: 2.96ns
The critical path consists of the following:
	'mul' operation ('mul_ln157', src/fft.cpp:157) [37]  (2.96 ns)

 <State 4>: 3ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr', src/fft.cpp:157) [36]  (0 ns)
	bus request operation ('empty_62', src/fft.cpp:157) on port 'gmem' (src/fft.cpp:157) [38]  (3 ns)

 <State 5>: 3ns
The critical path consists of the following:
	bus request operation ('empty_62', src/fft.cpp:157) on port 'gmem' (src/fft.cpp:157) [38]  (3 ns)

 <State 6>: 3ns
The critical path consists of the following:
	bus request operation ('empty_62', src/fft.cpp:157) on port 'gmem' (src/fft.cpp:157) [38]  (3 ns)

 <State 7>: 3ns
The critical path consists of the following:
	bus request operation ('empty_62', src/fft.cpp:157) on port 'gmem' (src/fft.cpp:157) [38]  (3 ns)

 <State 8>: 3ns
The critical path consists of the following:
	bus request operation ('empty_62', src/fft.cpp:157) on port 'gmem' (src/fft.cpp:157) [38]  (3 ns)

 <State 9>: 3ns
The critical path consists of the following:
	bus request operation ('empty_62', src/fft.cpp:157) on port 'gmem' (src/fft.cpp:157) [38]  (3 ns)

 <State 10>: 3ns
The critical path consists of the following:
	bus request operation ('empty_62', src/fft.cpp:157) on port 'gmem' (src/fft.cpp:157) [38]  (3 ns)

 <State 11>: 0ns
The critical path consists of the following:

 <State 12>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('rd_ptr_new_1', src/fft.cpp:157) with incoming values : ('add_ln157_3', src/fft.cpp:157) [50]  (0.489 ns)
	'phi' operation ('rd_ptr_new_1', src/fft.cpp:157) with incoming values : ('add_ln157_3', src/fft.cpp:157) [50]  (0 ns)
	'store' operation ('store_ln156', src/fft.cpp:156) of variable 'rd_ptr_new_1', src/fft.cpp:157 on static variable 'rd_ptr' [53]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
