-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity IFFT_AP_fft_stage_5_Pipeline_SKIP_X_SKIP_Y is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bound : IN STD_LOGIC_VECTOR (13 downto 0);
    trunc_ln10 : IN STD_LOGIC_VECTOR (6 downto 0);
    I_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    I_ce0 : OUT STD_LOGIC;
    I_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    I_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    I_ce1 : OUT STD_LOGIC;
    I_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    X_0_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_0_0_ce0 : OUT STD_LOGIC;
    X_0_0_we0 : OUT STD_LOGIC;
    X_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    X_0_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_0_1_ce0 : OUT STD_LOGIC;
    X_0_1_we0 : OUT STD_LOGIC;
    X_0_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    X_1_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_1_0_ce0 : OUT STD_LOGIC;
    X_1_0_we0 : OUT STD_LOGIC;
    X_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    X_1_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_1_1_ce0 : OUT STD_LOGIC;
    X_1_1_we0 : OUT STD_LOGIC;
    X_1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of IFFT_AP_fft_stage_5_Pipeline_SKIP_X_SKIP_Y is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv12_20 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_const_lv11_20 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal icmp_ln1027_reg_1172 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal w_9_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_9_ce0 : STD_LOGIC;
    signal w_9_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_14_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_14_ce0 : STD_LOGIC;
    signal w_14_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add40_fu_493_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add40_reg_1167 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln1027_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1172_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1172_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1172_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1172_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1172_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1172_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_6_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_6_reg_1176 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1027_2_fu_580_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_2_reg_1182 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_3_fu_588_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_3_reg_1190 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1027_4_fu_596_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1027_4_reg_1195 : STD_LOGIC_VECTOR (4 downto 0);
    signal add40_mid1_fu_616_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add40_mid1_reg_1200 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln1027_5_fu_628_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1027_5_reg_1205 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1027_5_reg_1205_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1027_5_reg_1205_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1027_5_reg_1205_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1027_5_reg_1205_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1027_5_reg_1205_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1027_5_reg_1205_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1027_5_reg_1205_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1027_8_fu_644_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1027_8_reg_1209 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1027_9_fu_648_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1027_9_reg_1214 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln29_1_fu_658_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln29_1_reg_1229 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln29_3_fu_662_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln29_3_reg_1234 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln1027_4_fu_710_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln1027_4_reg_1239 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state31_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal p_cast_mid2_v_reg_1255 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast_mid2_v_reg_1255_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast_mid2_v_reg_1255_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast_mid2_v_reg_1255_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast_mid2_v_reg_1255_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast_mid2_v_reg_1255_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast_mid2_v_reg_1255_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal w2_M_real_reg_1260 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_M_real_reg_1260_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_M_imag_reg_1265 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_M_imag_reg_1265_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln28_fu_734_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln28_reg_1271 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln29_fu_746_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln29_reg_1276 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln30_fu_756_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln30_reg_1282 : STD_LOGIC_VECTOR (11 downto 0);
    signal lshr_ln_reg_1288 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln_reg_1288_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln_reg_1288_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln_reg_1288_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln_reg_1288_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln_reg_1288_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln_reg_1288_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln36_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln36_reg_1294 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln36_reg_1294_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln36_reg_1294_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln36_reg_1294_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln36_reg_1294_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln36_reg_1294_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln36_reg_1294_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln1_reg_1298 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln1_reg_1298_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln1_reg_1298_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln1_reg_1298_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln1_reg_1298_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln1_reg_1298_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln1_reg_1298_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal w_9_load_reg_1304 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal w_14_load_reg_1309 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_cast30_mid2_v_reg_1315 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast30_mid2_v_reg_1315_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast30_mid2_v_reg_1315_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast30_mid2_v_reg_1315_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast30_mid2_v_reg_1315_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast30_mid2_v_reg_1315_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln328_fu_900_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_1335 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_1335_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln388_2_fu_915_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln388_2_reg_1345 : STD_LOGIC_VECTOR (11 downto 0);
    signal w12_M_real_reg_1350 : STD_LOGIC_VECTOR (15 downto 0);
    signal w12_M_imag_reg_1355 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln388_fu_920_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln388_reg_1361 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln388_1_reg_1366 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_21_fu_942_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_21_reg_1376 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_23_fu_946_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_23_reg_1382 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_fu_950_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_fu_955_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_reg_1394 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_23_fu_963_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_23_reg_1400 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_25_fu_967_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_25_reg_1406 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_413_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_i_i_reg_1412 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_417_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul3_i_i_reg_1417 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_421_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul6_i_i_reg_1422 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul9_i_i_reg_1427 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_i_i1_reg_1432 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul3_i_i1_reg_1437 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul6_i_i1_reg_1447 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul9_i_i1_reg_1452 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_i_i2_reg_1457 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul3_i_i2_reg_1462 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul6_i_i2_reg_1467 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul9_i_i2_reg_1472 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_25_fu_979_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_25_reg_1477 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_27_fu_983_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_27_reg_1483 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_27_reg_1483_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_397_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_reg_1489 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_377_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_29_reg_1495 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_3_reg_1501 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_37_reg_1507 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_4_reg_1513 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_38_reg_1519 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_381_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_34_reg_1525 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_32_reg_1531 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_36_reg_1537 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_401_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_34_reg_1543 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_35_reg_1549 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_39_reg_1555 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_36_reg_1561 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_405_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_40_reg_1567 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_31_reg_1573 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_385_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_33_reg_1578 : STD_LOGIC_VECTOR (15 downto 0);
    signal add3_i_i29442_partset_fu_995_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_i_i29442_partset_reg_1583 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln38_fu_1030_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln38_reg_1591 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln37_fu_1035_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln37_reg_1596 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln39_fu_1040_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln39_reg_1601 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_409_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_3_reg_1606 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub3_i_i29862_partset_fu_1071_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i29862_partset_reg_1611 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i30282_partset_fu_1093_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i30282_partset_reg_1619 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal zext_ln27_fu_652_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln1027_fu_715_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln28_fu_885_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln388_fu_895_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_5_fu_910_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_6_fu_934_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln328_fu_971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_fu_1022_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln37_fu_1079_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln38_fu_1101_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln39_fu_1108_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k2_fu_94 : STD_LOGIC_VECTOR (6 downto 0);
    signal k2_3_fu_672_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal j2_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_3_fu_829_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m2_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal m2_2_fu_837_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal m1_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_6_fu_636_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_fu_114 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1027_fu_510_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add3_i_i290_partset_fu_1059_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_377_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_377_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_381_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_381_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_397_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_397_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_401_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_401_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_405_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_405_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_413_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_413_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_417_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_417_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_421_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_421_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1027_3_fu_481_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1027_fu_477_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_73_fu_489_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_485_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln54_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln57_fu_537_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln50_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j1_5_fu_525_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_6_fu_543_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m1_4_fu_551_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_7_fu_559_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m1_5_fu_567_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1027_6_fu_604_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1027_5_fu_600_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_76_fu_612_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_75_fu_608_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid16_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_74_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln22_fu_666_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1027_fu_703_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1027_7_fu_730_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln29_2_fu_742_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln29_1_fu_751_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln29_fu_738_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln30_1_fu_762_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln44_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln47_fu_808_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln40_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j2_1_fu_798_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_2_fu_814_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m2_1_fu_821_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln1027_fu_855_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_860_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln388_fu_890_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_fu_868_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln388_1_fu_905_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln388_6_fu_938_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_425_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln388_7_fu_959_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln328_fu_975_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_389_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_393_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln37_1_fu_991_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln37_fu_987_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_1003_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln36_fu_1017_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_fu_1010_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln36_1_fu_1048_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln36_fu_1045_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln38_1_fu_1055_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln38_fu_1051_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln39_1_fu_1089_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln39_fu_1086_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter6_stage2 : STD_LOGIC;
    signal ap_idle_pp0_0to5 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to7 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_w_9_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_w_14_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    w_9_U : component IFFT_AP_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_w_9_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w_9_address0,
        ce0 => w_9_ce0,
        q0 => w_9_q0);

    w_14_U : component IFFT_AP_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_w_14_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w_14_address0,
        ce0 => w_14_ce0,
        q0 => w_14_q0);

    hadd_16ns_16ns_16_5_full_dsp_1_U211 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_377_p0,
        din1 => grp_fu_377_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_377_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U212 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_381_p0,
        din1 => grp_fu_381_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_381_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U213 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_36_reg_1537,
        din1 => p_r_M_imag_39_reg_1555,
        ce => ap_const_logic_1,
        dout => grp_fu_385_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U214 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_real_32_reg_1531,
        din1 => p_r_M_real_36_reg_1561,
        ce => ap_const_logic_1,
        dout => grp_fu_389_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U215 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_34_reg_1543,
        din1 => p_r_M_imag_40_reg_1567,
        ce => ap_const_logic_1,
        dout => grp_fu_393_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U216 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_397_p0,
        din1 => grp_fu_397_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_397_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U217 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_401_p0,
        din1 => grp_fu_401_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_401_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U218 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_405_p0,
        din1 => grp_fu_405_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_405_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U219 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_real_32_reg_1531,
        din1 => p_r_M_real_36_reg_1561,
        ce => ap_const_logic_1,
        dout => grp_fu_409_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U220 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_413_p0,
        din1 => grp_fu_413_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_413_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U221 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_417_p0,
        din1 => grp_fu_417_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_417_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U222 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_421_p0,
        din1 => grp_fu_421_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_421_p2);

    flow_control_loop_pipe_sequential_init_U : component IFFT_AP_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage2) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage2) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage2) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage2) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage2) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage2) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_fu_114 <= ap_const_lv14_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0))) then 
                indvar_flatten_fu_114 <= add_ln1027_fu_510_p2;
            end if; 
        end if;
    end process;

    j1_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j1_fu_106 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0))) then 
                j1_fu_106 <= select_ln1027_3_fu_588_p3;
            end if; 
        end if;
    end process;

    j2_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j2_fu_98 <= ap_const_lv32_0;
            elsif (((icmp_ln1027_reg_1172 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                j2_fu_98 <= j2_3_fu_829_p3;
            end if; 
        end if;
    end process;

    k2_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                k2_fu_94 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0))) then 
                k2_fu_94 <= k2_3_fu_672_p3;
            end if; 
        end if;
    end process;

    m1_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                m1_fu_110 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0))) then 
                m1_fu_110 <= select_ln1027_6_fu_636_p3;
            end if; 
        end if;
    end process;

    m2_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                m2_fu_102 <= ap_const_lv32_0;
            elsif (((icmp_ln1027_reg_1172 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                m2_fu_102 <= m2_2_fu_837_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add3_i_i29442_partset_reg_1583 <= add3_i_i29442_partset_fu_995_p3;
                lshr_ln1_reg_1298_pp0_iter1_reg <= lshr_ln1_reg_1298;
                lshr_ln1_reg_1298_pp0_iter2_reg <= lshr_ln1_reg_1298_pp0_iter1_reg;
                lshr_ln1_reg_1298_pp0_iter3_reg <= lshr_ln1_reg_1298_pp0_iter2_reg;
                lshr_ln1_reg_1298_pp0_iter4_reg <= lshr_ln1_reg_1298_pp0_iter3_reg;
                lshr_ln1_reg_1298_pp0_iter5_reg <= lshr_ln1_reg_1298_pp0_iter4_reg;
                lshr_ln1_reg_1298_pp0_iter6_reg <= lshr_ln1_reg_1298_pp0_iter5_reg;
                lshr_ln_reg_1288_pp0_iter1_reg <= lshr_ln_reg_1288;
                lshr_ln_reg_1288_pp0_iter2_reg <= lshr_ln_reg_1288_pp0_iter1_reg;
                lshr_ln_reg_1288_pp0_iter3_reg <= lshr_ln_reg_1288_pp0_iter2_reg;
                lshr_ln_reg_1288_pp0_iter4_reg <= lshr_ln_reg_1288_pp0_iter3_reg;
                lshr_ln_reg_1288_pp0_iter5_reg <= lshr_ln_reg_1288_pp0_iter4_reg;
                lshr_ln_reg_1288_pp0_iter6_reg <= lshr_ln_reg_1288_pp0_iter5_reg;
                p_cast_mid2_v_reg_1255_pp0_iter1_reg <= p_cast_mid2_v_reg_1255;
                p_cast_mid2_v_reg_1255_pp0_iter2_reg <= p_cast_mid2_v_reg_1255_pp0_iter1_reg;
                p_cast_mid2_v_reg_1255_pp0_iter3_reg <= p_cast_mid2_v_reg_1255_pp0_iter2_reg;
                p_cast_mid2_v_reg_1255_pp0_iter4_reg <= p_cast_mid2_v_reg_1255_pp0_iter3_reg;
                p_cast_mid2_v_reg_1255_pp0_iter5_reg <= p_cast_mid2_v_reg_1255_pp0_iter4_reg;
                p_cast_mid2_v_reg_1255_pp0_iter6_reg <= p_cast_mid2_v_reg_1255_pp0_iter5_reg;
                p_r_M_imag_33_reg_1578 <= grp_fu_385_p2;
                w2_M_imag_reg_1265_pp0_iter1_reg <= w2_M_imag_reg_1265;
                w2_M_real_reg_1260_pp0_iter1_reg <= w2_M_real_reg_1260;
                xor_ln36_reg_1294_pp0_iter1_reg <= xor_ln36_reg_1294;
                xor_ln36_reg_1294_pp0_iter2_reg <= xor_ln36_reg_1294_pp0_iter1_reg;
                xor_ln36_reg_1294_pp0_iter3_reg <= xor_ln36_reg_1294_pp0_iter2_reg;
                xor_ln36_reg_1294_pp0_iter4_reg <= xor_ln36_reg_1294_pp0_iter3_reg;
                xor_ln36_reg_1294_pp0_iter5_reg <= xor_ln36_reg_1294_pp0_iter4_reg;
                xor_ln36_reg_1294_pp0_iter6_reg <= xor_ln36_reg_1294_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0))) then
                add40_mid1_reg_1200 <= add40_mid1_fu_616_p2;
                icmp_ln1027_6_reg_1176 <= icmp_ln1027_6_fu_575_p2;
                select_ln1027_2_reg_1182 <= select_ln1027_2_fu_580_p3;
                select_ln1027_3_reg_1190 <= select_ln1027_3_fu_588_p3;
                select_ln1027_5_reg_1205 <= select_ln1027_5_fu_628_p3;
                trunc_ln1027_4_reg_1195 <= trunc_ln1027_4_fu_596_p1;
                trunc_ln1027_8_reg_1209 <= trunc_ln1027_8_fu_644_p1;
                trunc_ln1027_9_reg_1214 <= trunc_ln1027_9_fu_648_p1;
                trunc_ln29_1_reg_1229 <= trunc_ln29_1_fu_658_p1;
                trunc_ln29_3_reg_1234 <= trunc_ln29_3_fu_662_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add40_reg_1167 <= add40_fu_493_p2;
                icmp_ln1027_reg_1172 <= icmp_ln1027_fu_505_p2;
                icmp_ln1027_reg_1172_pp0_iter1_reg <= icmp_ln1027_reg_1172;
                icmp_ln1027_reg_1172_pp0_iter2_reg <= icmp_ln1027_reg_1172_pp0_iter1_reg;
                icmp_ln1027_reg_1172_pp0_iter3_reg <= icmp_ln1027_reg_1172_pp0_iter2_reg;
                icmp_ln1027_reg_1172_pp0_iter4_reg <= icmp_ln1027_reg_1172_pp0_iter3_reg;
                icmp_ln1027_reg_1172_pp0_iter5_reg <= icmp_ln1027_reg_1172_pp0_iter4_reg;
                icmp_ln1027_reg_1172_pp0_iter6_reg <= icmp_ln1027_reg_1172_pp0_iter5_reg;
                p_r_M_imag_25_reg_1406 <= p_r_M_imag_25_fu_967_p1;
                p_r_M_imag_reg_1394 <= p_r_M_imag_fu_955_p1;
                p_r_M_real_23_reg_1400 <= p_r_M_real_23_fu_963_p1;
                select_ln1027_5_reg_1205_pp0_iter1_reg <= select_ln1027_5_reg_1205;
                select_ln1027_5_reg_1205_pp0_iter2_reg <= select_ln1027_5_reg_1205_pp0_iter1_reg;
                select_ln1027_5_reg_1205_pp0_iter3_reg <= select_ln1027_5_reg_1205_pp0_iter2_reg;
                select_ln1027_5_reg_1205_pp0_iter4_reg <= select_ln1027_5_reg_1205_pp0_iter3_reg;
                select_ln1027_5_reg_1205_pp0_iter5_reg <= select_ln1027_5_reg_1205_pp0_iter4_reg;
                select_ln1027_5_reg_1205_pp0_iter6_reg <= select_ln1027_5_reg_1205_pp0_iter5_reg;
                select_ln1027_5_reg_1205_pp0_iter7_reg <= select_ln1027_5_reg_1205_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_1172 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add_ln28_reg_1271 <= add_ln28_fu_734_p2;
                add_ln29_reg_1276 <= add_ln29_fu_746_p2;
                add_ln30_reg_1282 <= add_ln30_fu_756_p2;
                lshr_ln1_reg_1298 <= add_ln30_1_fu_762_p2(10 downto 1);
                lshr_ln_reg_1288 <= add_ln29_1_fu_751_p2(10 downto 1);
                p_cast_mid2_v_reg_1255 <= select_ln1027_4_fu_710_p3(5 downto 1);
                select_ln1027_4_reg_1239 <= select_ln1027_4_fu_710_p3;
                xor_ln36_reg_1294 <= xor_ln36_fu_778_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_1172 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add_ln328_reg_1335 <= add_ln328_fu_900_p2;
                add_ln388_2_reg_1345 <= add_ln388_2_fu_915_p2;
                p_cast30_mid2_v_reg_1315 <= xor_ln1027_fu_855_p2(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add_ln328_reg_1335_pp0_iter1_reg <= add_ln328_reg_1335;
                add_ln37_reg_1596 <= add_ln37_fu_1035_p2;
                add_ln38_reg_1591 <= add_ln38_fu_1030_p2;
                add_ln39_reg_1601 <= add_ln39_fu_1040_p2;
                p_cast30_mid2_v_reg_1315_pp0_iter1_reg <= p_cast30_mid2_v_reg_1315;
                p_cast30_mid2_v_reg_1315_pp0_iter2_reg <= p_cast30_mid2_v_reg_1315_pp0_iter1_reg;
                p_cast30_mid2_v_reg_1315_pp0_iter3_reg <= p_cast30_mid2_v_reg_1315_pp0_iter2_reg;
                p_cast30_mid2_v_reg_1315_pp0_iter4_reg <= p_cast30_mid2_v_reg_1315_pp0_iter3_reg;
                p_cast30_mid2_v_reg_1315_pp0_iter5_reg <= p_cast30_mid2_v_reg_1315_pp0_iter4_reg;
                p_r_M_imag_27_reg_1483 <= p_r_M_imag_27_fu_983_p1;
                p_r_M_imag_27_reg_1483_pp0_iter3_reg <= p_r_M_imag_27_reg_1483;
                p_r_M_real_25_reg_1477 <= p_r_M_real_25_fu_979_p1;
                p_r_M_real_3_reg_1606 <= grp_fu_409_p2;
                sub3_i_i29862_partset_reg_1611 <= sub3_i_i29862_partset_fu_1071_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul3_i_i1_reg_1437 <= grp_fu_421_p2;
                mul9_i_i_reg_1427 <= grp_fu_413_p2;
                mul_i_i1_reg_1432 <= grp_fu_417_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul3_i_i2_reg_1462 <= grp_fu_413_p2;
                mul6_i_i2_reg_1467 <= grp_fu_417_p2;
                mul9_i_i2_reg_1472 <= grp_fu_421_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul3_i_i_reg_1417 <= grp_fu_417_p2;
                mul6_i_i_reg_1422 <= grp_fu_421_p2;
                mul_i_i_reg_1412 <= grp_fu_413_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul6_i_i1_reg_1447 <= grp_fu_413_p2;
                mul9_i_i1_reg_1452 <= grp_fu_417_p2;
                mul_i_i2_reg_1457 <= grp_fu_421_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                p_r_3_reg_1501 <= grp_fu_397_p2;
                p_r_M_imag_29_reg_1495 <= grp_fu_377_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_r_4_reg_1513 <= grp_fu_397_p2;
                p_r_M_imag_38_reg_1519 <= grp_fu_377_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_1172 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_r_M_imag_23_reg_1382 <= p_r_M_imag_23_fu_946_p1;
                p_r_M_real_21_reg_1376 <= p_r_M_real_21_fu_942_p1;
                trunc_ln388_1_reg_1366 <= I_q1(31 downto 16);
                trunc_ln388_reg_1361 <= trunc_ln388_fu_920_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_r_M_imag_34_reg_1543 <= grp_fu_401_p2;
                p_r_M_imag_36_reg_1537 <= grp_fu_381_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                p_r_M_imag_37_reg_1507 <= grp_fu_377_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_r_M_imag_39_reg_1555 <= grp_fu_381_p2;
                p_r_M_imag_40_reg_1567 <= grp_fu_405_p2;
                p_r_M_real_35_reg_1549 <= grp_fu_377_p2;
                p_r_M_real_36_reg_1561 <= grp_fu_401_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                p_r_M_real_31_reg_1573 <= grp_fu_381_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                p_r_M_real_32_reg_1531 <= grp_fu_397_p2;
                p_r_M_real_34_reg_1525 <= grp_fu_381_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_r_reg_1489 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sub3_i_i30282_partset_reg_1619 <= sub3_i_i30282_partset_fu_1093_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_1172 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                w12_M_imag_reg_1355 <= w_14_q0;
                w12_M_real_reg_1350 <= w_9_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_1172 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                w2_M_imag_reg_1265 <= w_14_q0;
                w2_M_real_reg_1260 <= w_9_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_1172 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                w_14_load_reg_1309 <= w_14_q0;
                w_9_load_reg_1304 <= w_9_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter6_stage2, ap_idle_pp0_0to5, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to7, ap_done_pending_pp0, ap_block_pp0_stage1_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to7 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage2) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    I_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln388_5_fu_910_p1, zext_ln388_6_fu_934_p1, ap_block_pp0_stage0, zext_ln328_fu_971_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            I_address0 <= zext_ln328_fu_971_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            I_address0 <= zext_ln388_6_fu_934_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            I_address0 <= zext_ln388_5_fu_910_p1(12 - 1 downto 0);
        else 
            I_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    I_address1 <= zext_ln388_fu_895_p1(12 - 1 downto 0);

    I_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            I_ce0 <= ap_const_logic_1;
        else 
            I_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    I_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            I_ce1 <= ap_const_logic_1;
        else 
            I_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_0_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0, zext_ln36_fu_1022_p1, zext_ln37_fu_1079_p1, zext_ln38_fu_1101_p1, zext_ln39_fu_1108_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            X_0_0_address0 <= zext_ln39_fu_1108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_0_0_address0 <= zext_ln38_fu_1101_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_0_0_address0 <= zext_ln37_fu_1079_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            X_0_0_address0 <= zext_ln36_fu_1022_p1(10 - 1 downto 0);
        else 
            X_0_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_0_0_ce0 <= ap_const_logic_1;
        else 
            X_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_0_0_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, add3_i_i29442_partset_reg_1583, sub3_i_i29862_partset_reg_1611, sub3_i_i30282_partset_reg_1619, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0, add3_i_i290_partset_fu_1059_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            X_0_0_d0 <= sub3_i_i30282_partset_reg_1619;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_0_0_d0 <= sub3_i_i29862_partset_reg_1611;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_0_0_d0 <= add3_i_i29442_partset_reg_1583;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            X_0_0_d0 <= add3_i_i290_partset_fu_1059_p3;
        else 
            X_0_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_0_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, select_ln1027_5_reg_1205_pp0_iter6_reg, select_ln1027_5_reg_1205_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, xor_ln36_reg_1294_pp0_iter6_reg, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (select_ln1027_5_reg_1205_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (select_ln1027_5_reg_1205_pp0_iter7_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1027_5_reg_1205_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln1027_5_reg_1205_pp0_iter6_reg = ap_const_lv1_0)))) then 
            X_0_0_we0 <= ap_const_logic_1;
        else 
            X_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_0_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0, zext_ln36_fu_1022_p1, zext_ln37_fu_1079_p1, zext_ln38_fu_1101_p1, zext_ln39_fu_1108_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            X_0_1_address0 <= zext_ln39_fu_1108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_0_1_address0 <= zext_ln38_fu_1101_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_0_1_address0 <= zext_ln37_fu_1079_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            X_0_1_address0 <= zext_ln36_fu_1022_p1(10 - 1 downto 0);
        else 
            X_0_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_0_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_0_1_ce0 <= ap_const_logic_1;
        else 
            X_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_0_1_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, add3_i_i29442_partset_reg_1583, sub3_i_i29862_partset_reg_1611, sub3_i_i30282_partset_reg_1619, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0, add3_i_i290_partset_fu_1059_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            X_0_1_d0 <= sub3_i_i30282_partset_reg_1619;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_0_1_d0 <= sub3_i_i29862_partset_reg_1611;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_0_1_d0 <= add3_i_i29442_partset_reg_1583;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            X_0_1_d0 <= add3_i_i290_partset_fu_1059_p3;
        else 
            X_0_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_0_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, select_ln1027_5_reg_1205_pp0_iter6_reg, select_ln1027_5_reg_1205_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, xor_ln36_reg_1294_pp0_iter6_reg, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (select_ln1027_5_reg_1205_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (select_ln1027_5_reg_1205_pp0_iter7_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1027_5_reg_1205_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln1027_5_reg_1205_pp0_iter6_reg = ap_const_lv1_0)))) then 
            X_0_1_we0 <= ap_const_logic_1;
        else 
            X_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_1_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0, zext_ln36_fu_1022_p1, zext_ln37_fu_1079_p1, zext_ln38_fu_1101_p1, zext_ln39_fu_1108_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            X_1_0_address0 <= zext_ln39_fu_1108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_1_0_address0 <= zext_ln38_fu_1101_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_1_0_address0 <= zext_ln37_fu_1079_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            X_1_0_address0 <= zext_ln36_fu_1022_p1(10 - 1 downto 0);
        else 
            X_1_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_1_0_ce0 <= ap_const_logic_1;
        else 
            X_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_1_0_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, add3_i_i29442_partset_reg_1583, sub3_i_i29862_partset_reg_1611, sub3_i_i30282_partset_reg_1619, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0, add3_i_i290_partset_fu_1059_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            X_1_0_d0 <= sub3_i_i30282_partset_reg_1619;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_1_0_d0 <= sub3_i_i29862_partset_reg_1611;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_1_0_d0 <= add3_i_i29442_partset_reg_1583;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            X_1_0_d0 <= add3_i_i290_partset_fu_1059_p3;
        else 
            X_1_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_1_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, select_ln1027_5_reg_1205_pp0_iter6_reg, select_ln1027_5_reg_1205_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, xor_ln36_reg_1294_pp0_iter6_reg, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (select_ln1027_5_reg_1205_pp0_iter6_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (select_ln1027_5_reg_1205_pp0_iter7_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1027_5_reg_1205_pp0_iter6_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln1027_5_reg_1205_pp0_iter6_reg = ap_const_lv1_1)))) then 
            X_1_0_we0 <= ap_const_logic_1;
        else 
            X_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_1_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0, zext_ln36_fu_1022_p1, zext_ln37_fu_1079_p1, zext_ln38_fu_1101_p1, zext_ln39_fu_1108_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            X_1_1_address0 <= zext_ln39_fu_1108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_1_1_address0 <= zext_ln38_fu_1101_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_1_1_address0 <= zext_ln37_fu_1079_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            X_1_1_address0 <= zext_ln36_fu_1022_p1(10 - 1 downto 0);
        else 
            X_1_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_1_1_ce0 <= ap_const_logic_1;
        else 
            X_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_1_1_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, add3_i_i29442_partset_reg_1583, sub3_i_i29862_partset_reg_1611, sub3_i_i30282_partset_reg_1619, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0, add3_i_i290_partset_fu_1059_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            X_1_1_d0 <= sub3_i_i30282_partset_reg_1619;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_1_1_d0 <= sub3_i_i29862_partset_reg_1611;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_1_1_d0 <= add3_i_i29442_partset_reg_1583;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            X_1_1_d0 <= add3_i_i290_partset_fu_1059_p3;
        else 
            X_1_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_1_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, select_ln1027_5_reg_1205_pp0_iter6_reg, select_ln1027_5_reg_1205_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, xor_ln36_reg_1294_pp0_iter6_reg, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (select_ln1027_5_reg_1205_pp0_iter6_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (select_ln1027_5_reg_1205_pp0_iter7_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1027_5_reg_1205_pp0_iter6_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln36_reg_1294_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln1027_5_reg_1205_pp0_iter6_reg = ap_const_lv1_1)))) then 
            X_1_1_we0 <= ap_const_logic_1;
        else 
            X_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add3_i_i290_partset_fu_1059_p3 <= (bitcast_ln36_1_fu_1048_p1 & bitcast_ln36_fu_1045_p1);
    add3_i_i29442_partset_fu_995_p3 <= (bitcast_ln37_1_fu_991_p1 & bitcast_ln37_fu_987_p1);
    add40_fu_493_p2 <= std_logic_vector(unsigned(trunc_ln1027_3_fu_481_p1) + unsigned(trunc_ln1027_fu_477_p1));
    add40_mid1_fu_616_p2 <= std_logic_vector(unsigned(trunc_ln1027_6_fu_604_p1) + unsigned(trunc_ln1027_5_fu_600_p1));
    add_ln1027_fu_510_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_114) + unsigned(ap_const_lv14_1));
    add_ln22_fu_666_p2 <= std_logic_vector(unsigned(k2_fu_94) + unsigned(ap_const_lv7_1));
    add_ln28_fu_734_p2 <= std_logic_vector(unsigned(trunc_ln1027_9_reg_1214) + unsigned(trunc_ln1027_4_reg_1195));
    add_ln29_1_fu_751_p2 <= std_logic_vector(unsigned(trunc_ln29_3_reg_1234) + unsigned(trunc_ln29_2_fu_742_p1));
    add_ln29_fu_746_p2 <= std_logic_vector(unsigned(trunc_ln1027_8_reg_1209) + unsigned(trunc_ln1027_7_fu_730_p1));
    add_ln30_1_fu_762_p2 <= std_logic_vector(unsigned(add_ln29_1_fu_751_p2) + unsigned(ap_const_lv11_20));
    add_ln30_fu_756_p2 <= std_logic_vector(unsigned(add_ln29_fu_746_p2) + unsigned(ap_const_lv12_20));
    add_ln328_fu_900_p2 <= std_logic_vector(unsigned(tmp_8_fu_868_p3) + unsigned(add_ln29_reg_1276));
    add_ln36_fu_1017_p2 <= std_logic_vector(unsigned(tmp_9_fu_1003_p3) + unsigned(lshr_ln_reg_1288_pp0_iter6_reg));
    add_ln37_fu_1035_p2 <= std_logic_vector(unsigned(tmp_9_fu_1003_p3) + unsigned(lshr_ln1_reg_1298_pp0_iter6_reg));
    add_ln388_1_fu_905_p2 <= std_logic_vector(unsigned(tmp_8_fu_868_p3) + unsigned(add_ln30_reg_1282));
    add_ln388_2_fu_915_p2 <= std_logic_vector(unsigned(tmp_s_fu_860_p3) + unsigned(add_ln30_reg_1282));
    add_ln388_fu_890_p2 <= std_logic_vector(unsigned(tmp_s_fu_860_p3) + unsigned(add_ln29_reg_1276));
    add_ln38_fu_1030_p2 <= std_logic_vector(unsigned(tmp_10_fu_1010_p3) + unsigned(lshr_ln_reg_1288_pp0_iter6_reg));
    add_ln39_fu_1040_p2 <= std_logic_vector(unsigned(tmp_10_fu_1010_p3) + unsigned(lshr_ln1_reg_1298_pp0_iter6_reg));
    add_ln47_fu_808_p2 <= std_logic_vector(unsigned(select_ln1027_fu_703_p3) + unsigned(ap_const_lv32_40));
    add_ln57_fu_537_p2 <= std_logic_vector(unsigned(m1_fu_110) + unsigned(ap_const_lv32_40));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, icmp_ln1027_reg_1172)
    begin
        if (((icmp_ln1027_reg_1172 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter6_stage2_assign_proc : process(ap_enable_reg_pp0_iter6, icmp_ln1027_reg_1172_pp0_iter6_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_1172_pp0_iter6_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter6_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter6_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg, ap_loop_exit_ready_pp0_iter2_reg, ap_loop_exit_ready_pp0_iter3_reg, ap_loop_exit_ready_pp0_iter4_reg, ap_loop_exit_ready_pp0_iter5_reg, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (not(((ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to7_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to7 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln36_1_fu_1048_p1 <= p_r_M_imag_33_reg_1578;
    bitcast_ln36_fu_1045_p1 <= p_r_M_real_31_reg_1573;
    bitcast_ln37_1_fu_991_p1 <= grp_fu_393_p2;
    bitcast_ln37_fu_987_p1 <= grp_fu_389_p2;
    bitcast_ln38_1_fu_1055_p1 <= grp_fu_405_p2;
    bitcast_ln38_fu_1051_p1 <= grp_fu_401_p2;
    bitcast_ln39_1_fu_1089_p1 <= grp_fu_405_p2;
    bitcast_ln39_fu_1086_p1 <= p_r_M_real_3_reg_1606;
    empty_73_fu_489_p1 <= j1_fu_106(1 - 1 downto 0);
    empty_74_fu_499_p2 <= (empty_fu_485_p1 xor empty_73_fu_489_p1);
    empty_75_fu_608_p1 <= m1_5_fu_567_p3(1 - 1 downto 0);
    empty_76_fu_612_p1 <= j1_7_fu_559_p3(1 - 1 downto 0);
    empty_fu_485_p1 <= m1_fu_110(1 - 1 downto 0);

    grp_fu_377_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul6_i_i_reg_1422, mul6_i_i1_reg_1447, mul6_i_i2_reg_1467, p_r_reg_1489, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_377_p0 <= p_r_reg_1489;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_377_p0 <= mul6_i_i2_reg_1467;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_377_p0 <= mul6_i_i1_reg_1447;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_377_p0 <= mul6_i_i_reg_1422;
        else 
            grp_fu_377_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_377_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul9_i_i_reg_1427, mul9_i_i1_reg_1452, mul9_i_i2_reg_1472, p_r_4_reg_1513, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_377_p1 <= p_r_4_reg_1513;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_377_p1 <= mul9_i_i2_reg_1472;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_377_p1 <= mul9_i_i1_reg_1452;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_377_p1 <= mul9_i_i_reg_1427;
        else 
            grp_fu_377_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_381_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, p_r_M_real_25_reg_1477, p_r_M_imag_27_reg_1483_pp0_iter3_reg, p_r_M_imag_29_reg_1495, p_r_M_real_34_reg_1525, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_381_p0 <= p_r_M_real_34_reg_1525;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_381_p0 <= p_r_M_imag_29_reg_1495;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_381_p0 <= p_r_M_imag_27_reg_1483_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_381_p0 <= p_r_M_real_25_reg_1477;
        else 
            grp_fu_381_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_381_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, p_r_3_reg_1501, p_r_M_imag_37_reg_1507, p_r_M_imag_38_reg_1519, p_r_M_real_35_reg_1549, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_381_p1 <= p_r_M_real_35_reg_1549;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_381_p1 <= p_r_M_imag_38_reg_1519;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_381_p1 <= p_r_M_imag_37_reg_1507;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_381_p1 <= p_r_3_reg_1501;
        else 
            grp_fu_381_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_397_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul_i_i_reg_1412, mul_i_i1_reg_1432, mul_i_i2_reg_1457, p_r_M_real_25_reg_1477, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_397_p0 <= p_r_M_real_25_reg_1477;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_397_p0 <= mul_i_i2_reg_1457;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_397_p0 <= mul_i_i1_reg_1432;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_397_p0 <= mul_i_i_reg_1412;
        else 
            grp_fu_397_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_397_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul3_i_i_reg_1417, mul3_i_i1_reg_1437, mul3_i_i2_reg_1462, p_r_3_reg_1501, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_397_p1 <= p_r_3_reg_1501;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_397_p1 <= mul3_i_i2_reg_1462;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_397_p1 <= mul3_i_i1_reg_1437;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_397_p1 <= mul3_i_i_reg_1417;
        else 
            grp_fu_397_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_401_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, p_r_M_imag_27_reg_1483_pp0_iter3_reg, p_r_reg_1489, p_r_M_real_34_reg_1525, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_401_p0 <= p_r_M_real_34_reg_1525;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_401_p0 <= p_r_reg_1489;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_401_p0 <= p_r_M_imag_27_reg_1483_pp0_iter3_reg;
        else 
            grp_fu_401_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_401_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, p_r_M_imag_37_reg_1507, p_r_4_reg_1513, p_r_M_real_35_reg_1549, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_401_p1 <= p_r_M_real_35_reg_1549;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_401_p1 <= p_r_4_reg_1513;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_401_p1 <= p_r_M_imag_37_reg_1507;
        else 
            grp_fu_401_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_405_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, p_r_M_imag_29_reg_1495, p_r_M_imag_36_reg_1537, p_r_M_imag_34_reg_1543, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_405_p0 <= p_r_M_imag_34_reg_1543;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_405_p0 <= p_r_M_imag_36_reg_1537;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_405_p0 <= p_r_M_imag_29_reg_1495;
        else 
            grp_fu_405_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_405_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, p_r_M_imag_38_reg_1519, p_r_M_imag_39_reg_1555, p_r_M_imag_40_reg_1567, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_405_p1 <= p_r_M_imag_40_reg_1567;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_405_p1 <= p_r_M_imag_39_reg_1555;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_405_p1 <= p_r_M_imag_38_reg_1519;
        else 
            grp_fu_405_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_413_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, p_r_M_real_21_reg_1376, p_r_M_real_fu_950_p1, p_r_M_imag_reg_1394, p_r_M_imag_25_reg_1406, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_413_p0 <= p_r_M_imag_25_reg_1406;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_413_p0 <= p_r_M_real_21_reg_1376;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_413_p0 <= p_r_M_imag_reg_1394;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_413_p0 <= p_r_M_real_fu_950_p1;
        else 
            grp_fu_413_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_413_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, w2_M_imag_reg_1265_pp0_iter1_reg, w_9_load_reg_1304, w12_M_imag_reg_1355, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_413_p1 <= w12_M_imag_reg_1355;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_413_p1 <= w2_M_imag_reg_1265_pp0_iter1_reg;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_413_p1 <= w_9_load_reg_1304;
        else 
            grp_fu_413_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_417_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, p_r_M_real_21_reg_1376, p_r_M_imag_23_reg_1382, p_r_M_imag_fu_955_p1, p_r_M_real_23_reg_1400, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_417_p0 <= p_r_M_real_23_reg_1400;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_417_p0 <= p_r_M_imag_23_reg_1382;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_417_p0 <= p_r_M_real_21_reg_1376;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_417_p0 <= p_r_M_imag_fu_955_p1;
        else 
            grp_fu_417_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_417_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, w2_M_real_reg_1260, w2_M_real_reg_1260_pp0_iter1_reg, w_14_load_reg_1309, w12_M_imag_reg_1355, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_417_p1 <= w12_M_imag_reg_1355;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_417_p1 <= w2_M_real_reg_1260_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_417_p1 <= w2_M_real_reg_1260;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_417_p1 <= w_14_load_reg_1309;
        else 
            grp_fu_417_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_421_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, p_r_M_imag_23_reg_1382, p_r_M_real_fu_950_p1, p_r_M_real_23_reg_1400, p_r_M_imag_25_reg_1406, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_421_p0 <= p_r_M_imag_25_reg_1406;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_421_p0 <= p_r_M_real_23_reg_1400;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_421_p0 <= p_r_M_imag_23_reg_1382;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_421_p0 <= p_r_M_real_fu_950_p1;
        else 
            grp_fu_421_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_421_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, w2_M_imag_reg_1265, w_14_load_reg_1309, w12_M_real_reg_1350, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_421_p1 <= w12_M_real_reg_1350;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_421_p1 <= w2_M_imag_reg_1265;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_421_p1 <= w_14_load_reg_1309;
        else 
            grp_fu_421_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_425_p4 <= I_q0(31 downto 16);
    icmp_ln1027_6_fu_575_p2 <= "1" when (k2_fu_94 = trunc_ln10) else "0";
    icmp_ln1027_fu_505_p2 <= "1" when (indvar_flatten_fu_114 = bound) else "0";
    icmp_ln40_fu_793_p2 <= "1" when (unsigned(select_ln1027_2_reg_1182) < unsigned(ap_const_lv32_1F)) else "0";
    icmp_ln44_fu_803_p2 <= "1" when (select_ln1027_2_reg_1182 = ap_const_lv32_1F) else "0";
    icmp_ln50_fu_519_p2 <= "1" when (unsigned(j1_fu_106) < unsigned(ap_const_lv32_1F)) else "0";
    icmp_ln54_fu_531_p2 <= "1" when (j1_fu_106 = ap_const_lv32_1F) else "0";
    j1_5_fu_525_p2 <= std_logic_vector(unsigned(j1_fu_106) + unsigned(ap_const_lv32_1));
    j1_6_fu_543_p3 <= 
        ap_const_lv32_0 when (icmp_ln54_fu_531_p2(0) = '1') else 
        j1_fu_106;
    j1_7_fu_559_p3 <= 
        j1_5_fu_525_p2 when (icmp_ln50_fu_519_p2(0) = '1') else 
        j1_6_fu_543_p3;
    j2_1_fu_798_p2 <= std_logic_vector(unsigned(select_ln1027_2_reg_1182) + unsigned(ap_const_lv32_1));
    j2_2_fu_814_p3 <= 
        ap_const_lv32_0 when (icmp_ln44_fu_803_p2(0) = '1') else 
        select_ln1027_2_reg_1182;
    j2_3_fu_829_p3 <= 
        j2_1_fu_798_p2 when (icmp_ln40_fu_793_p2(0) = '1') else 
        j2_2_fu_814_p3;
    k2_3_fu_672_p3 <= 
        ap_const_lv7_1 when (icmp_ln1027_6_fu_575_p2(0) = '1') else 
        add_ln22_fu_666_p2;
    m1_4_fu_551_p3 <= 
        add_ln57_fu_537_p2 when (icmp_ln54_fu_531_p2(0) = '1') else 
        m1_fu_110;
    m1_5_fu_567_p3 <= 
        m1_fu_110 when (icmp_ln50_fu_519_p2(0) = '1') else 
        m1_4_fu_551_p3;
    m2_1_fu_821_p3 <= 
        add_ln47_fu_808_p2 when (icmp_ln44_fu_803_p2(0) = '1') else 
        select_ln1027_fu_703_p3;
    m2_2_fu_837_p3 <= 
        select_ln1027_fu_703_p3 when (icmp_ln40_fu_793_p2(0) = '1') else 
        m2_1_fu_821_p3;
    p_mid16_fu_622_p2 <= (empty_76_fu_612_p1 xor empty_75_fu_608_p1);
    p_r_M_imag_23_fu_946_p1 <= grp_fu_425_p4;
    p_r_M_imag_25_fu_967_p1 <= grp_fu_425_p4;
    p_r_M_imag_27_fu_983_p1 <= grp_fu_425_p4;
    p_r_M_imag_fu_955_p1 <= trunc_ln388_1_reg_1366;
    p_r_M_real_21_fu_942_p1 <= trunc_ln388_6_fu_938_p1;
    p_r_M_real_23_fu_963_p1 <= trunc_ln388_7_fu_959_p1;
    p_r_M_real_25_fu_979_p1 <= trunc_ln328_fu_975_p1;
    p_r_M_real_fu_950_p1 <= trunc_ln388_reg_1361;
    select_ln1027_2_fu_580_p3 <= 
        ap_const_lv32_0 when (icmp_ln1027_6_fu_575_p2(0) = '1') else 
        j2_fu_98;
    select_ln1027_3_fu_588_p3 <= 
        j1_7_fu_559_p3 when (icmp_ln1027_6_fu_575_p2(0) = '1') else 
        j1_fu_106;
    select_ln1027_4_fu_710_p3 <= 
        add40_mid1_reg_1200 when (icmp_ln1027_6_reg_1176(0) = '1') else 
        add40_reg_1167;
    select_ln1027_5_fu_628_p3 <= 
        p_mid16_fu_622_p2 when (icmp_ln1027_6_fu_575_p2(0) = '1') else 
        empty_74_fu_499_p2;
    select_ln1027_6_fu_636_p3 <= 
        m1_5_fu_567_p3 when (icmp_ln1027_6_fu_575_p2(0) = '1') else 
        m1_fu_110;
    select_ln1027_fu_703_p3 <= 
        ap_const_lv32_0 when (icmp_ln1027_6_reg_1176(0) = '1') else 
        m2_fu_102;
    sub3_i_i29862_partset_fu_1071_p3 <= (bitcast_ln38_1_fu_1055_p1 & bitcast_ln38_fu_1051_p1);
    sub3_i_i30282_partset_fu_1093_p3 <= (bitcast_ln39_1_fu_1089_p1 & bitcast_ln39_fu_1086_p1);
    tmp_10_fu_1010_p3 <= (p_cast30_mid2_v_reg_1315_pp0_iter5_reg & ap_const_lv5_0);
    tmp_8_fu_868_p3 <= (select_ln1027_4_reg_1239 & ap_const_lv6_0);
    tmp_9_fu_1003_p3 <= (p_cast_mid2_v_reg_1255_pp0_iter6_reg & ap_const_lv5_0);
    tmp_s_fu_860_p3 <= (xor_ln1027_fu_855_p2 & ap_const_lv6_0);
    trunc_ln1027_3_fu_481_p1 <= j1_fu_106(6 - 1 downto 0);
    trunc_ln1027_4_fu_596_p1 <= select_ln1027_3_fu_588_p3(5 - 1 downto 0);
    trunc_ln1027_5_fu_600_p1 <= m1_5_fu_567_p3(6 - 1 downto 0);
    trunc_ln1027_6_fu_604_p1 <= j1_7_fu_559_p3(6 - 1 downto 0);
    trunc_ln1027_7_fu_730_p1 <= select_ln1027_fu_703_p3(12 - 1 downto 0);
    trunc_ln1027_8_fu_644_p1 <= select_ln1027_2_fu_580_p3(12 - 1 downto 0);
    trunc_ln1027_9_fu_648_p1 <= select_ln1027_2_fu_580_p3(5 - 1 downto 0);
    trunc_ln1027_fu_477_p1 <= m1_fu_110(6 - 1 downto 0);
    trunc_ln29_1_fu_658_p1 <= select_ln1027_2_fu_580_p3(1 - 1 downto 0);
    trunc_ln29_2_fu_742_p1 <= select_ln1027_fu_703_p3(11 - 1 downto 0);
    trunc_ln29_3_fu_662_p1 <= select_ln1027_2_fu_580_p3(11 - 1 downto 0);
    trunc_ln29_fu_738_p1 <= select_ln1027_fu_703_p3(1 - 1 downto 0);
    trunc_ln328_fu_975_p1 <= I_q0(16 - 1 downto 0);
    trunc_ln388_6_fu_938_p1 <= I_q0(16 - 1 downto 0);
    trunc_ln388_7_fu_959_p1 <= I_q0(16 - 1 downto 0);
    trunc_ln388_fu_920_p1 <= I_q1(16 - 1 downto 0);

    w_14_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln27_fu_652_p1, ap_block_pp0_stage1, zext_ln1027_fu_715_p1, ap_block_pp0_stage2, zext_ln28_fu_885_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                w_14_address0 <= zext_ln28_fu_885_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                w_14_address0 <= zext_ln1027_fu_715_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                w_14_address0 <= zext_ln27_fu_652_p1(5 - 1 downto 0);
            else 
                w_14_address0 <= "XXXXX";
            end if;
        else 
            w_14_address0 <= "XXXXX";
        end if; 
    end process;


    w_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            w_14_ce0 <= ap_const_logic_1;
        else 
            w_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w_9_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln27_fu_652_p1, ap_block_pp0_stage1, zext_ln1027_fu_715_p1, ap_block_pp0_stage2, zext_ln28_fu_885_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                w_9_address0 <= zext_ln28_fu_885_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                w_9_address0 <= zext_ln1027_fu_715_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                w_9_address0 <= zext_ln27_fu_652_p1(5 - 1 downto 0);
            else 
                w_9_address0 <= "XXXXX";
            end if;
        else 
            w_9_address0 <= "XXXXX";
        end if; 
    end process;


    w_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            w_9_ce0 <= ap_const_logic_1;
        else 
            w_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln1027_fu_855_p2 <= (select_ln1027_4_reg_1239 xor ap_const_lv6_20);
    xor_ln36_fu_778_p2 <= (trunc_ln29_fu_738_p1 xor trunc_ln29_1_reg_1229);
    zext_ln1027_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1027_3_reg_1190),64));
    zext_ln27_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1027_2_fu_580_p3),64));
    zext_ln28_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_reg_1271),64));
    zext_ln328_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln328_reg_1335_pp0_iter1_reg),64));
    zext_ln36_fu_1022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_fu_1017_p2),64));
    zext_ln37_fu_1079_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln37_reg_1596),64));
    zext_ln388_5_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln388_1_fu_905_p2),64));
    zext_ln388_6_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln388_2_reg_1345),64));
    zext_ln388_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln388_fu_890_p2),64));
    zext_ln38_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln38_reg_1591),64));
    zext_ln39_fu_1108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln39_reg_1601),64));
end behav;
