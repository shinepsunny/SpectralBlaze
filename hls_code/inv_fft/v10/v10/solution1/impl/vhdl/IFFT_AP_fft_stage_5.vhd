-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity IFFT_AP_fft_stage_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    I_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    I_ce0 : OUT STD_LOGIC;
    I_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    I_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    I_ce1 : OUT STD_LOGIC;
    I_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    X_0_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_0_0_ce0 : OUT STD_LOGIC;
    X_0_0_we0 : OUT STD_LOGIC;
    X_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    X_0_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_0_1_ce0 : OUT STD_LOGIC;
    X_0_1_we0 : OUT STD_LOGIC;
    X_0_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    X_1_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_1_0_ce0 : OUT STD_LOGIC;
    X_1_0_we0 : OUT STD_LOGIC;
    X_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    X_1_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_1_1_ce0 : OUT STD_LOGIC;
    X_1_1_we0 : OUT STD_LOGIC;
    X_1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of IFFT_AP_fft_stage_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln1039_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1039_reg_171 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_108_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_reg_175 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_181 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln63_fu_138_p2 : STD_LOGIC_VECTOR (69 downto 0);
    signal mul_ln63_reg_186 : STD_LOGIC_VECTOR (69 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln1_fu_145_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1_reg_191 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal bound_fu_159_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal bound_reg_196 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_start : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_done : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_idle : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_ready : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_ce0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_ce1 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_ce0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_we0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_ce0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_we0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_ce0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_we0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_ce0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_we0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_start : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_done : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_idle : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_ready : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_ce0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_ce1 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_ce0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_we0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_ce0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_we0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_ce0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_we0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_ce0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_we0 : STD_LOGIC;
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln_fu_92_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln63_fu_112_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln63_fu_116_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln63_fu_138_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln63_fu_138_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal bound_fu_159_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal cast_fu_155_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal bound_fu_159_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal mul_ln63_fu_138_p00 : STD_LOGIC_VECTOR (69 downto 0);
    signal mul_ln63_fu_138_p10 : STD_LOGIC_VECTOR (69 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component IFFT_AP_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mul_ln63 : IN STD_LOGIC_VECTOR (69 downto 0);
        zext_ln63 : IN STD_LOGIC_VECTOR (7 downto 0);
        I_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        I_ce0 : OUT STD_LOGIC;
        I_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        I_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        I_ce1 : OUT STD_LOGIC;
        I_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_0_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_0_0_ce0 : OUT STD_LOGIC;
        X_0_0_we0 : OUT STD_LOGIC;
        X_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_0_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_0_1_ce0 : OUT STD_LOGIC;
        X_0_1_we0 : OUT STD_LOGIC;
        X_0_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_1_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_1_0_ce0 : OUT STD_LOGIC;
        X_1_0_we0 : OUT STD_LOGIC;
        X_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_1_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_1_1_ce0 : OUT STD_LOGIC;
        X_1_1_we0 : OUT STD_LOGIC;
        X_1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component IFFT_AP_fft_stage_5_Pipeline_SKIP_X_SKIP_Y IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bound : IN STD_LOGIC_VECTOR (13 downto 0);
        trunc_ln10 : IN STD_LOGIC_VECTOR (6 downto 0);
        I_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        I_ce0 : OUT STD_LOGIC;
        I_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        I_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        I_ce1 : OUT STD_LOGIC;
        I_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_0_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_0_0_ce0 : OUT STD_LOGIC;
        X_0_0_we0 : OUT STD_LOGIC;
        X_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_0_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_0_1_ce0 : OUT STD_LOGIC;
        X_0_1_we0 : OUT STD_LOGIC;
        X_0_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_1_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_1_0_ce0 : OUT STD_LOGIC;
        X_1_0_we0 : OUT STD_LOGIC;
        X_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_1_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_1_1_ce0 : OUT STD_LOGIC;
        X_1_1_we0 : OUT STD_LOGIC;
        X_1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component IFFT_AP_mul_8ns_7ns_70_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (69 downto 0) );
    end component;


    component IFFT_AP_mul_7ns_7ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56 : component IFFT_AP_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_start,
        ap_done => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_done,
        ap_idle => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_idle,
        ap_ready => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_ready,
        mul_ln63 => mul_ln63_reg_186,
        zext_ln63 => empty_reg_175,
        I_address0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_address0,
        I_ce0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_ce0,
        I_q0 => I_q0,
        I_address1 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_address1,
        I_ce1 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_ce1,
        I_q1 => I_q1,
        X_0_0_address0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_address0,
        X_0_0_ce0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_ce0,
        X_0_0_we0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_we0,
        X_0_0_d0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_d0,
        X_0_1_address0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_address0,
        X_0_1_ce0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_ce0,
        X_0_1_we0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_we0,
        X_0_1_d0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_d0,
        X_1_0_address0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_address0,
        X_1_0_ce0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_ce0,
        X_1_0_we0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_we0,
        X_1_0_d0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_d0,
        X_1_1_address0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_address0,
        X_1_1_ce0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_ce0,
        X_1_1_we0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_we0,
        X_1_1_d0 => grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_d0);

    grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72 : component IFFT_AP_fft_stage_5_Pipeline_SKIP_X_SKIP_Y
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_start,
        ap_done => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_done,
        ap_idle => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_idle,
        ap_ready => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_ready,
        bound => bound_reg_196,
        trunc_ln10 => trunc_ln1_reg_191,
        I_address0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_address0,
        I_ce0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_ce0,
        I_q0 => I_q0,
        I_address1 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_address1,
        I_ce1 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_ce1,
        I_q1 => I_q1,
        X_0_0_address0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_address0,
        X_0_0_ce0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_ce0,
        X_0_0_we0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_we0,
        X_0_0_d0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_d0,
        X_0_1_address0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_address0,
        X_0_1_ce0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_ce0,
        X_0_1_we0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_we0,
        X_0_1_d0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_d0,
        X_1_0_address0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_address0,
        X_1_0_ce0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_ce0,
        X_1_0_we0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_we0,
        X_1_0_d0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_d0,
        X_1_1_address0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_address0,
        X_1_1_ce0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_ce0,
        X_1_1_we0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_we0,
        X_1_1_d0 => grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_d0);

    mul_8ns_7ns_70_1_1_U232 : component IFFT_AP_mul_8ns_7ns_70_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 70)
    port map (
        din0 => mul_ln63_fu_138_p0,
        din1 => mul_ln63_fu_138_p1,
        dout => mul_ln63_fu_138_p2);

    mul_7ns_7ns_14_1_1_U233 : component IFFT_AP_mul_7ns_7ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 7,
        dout_WIDTH => 14)
    port map (
        din0 => bound_fu_159_p0,
        din1 => bound_fu_159_p1,
        dout => bound_fu_159_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_return_preg <= p_read;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                bound_reg_196 <= bound_fu_159_p2;
                trunc_ln1_reg_191 <= p_read(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_reg_175 <= empty_fu_108_p1;
                icmp_ln1039_reg_171 <= icmp_ln1039_fu_102_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                mul_ln63_reg_186 <= mul_ln63_fu_138_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1039_fu_102_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_reg_181 <= add_ln63_fu_116_p2(8 downto 2);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln1039_fu_102_p2, ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (icmp_ln1039_fu_102_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (icmp_ln1039_fu_102_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    I_address0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_address0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                I_address0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_address0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                I_address0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_address0;
            else 
                I_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            I_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    I_address1_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_address1, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_address1, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                I_address1 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_address1;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                I_address1 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_address1;
            else 
                I_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            I_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    I_ce0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_ce0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                I_ce0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_ce0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                I_ce0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_ce0;
            else 
                I_ce0 <= ap_const_logic_0;
            end if;
        else 
            I_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    I_ce1_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_ce1, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_ce1, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                I_ce1 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_I_ce1;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                I_ce1 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_I_ce1;
            else 
                I_ce1 <= ap_const_logic_0;
            end if;
        else 
            I_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_0_0_address0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_address0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_0_0_address0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_address0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_0_0_address0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_address0;
            else 
                X_0_0_address0 <= "XXXXXXXXXX";
            end if;
        else 
            X_0_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_0_0_ce0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_ce0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_0_0_ce0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_ce0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_0_0_ce0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_ce0;
            else 
                X_0_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            X_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_0_0_d0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_d0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_d0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_0_0_d0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_d0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_0_0_d0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_d0;
            else 
                X_0_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            X_0_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_0_0_we0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_we0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_0_0_we0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_0_we0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_0_0_we0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_0_we0;
            else 
                X_0_0_we0 <= ap_const_logic_0;
            end if;
        else 
            X_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_0_1_address0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_address0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_0_1_address0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_address0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_0_1_address0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_address0;
            else 
                X_0_1_address0 <= "XXXXXXXXXX";
            end if;
        else 
            X_0_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_0_1_ce0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_ce0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_0_1_ce0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_ce0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_0_1_ce0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_ce0;
            else 
                X_0_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            X_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_0_1_d0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_d0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_d0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_0_1_d0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_d0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_0_1_d0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_d0;
            else 
                X_0_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            X_0_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_0_1_we0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_we0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_0_1_we0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_0_1_we0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_0_1_we0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_0_1_we0;
            else 
                X_0_1_we0 <= ap_const_logic_0;
            end if;
        else 
            X_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_1_0_address0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_address0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_1_0_address0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_address0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_1_0_address0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_address0;
            else 
                X_1_0_address0 <= "XXXXXXXXXX";
            end if;
        else 
            X_1_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_1_0_ce0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_ce0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_1_0_ce0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_ce0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_1_0_ce0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_ce0;
            else 
                X_1_0_ce0 <= ap_const_logic_0;
            end if;
        else 
            X_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_1_0_d0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_d0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_d0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_1_0_d0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_d0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_1_0_d0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_d0;
            else 
                X_1_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            X_1_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_1_0_we0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_we0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_1_0_we0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_0_we0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_1_0_we0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_0_we0;
            else 
                X_1_0_we0 <= ap_const_logic_0;
            end if;
        else 
            X_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_1_1_address0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_address0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_1_1_address0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_address0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_1_1_address0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_address0;
            else 
                X_1_1_address0 <= "XXXXXXXXXX";
            end if;
        else 
            X_1_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_1_1_ce0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_ce0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_1_1_ce0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_ce0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_1_1_ce0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_ce0;
            else 
                X_1_1_ce0 <= ap_const_logic_0;
            end if;
        else 
            X_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_1_1_d0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_d0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_d0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_1_1_d0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_d0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_1_1_d0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_d0;
            else 
                X_1_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            X_1_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_1_1_we0_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_we0, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln1039_reg_171 = ap_const_lv1_1)) then 
                X_1_1_we0 <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_X_1_1_we0;
            elsif ((icmp_ln1039_reg_171 = ap_const_lv1_0)) then 
                X_1_1_we0 <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_X_1_1_we0;
            else 
                X_1_1_we0 <= ap_const_logic_0;
            end if;
        else 
            X_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln63_fu_116_p2 <= std_logic_vector(unsigned(zext_ln63_fu_112_p1) + unsigned(ap_const_lv9_3));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state3_on_subcall_done)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state3_on_subcall_done_assign_proc : process(icmp_ln1039_reg_171, grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_done, grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_done)
    begin
                ap_block_state3_on_subcall_done <= (((grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_done = ap_const_logic_0) and (icmp_ln1039_reg_171 = ap_const_lv1_0)) or ((icmp_ln1039_reg_171 = ap_const_lv1_1) and (grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_done = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(p_read, ap_CS_fsm_state3, ap_return_preg, ap_block_state3_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_return <= p_read;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    bound_fu_159_p0 <= cast_fu_155_p1(7 - 1 downto 0);
    bound_fu_159_p1 <= cast_fu_155_p1(7 - 1 downto 0);
    cast_fu_155_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1_fu_145_p4),14));
    empty_fu_108_p1 <= p_read(8 - 1 downto 0);
    grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_start <= grp_fft_stage_5_Pipeline_SKIP_X_SKIP_Y_fu_72_ap_start_reg;
    grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_start <= grp_fft_stage_5_Pipeline_VITIS_LOOP_63_1_VITIS_LOOP_66_2_fu_56_ap_start_reg;
    icmp_ln1039_fu_102_p2 <= "1" when (unsigned(trunc_ln_fu_92_p4) > unsigned(ap_const_lv8_5)) else "0";
    mul_ln63_fu_138_p0 <= mul_ln63_fu_138_p00(8 - 1 downto 0);
    mul_ln63_fu_138_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_175),70));
    mul_ln63_fu_138_p1 <= mul_ln63_fu_138_p10(7 - 1 downto 0);
    mul_ln63_fu_138_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_181),70));
    trunc_ln1_fu_145_p4 <= p_read(7 downto 1);
    trunc_ln_fu_92_p4 <= p_read(15 downto 8);
    zext_ln63_fu_112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_108_p1),9));
end behav;
