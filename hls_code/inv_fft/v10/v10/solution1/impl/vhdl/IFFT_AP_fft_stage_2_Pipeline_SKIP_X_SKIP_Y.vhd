-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity IFFT_AP_fft_stage_2_Pipeline_SKIP_X_SKIP_Y is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bound : IN STD_LOGIC_VECTOR (13 downto 0);
    trunc_ln17 : IN STD_LOGIC_VECTOR (6 downto 0);
    I_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    I_ce0 : OUT STD_LOGIC;
    I_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    I_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    I_ce1 : OUT STD_LOGIC;
    I_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    X_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    X_ce0 : OUT STD_LOGIC;
    X_we0 : OUT STD_LOGIC;
    X_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    X_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    X_ce1 : OUT STD_LOGIC;
    X_we1 : OUT STD_LOGIC;
    X_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of IFFT_AP_fft_stage_2_Pipeline_SKIP_X_SKIP_Y is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln1027_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal w_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_6_ce0 : STD_LOGIC;
    signal w_6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_6_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_6_ce1 : STD_LOGIC;
    signal w_6_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_11_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_11_ce0 : STD_LOGIC;
    signal w_11_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_11_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_11_ce1 : STD_LOGIC;
    signal w_11_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add40_fu_407_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add40_reg_913 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln1027_reg_918 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_918_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_918_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_918_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_918_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_918_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_918_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_918_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_918_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_918_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_918_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_918_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_9_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_9_reg_922 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1027_16_fu_488_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_16_reg_929 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1027_25_fu_496_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1027_25_reg_934 : STD_LOGIC_VECTOR (1 downto 0);
    signal add40_mid1_fu_508_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add40_mid1_reg_939 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln1027_15_fu_569_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_15_reg_944 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_17_fu_576_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln1027_17_reg_949 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1027_3_fu_581_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1027_3_reg_954 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln28_fu_604_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln28_reg_969 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln29_fu_609_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln29_reg_974 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln30_fu_615_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln30_reg_980 : STD_LOGIC_VECTOR (11 downto 0);
    signal w_6_load_reg_986 : STD_LOGIC_VECTOR (15 downto 0);
    signal w_11_load_reg_992 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln388_fu_711_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1008 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1008_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1008_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1008_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1008_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1008_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1008_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1008_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1008_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1008_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1008_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_reg_1008_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln328_fu_716_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_1018 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_1018_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_1018_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_1018_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln328_reg_1018_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln388_11_fu_726_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_11_reg_1023 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_11_reg_1023_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_11_reg_1023_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_11_reg_1023_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_11_reg_1023_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_11_reg_1023_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_11_reg_1023_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_11_reg_1023_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_11_reg_1023_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_11_reg_1023_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_11_reg_1023_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln388_8_fu_731_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln388_8_reg_1033 : STD_LOGIC_VECTOR (11 downto 0);
    signal w2_M_real_reg_1038 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_M_imag_reg_1044 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_fu_745_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_reg_1060 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_fu_749_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_reg_1066 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln388_12_fu_753_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_12_reg_1072 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_12_reg_1072_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_12_reg_1072_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_12_reg_1072_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_12_reg_1072_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_12_reg_1072_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_12_reg_1072_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_12_reg_1072_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_12_reg_1072_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_12_reg_1072_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_12_reg_1072_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal p_r_M_real_78_fu_761_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_78_reg_1082 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_86_fu_765_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_86_reg_1088 : STD_LOGIC_VECTOR (15 downto 0);
    signal w12_M_real_reg_1094 : STD_LOGIC_VECTOR (15 downto 0);
    signal w12_M_imag_reg_1100 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_80_fu_773_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_80_reg_1106 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_88_fu_777_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_88_reg_1112 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_316_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_i_i_reg_1118 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_320_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul3_i_i_reg_1123 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_324_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul6_i_i_reg_1128 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_328_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul9_i_i_reg_1133 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_332_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_i_i7_reg_1138 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_336_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul3_i_i7_reg_1143 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul6_i_i7_reg_1148 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul9_i_i7_reg_1153 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_i_i8_reg_1158 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul3_i_i8_reg_1163 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul6_i_i8_reg_1168 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul9_i_i8_reg_1173 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln328_fu_781_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1178 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1178_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1178_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1178_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1178_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1178_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_reg_1178_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_288_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_reg_1188 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_260_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_92_reg_1194 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_292_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_9_reg_1200 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_82_fu_789_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_82_reg_1206 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_90_fu_793_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_90_reg_1212 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_102_reg_1218 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_10_reg_1224 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_264_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_103_reg_1230 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_268_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_91_reg_1236 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_89_reg_1242 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_89_reg_1242_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_99_reg_1248 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_94_reg_1254 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_272_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_104_reg_1260 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_296_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_97_reg_1266 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_300_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_95_reg_1272 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_304_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_105_reg_1278 : STD_LOGIC_VECTOR (15 downto 0);
    signal add3_i_i290_partset_fu_805_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_i_i290_partset_reg_1284 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_i_i294_partset_fu_821_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add3_i_i294_partset_reg_1289 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i298_partset_fu_837_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i298_partset_reg_1294 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i302_partset_fu_853_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub3_i_i302_partset_reg_1299 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln1027_fu_587_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln27_fu_701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln28_fu_736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k2_fu_76 : STD_LOGIC_VECTOR (6 downto 0);
    signal k2_6_fu_528_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal j2_fu_80 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_12_fu_661_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m2_fu_84 : STD_LOGIC_VECTOR (31 downto 0);
    signal m2_8_fu_669_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_fu_88 : STD_LOGIC_VECTOR (31 downto 0);
    signal m1_fu_92 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1027_18_fu_514_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_fu_96 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1027_fu_418_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_260_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_260_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_264_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_264_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_268_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_268_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_272_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_272_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_288_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_288_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_292_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_292_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_296_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_296_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_300_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_300_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_316_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_316_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_320_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_320_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_324_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_324_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_328_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_328_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_332_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_332_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_336_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_336_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1027_24_fu_403_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1027_fu_399_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln54_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln57_fu_445_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln50_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j1_20_fu_433_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_21_fu_451_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m1_14_fu_459_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_22_fu_467_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m1_15_fu_475_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1027_27_fu_504_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1027_26_fu_500_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln22_fu_522_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1027_fu_562_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1027_30_fu_600_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1027_29_fu_596_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1027_28_fu_592_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln44_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln47_fu_639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln40_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j2_10_fu_627_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_11_fu_645_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m2_7_fu_653_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_687_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln388_fu_706_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_694_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln388_7_fu_721_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln388_fu_741_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_340_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln388_13_fu_757_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_350_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln388_14_fu_769_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln328_fu_785_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_276_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln36_4_fu_801_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln36_fu_797_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_280_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_284_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln37_4_fu_817_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln37_fu_813_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln38_4_fu_833_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln38_fu_829_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_308_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_312_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln39_4_fu_849_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln39_fu_845_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter12_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to11 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to13 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_fft_stage_2_Pipeline_SKIP_X_SKIP_Y_w_6_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_fft_stage_2_Pipeline_SKIP_X_SKIP_Y_w_11_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component IFFT_AP_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    w_6_U : component IFFT_AP_fft_stage_2_Pipeline_SKIP_X_SKIP_Y_w_6_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w_6_address0,
        ce0 => w_6_ce0,
        q0 => w_6_q0,
        address1 => w_6_address1,
        ce1 => w_6_ce1,
        q1 => w_6_q1);

    w_11_U : component IFFT_AP_fft_stage_2_Pipeline_SKIP_X_SKIP_Y_w_11_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w_11_address0,
        ce0 => w_11_ce0,
        q0 => w_11_q0,
        address1 => w_11_address1,
        ce1 => w_11_ce1,
        q1 => w_11_q1);

    hadd_16ns_16ns_16_5_full_dsp_1_U106 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_260_p0,
        din1 => grp_fu_260_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_260_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U107 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_264_p0,
        din1 => grp_fu_264_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_264_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U108 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_268_p0,
        din1 => grp_fu_268_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_268_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U109 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_272_p0,
        din1 => grp_fu_272_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_272_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U110 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_99_reg_1248,
        din1 => p_r_M_imag_104_reg_1260,
        ce => ap_const_logic_1,
        dout => grp_fu_276_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U111 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_real_89_reg_1242,
        din1 => p_r_M_real_95_reg_1272,
        ce => ap_const_logic_1,
        dout => grp_fu_280_p2);

    hadd_16ns_16ns_16_5_full_dsp_1_U112 : component IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_97_reg_1266,
        din1 => p_r_M_imag_105_reg_1278,
        ce => ap_const_logic_1,
        dout => grp_fu_284_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U113 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_288_p0,
        din1 => grp_fu_288_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_288_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U114 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_292_p0,
        din1 => grp_fu_292_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_292_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U115 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_296_p0,
        din1 => grp_fu_296_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_296_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U116 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_300_p0,
        din1 => grp_fu_300_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_300_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U117 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_92_reg_1194,
        din1 => p_r_M_imag_103_reg_1230,
        ce => ap_const_logic_1,
        dout => grp_fu_304_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U118 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_real_89_reg_1242_pp0_iter10_reg,
        din1 => p_r_M_real_95_reg_1272,
        ce => ap_const_logic_1,
        dout => grp_fu_308_p2);

    hsub_16ns_16ns_16_5_full_dsp_1_U119 : component IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_r_M_imag_97_reg_1266,
        din1 => p_r_M_imag_105_reg_1278,
        ce => ap_const_logic_1,
        dout => grp_fu_312_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U120 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_316_p0,
        din1 => grp_fu_316_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_316_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U121 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_320_p0,
        din1 => grp_fu_320_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_320_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U122 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_324_p0,
        din1 => grp_fu_324_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_324_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U123 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_328_p0,
        din1 => grp_fu_328_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_328_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U124 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_332_p0,
        din1 => grp_fu_332_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_332_p2);

    hmul_16ns_16ns_16_4_max_dsp_1_U125 : component IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_336_p0,
        din1 => grp_fu_336_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_336_p2);

    flow_control_loop_pipe_sequential_init_U : component IFFT_AP_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter11_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter12_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_fu_96 <= ap_const_lv14_0;
            elsif (((icmp_ln1027_fu_413_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                indvar_flatten_fu_96 <= add_ln1027_fu_418_p2;
            end if; 
        end if;
    end process;

    j1_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j1_fu_88 <= ap_const_lv32_0;
            elsif (((icmp_ln1027_fu_413_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                j1_fu_88 <= select_ln1027_16_fu_488_p3;
            end if; 
        end if;
    end process;

    j2_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    j2_fu_80 <= ap_const_lv32_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_918 = ap_const_lv1_0))) then 
                    j2_fu_80 <= j2_12_fu_661_p3;
                end if;
            end if; 
        end if;
    end process;

    k2_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                k2_fu_76 <= ap_const_lv7_0;
            elsif (((icmp_ln1027_fu_413_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                k2_fu_76 <= k2_6_fu_528_p3;
            end if; 
        end if;
    end process;

    m1_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                m1_fu_92 <= ap_const_lv32_0;
            elsif (((icmp_ln1027_fu_413_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                m1_fu_92 <= select_ln1027_18_fu_514_p3;
            end if; 
        end if;
    end process;

    m2_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    m2_fu_84 <= ap_const_lv32_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_918 = ap_const_lv1_0))) then 
                    m2_fu_84 <= m2_8_fu_669_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add3_i_i290_partset_reg_1284 <= add3_i_i290_partset_fu_805_p3;
                add3_i_i294_partset_reg_1289 <= add3_i_i294_partset_fu_821_p3;
                p_r_M_imag_86_reg_1088 <= p_r_M_imag_86_fu_765_p1;
                p_r_M_imag_reg_1066 <= p_r_M_imag_fu_749_p1;
                p_r_M_real_78_reg_1082 <= p_r_M_real_78_fu_761_p1;
                p_r_M_real_89_reg_1242_pp0_iter10_reg <= p_r_M_real_89_reg_1242;
                p_r_M_real_reg_1060 <= p_r_M_real_fu_745_p1;
                sub3_i_i298_partset_reg_1294 <= sub3_i_i298_partset_fu_837_p3;
                    zext_ln328_reg_1178(11 downto 0) <= zext_ln328_fu_781_p1(11 downto 0);
                    zext_ln328_reg_1178_pp0_iter10_reg(11 downto 0) <= zext_ln328_reg_1178_pp0_iter9_reg(11 downto 0);
                    zext_ln328_reg_1178_pp0_iter11_reg(11 downto 0) <= zext_ln328_reg_1178_pp0_iter10_reg(11 downto 0);
                    zext_ln328_reg_1178_pp0_iter12_reg(11 downto 0) <= zext_ln328_reg_1178_pp0_iter11_reg(11 downto 0);
                    zext_ln328_reg_1178_pp0_iter7_reg(11 downto 0) <= zext_ln328_reg_1178(11 downto 0);
                    zext_ln328_reg_1178_pp0_iter8_reg(11 downto 0) <= zext_ln328_reg_1178_pp0_iter7_reg(11 downto 0);
                    zext_ln328_reg_1178_pp0_iter9_reg(11 downto 0) <= zext_ln328_reg_1178_pp0_iter8_reg(11 downto 0);
                    zext_ln388_12_reg_1072(11 downto 0) <= zext_ln388_12_fu_753_p1(11 downto 0);
                    zext_ln388_12_reg_1072_pp0_iter10_reg(11 downto 0) <= zext_ln388_12_reg_1072_pp0_iter9_reg(11 downto 0);
                    zext_ln388_12_reg_1072_pp0_iter11_reg(11 downto 0) <= zext_ln388_12_reg_1072_pp0_iter10_reg(11 downto 0);
                    zext_ln388_12_reg_1072_pp0_iter12_reg(11 downto 0) <= zext_ln388_12_reg_1072_pp0_iter11_reg(11 downto 0);
                    zext_ln388_12_reg_1072_pp0_iter3_reg(11 downto 0) <= zext_ln388_12_reg_1072(11 downto 0);
                    zext_ln388_12_reg_1072_pp0_iter4_reg(11 downto 0) <= zext_ln388_12_reg_1072_pp0_iter3_reg(11 downto 0);
                    zext_ln388_12_reg_1072_pp0_iter5_reg(11 downto 0) <= zext_ln388_12_reg_1072_pp0_iter4_reg(11 downto 0);
                    zext_ln388_12_reg_1072_pp0_iter6_reg(11 downto 0) <= zext_ln388_12_reg_1072_pp0_iter5_reg(11 downto 0);
                    zext_ln388_12_reg_1072_pp0_iter7_reg(11 downto 0) <= zext_ln388_12_reg_1072_pp0_iter6_reg(11 downto 0);
                    zext_ln388_12_reg_1072_pp0_iter8_reg(11 downto 0) <= zext_ln388_12_reg_1072_pp0_iter7_reg(11 downto 0);
                    zext_ln388_12_reg_1072_pp0_iter9_reg(11 downto 0) <= zext_ln388_12_reg_1072_pp0_iter8_reg(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_fu_413_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add40_mid1_reg_939 <= add40_mid1_fu_508_p2;
                icmp_ln1027_9_reg_922 <= icmp_ln1027_9_fu_483_p2;
                select_ln1027_16_reg_929 <= select_ln1027_16_fu_488_p3;
                trunc_ln1027_25_reg_934 <= trunc_ln1027_25_fu_496_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add40_reg_913 <= add40_fu_407_p2;
                add_ln328_reg_1018 <= add_ln328_fu_716_p2;
                add_ln328_reg_1018_pp0_iter2_reg <= add_ln328_reg_1018;
                add_ln328_reg_1018_pp0_iter3_reg <= add_ln328_reg_1018_pp0_iter2_reg;
                add_ln328_reg_1018_pp0_iter4_reg <= add_ln328_reg_1018_pp0_iter3_reg;
                add_ln328_reg_1018_pp0_iter5_reg <= add_ln328_reg_1018_pp0_iter4_reg;
                add_ln388_8_reg_1033 <= add_ln388_8_fu_731_p2;
                icmp_ln1027_reg_918 <= icmp_ln1027_fu_413_p2;
                icmp_ln1027_reg_918_pp0_iter10_reg <= icmp_ln1027_reg_918_pp0_iter9_reg;
                icmp_ln1027_reg_918_pp0_iter11_reg <= icmp_ln1027_reg_918_pp0_iter10_reg;
                icmp_ln1027_reg_918_pp0_iter1_reg <= icmp_ln1027_reg_918;
                icmp_ln1027_reg_918_pp0_iter2_reg <= icmp_ln1027_reg_918_pp0_iter1_reg;
                icmp_ln1027_reg_918_pp0_iter3_reg <= icmp_ln1027_reg_918_pp0_iter2_reg;
                icmp_ln1027_reg_918_pp0_iter4_reg <= icmp_ln1027_reg_918_pp0_iter3_reg;
                icmp_ln1027_reg_918_pp0_iter5_reg <= icmp_ln1027_reg_918_pp0_iter4_reg;
                icmp_ln1027_reg_918_pp0_iter6_reg <= icmp_ln1027_reg_918_pp0_iter5_reg;
                icmp_ln1027_reg_918_pp0_iter7_reg <= icmp_ln1027_reg_918_pp0_iter6_reg;
                icmp_ln1027_reg_918_pp0_iter8_reg <= icmp_ln1027_reg_918_pp0_iter7_reg;
                icmp_ln1027_reg_918_pp0_iter9_reg <= icmp_ln1027_reg_918_pp0_iter8_reg;
                p_r_M_imag_105_reg_1278 <= grp_fu_304_p2;
                p_r_M_imag_88_reg_1112 <= p_r_M_imag_88_fu_777_p1;
                p_r_M_imag_90_reg_1212 <= p_r_M_imag_90_fu_793_p1;
                p_r_M_real_80_reg_1106 <= p_r_M_real_80_fu_773_p1;
                p_r_M_real_82_reg_1206 <= p_r_M_real_82_fu_789_p1;
                sub3_i_i302_partset_reg_1299 <= sub3_i_i302_partset_fu_853_p3;
                    zext_ln388_11_reg_1023(11 downto 0) <= zext_ln388_11_fu_726_p1(11 downto 0);
                    zext_ln388_11_reg_1023_pp0_iter10_reg(11 downto 0) <= zext_ln388_11_reg_1023_pp0_iter9_reg(11 downto 0);
                    zext_ln388_11_reg_1023_pp0_iter11_reg(11 downto 0) <= zext_ln388_11_reg_1023_pp0_iter10_reg(11 downto 0);
                    zext_ln388_11_reg_1023_pp0_iter2_reg(11 downto 0) <= zext_ln388_11_reg_1023(11 downto 0);
                    zext_ln388_11_reg_1023_pp0_iter3_reg(11 downto 0) <= zext_ln388_11_reg_1023_pp0_iter2_reg(11 downto 0);
                    zext_ln388_11_reg_1023_pp0_iter4_reg(11 downto 0) <= zext_ln388_11_reg_1023_pp0_iter3_reg(11 downto 0);
                    zext_ln388_11_reg_1023_pp0_iter5_reg(11 downto 0) <= zext_ln388_11_reg_1023_pp0_iter4_reg(11 downto 0);
                    zext_ln388_11_reg_1023_pp0_iter6_reg(11 downto 0) <= zext_ln388_11_reg_1023_pp0_iter5_reg(11 downto 0);
                    zext_ln388_11_reg_1023_pp0_iter7_reg(11 downto 0) <= zext_ln388_11_reg_1023_pp0_iter6_reg(11 downto 0);
                    zext_ln388_11_reg_1023_pp0_iter8_reg(11 downto 0) <= zext_ln388_11_reg_1023_pp0_iter7_reg(11 downto 0);
                    zext_ln388_11_reg_1023_pp0_iter9_reg(11 downto 0) <= zext_ln388_11_reg_1023_pp0_iter8_reg(11 downto 0);
                    zext_ln388_reg_1008(11 downto 0) <= zext_ln388_fu_711_p1(11 downto 0);
                    zext_ln388_reg_1008_pp0_iter10_reg(11 downto 0) <= zext_ln388_reg_1008_pp0_iter9_reg(11 downto 0);
                    zext_ln388_reg_1008_pp0_iter11_reg(11 downto 0) <= zext_ln388_reg_1008_pp0_iter10_reg(11 downto 0);
                    zext_ln388_reg_1008_pp0_iter12_reg(11 downto 0) <= zext_ln388_reg_1008_pp0_iter11_reg(11 downto 0);
                    zext_ln388_reg_1008_pp0_iter2_reg(11 downto 0) <= zext_ln388_reg_1008(11 downto 0);
                    zext_ln388_reg_1008_pp0_iter3_reg(11 downto 0) <= zext_ln388_reg_1008_pp0_iter2_reg(11 downto 0);
                    zext_ln388_reg_1008_pp0_iter4_reg(11 downto 0) <= zext_ln388_reg_1008_pp0_iter3_reg(11 downto 0);
                    zext_ln388_reg_1008_pp0_iter5_reg(11 downto 0) <= zext_ln388_reg_1008_pp0_iter4_reg(11 downto 0);
                    zext_ln388_reg_1008_pp0_iter6_reg(11 downto 0) <= zext_ln388_reg_1008_pp0_iter5_reg(11 downto 0);
                    zext_ln388_reg_1008_pp0_iter7_reg(11 downto 0) <= zext_ln388_reg_1008_pp0_iter6_reg(11 downto 0);
                    zext_ln388_reg_1008_pp0_iter8_reg(11 downto 0) <= zext_ln388_reg_1008_pp0_iter7_reg(11 downto 0);
                    zext_ln388_reg_1008_pp0_iter9_reg(11 downto 0) <= zext_ln388_reg_1008_pp0_iter8_reg(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_918 = ap_const_lv1_0))) then
                add_ln1027_3_reg_954 <= add_ln1027_3_fu_581_p2;
                add_ln28_reg_969 <= add_ln28_fu_604_p2;
                add_ln29_reg_974 <= add_ln29_fu_609_p2;
                add_ln30_reg_980 <= add_ln30_fu_615_p2;
                select_ln1027_15_reg_944 <= select_ln1027_15_fu_569_p3;
                select_ln1027_17_reg_949 <= select_ln1027_17_fu_576_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul3_i_i7_reg_1143 <= grp_fu_336_p2;
                mul3_i_i_reg_1123 <= grp_fu_320_p2;
                mul6_i_i_reg_1128 <= grp_fu_324_p2;
                mul9_i_i_reg_1133 <= grp_fu_328_p2;
                mul_i_i7_reg_1138 <= grp_fu_332_p2;
                mul_i_i_reg_1118 <= grp_fu_316_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul3_i_i8_reg_1163 <= grp_fu_328_p2;
                mul6_i_i7_reg_1148 <= grp_fu_316_p2;
                mul6_i_i8_reg_1168 <= grp_fu_332_p2;
                mul9_i_i7_reg_1153 <= grp_fu_320_p2;
                mul9_i_i8_reg_1173 <= grp_fu_336_p2;
                mul_i_i8_reg_1158 <= grp_fu_324_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_r_10_reg_1224 <= grp_fu_288_p2;
                p_r_M_imag_102_reg_1218 <= grp_fu_260_p2;
                p_r_M_imag_103_reg_1230 <= grp_fu_264_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_r_9_reg_1200 <= grp_fu_292_p2;
                p_r_M_imag_92_reg_1194 <= grp_fu_260_p2;
                p_r_reg_1188 <= grp_fu_288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_r_M_imag_104_reg_1260 <= grp_fu_272_p2;
                p_r_M_imag_97_reg_1266 <= grp_fu_296_p2;
                p_r_M_imag_99_reg_1248 <= grp_fu_264_p2;
                p_r_M_real_94_reg_1254 <= grp_fu_268_p2;
                p_r_M_real_95_reg_1272 <= grp_fu_300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_r_M_real_89_reg_1242 <= grp_fu_292_p2;
                p_r_M_real_91_reg_1236 <= grp_fu_268_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                w12_M_imag_reg_1100 <= w_11_q0;
                w12_M_real_reg_1094 <= w_6_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                w2_M_imag_reg_1044 <= w_11_q0;
                w2_M_real_reg_1038 <= w_6_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                w_11_load_reg_992 <= w_11_q1;
                w_6_load_reg_986 <= w_6_q1;
            end if;
        end if;
    end process;
    zext_ln388_reg_1008(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1008_pp0_iter2_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1008_pp0_iter3_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1008_pp0_iter4_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1008_pp0_iter5_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1008_pp0_iter6_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1008_pp0_iter7_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1008_pp0_iter8_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1008_pp0_iter9_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1008_pp0_iter10_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1008_pp0_iter11_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_reg_1008_pp0_iter12_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_11_reg_1023(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_11_reg_1023_pp0_iter2_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_11_reg_1023_pp0_iter3_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_11_reg_1023_pp0_iter4_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_11_reg_1023_pp0_iter5_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_11_reg_1023_pp0_iter6_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_11_reg_1023_pp0_iter7_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_11_reg_1023_pp0_iter8_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_11_reg_1023_pp0_iter9_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_11_reg_1023_pp0_iter10_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_11_reg_1023_pp0_iter11_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_12_reg_1072(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_12_reg_1072_pp0_iter3_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_12_reg_1072_pp0_iter4_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_12_reg_1072_pp0_iter5_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_12_reg_1072_pp0_iter6_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_12_reg_1072_pp0_iter7_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_12_reg_1072_pp0_iter8_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_12_reg_1072_pp0_iter9_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_12_reg_1072_pp0_iter10_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_12_reg_1072_pp0_iter11_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln388_12_reg_1072_pp0_iter12_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1178(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1178_pp0_iter7_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1178_pp0_iter8_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1178_pp0_iter9_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1178_pp0_iter10_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1178_pp0_iter11_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln328_reg_1178_pp0_iter12_reg(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter12_stage0, ap_idle_pp0_0to11, ap_idle_pp0_1to13, ap_done_pending_pp0, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to11 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to13 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    I_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, zext_ln388_11_fu_726_p1, zext_ln328_fu_781_p1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            I_address0 <= zext_ln328_fu_781_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            I_address0 <= zext_ln388_11_fu_726_p1(12 - 1 downto 0);
        else 
            I_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    I_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, zext_ln388_fu_711_p1, zext_ln388_12_fu_753_p1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            I_address1 <= zext_ln388_12_fu_753_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            I_address1 <= zext_ln388_fu_711_p1(12 - 1 downto 0);
        else 
            I_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    I_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            I_ce0 <= ap_const_logic_1;
        else 
            I_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    I_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            I_ce1 <= ap_const_logic_1;
        else 
            I_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, zext_ln388_11_reg_1023_pp0_iter11_reg, zext_ln388_12_reg_1072_pp0_iter12_reg, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_address0 <= zext_ln388_12_reg_1072_pp0_iter12_reg(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_address0 <= zext_ln388_11_reg_1023_pp0_iter11_reg(12 - 1 downto 0);
        else 
            X_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    X_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, zext_ln388_reg_1008_pp0_iter12_reg, zext_ln328_reg_1178_pp0_iter12_reg, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_address1 <= zext_ln388_reg_1008_pp0_iter12_reg(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_address1 <= zext_ln328_reg_1178_pp0_iter12_reg(12 - 1 downto 0);
        else 
            X_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    X_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_ce0 <= ap_const_logic_1;
        else 
            X_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_ce1 <= ap_const_logic_1;
        else 
            X_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, add3_i_i294_partset_reg_1289, sub3_i_i302_partset_reg_1299, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_d0 <= sub3_i_i302_partset_reg_1299;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_d0 <= add3_i_i294_partset_reg_1289;
        else 
            X_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, add3_i_i290_partset_reg_1284, sub3_i_i298_partset_reg_1294, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_d1 <= sub3_i_i298_partset_reg_1294;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_d1 <= add3_i_i290_partset_reg_1284;
        else 
            X_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_we0 <= ap_const_logic_1;
        else 
            X_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            X_we1 <= ap_const_logic_1;
        else 
            X_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add3_i_i290_partset_fu_805_p3 <= (bitcast_ln36_4_fu_801_p1 & bitcast_ln36_fu_797_p1);
    add3_i_i294_partset_fu_821_p3 <= (bitcast_ln37_4_fu_817_p1 & bitcast_ln37_fu_813_p1);
    add40_fu_407_p2 <= std_logic_vector(unsigned(trunc_ln1027_24_fu_403_p1) + unsigned(trunc_ln1027_fu_399_p1));
    add40_mid1_fu_508_p2 <= std_logic_vector(unsigned(trunc_ln1027_27_fu_504_p1) + unsigned(trunc_ln1027_26_fu_500_p1));
    add_ln1027_3_fu_581_p2 <= std_logic_vector(unsigned(select_ln1027_17_fu_576_p3) + unsigned(ap_const_lv6_4));
    add_ln1027_fu_418_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_96) + unsigned(ap_const_lv14_1));
    add_ln22_fu_522_p2 <= std_logic_vector(unsigned(k2_fu_76) + unsigned(ap_const_lv7_1));
    add_ln28_fu_604_p2 <= std_logic_vector(unsigned(trunc_ln1027_30_fu_600_p1) + unsigned(trunc_ln1027_25_reg_934));
    add_ln29_fu_609_p2 <= std_logic_vector(unsigned(trunc_ln1027_29_fu_596_p1) + unsigned(trunc_ln1027_28_fu_592_p1));
    add_ln30_fu_615_p2 <= std_logic_vector(unsigned(add_ln29_fu_609_p2) + unsigned(ap_const_lv12_4));
    add_ln328_fu_716_p2 <= std_logic_vector(unsigned(tmp_s_fu_694_p3) + unsigned(add_ln29_reg_974));
    add_ln388_7_fu_721_p2 <= std_logic_vector(unsigned(tmp_s_fu_694_p3) + unsigned(add_ln30_reg_980));
    add_ln388_8_fu_731_p2 <= std_logic_vector(unsigned(tmp_fu_687_p3) + unsigned(add_ln30_reg_980));
    add_ln388_fu_706_p2 <= std_logic_vector(unsigned(tmp_fu_687_p3) + unsigned(add_ln29_reg_974));
    add_ln47_fu_639_p2 <= std_logic_vector(unsigned(select_ln1027_fu_562_p3) + unsigned(ap_const_lv32_8));
    add_ln57_fu_445_p2 <= std_logic_vector(unsigned(m1_fu_92) + unsigned(ap_const_lv32_8));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln1027_fu_413_p2)
    begin
        if (((icmp_ln1027_fu_413_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter12_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, icmp_ln1027_reg_918_pp0_iter11_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_918_pp0_iter11_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter12_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter12_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter12_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg, ap_loop_exit_ready_pp0_iter2_reg, ap_loop_exit_ready_pp0_iter3_reg, ap_loop_exit_ready_pp0_iter4_reg, ap_loop_exit_ready_pp0_iter5_reg, ap_loop_exit_ready_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg, ap_loop_exit_ready_pp0_iter8_reg, ap_loop_exit_ready_pp0_iter9_reg, ap_loop_exit_ready_pp0_iter10_reg, ap_loop_exit_ready_pp0_iter11_reg, ap_loop_exit_ready_pp0_iter12_reg)
    begin
        if (not(((ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter11_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_0) and (ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to11_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to11 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to13_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to13 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to13 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln36_4_fu_801_p1 <= grp_fu_276_p2;
    bitcast_ln36_fu_797_p1 <= grp_fu_272_p2;
    bitcast_ln37_4_fu_817_p1 <= grp_fu_284_p2;
    bitcast_ln37_fu_813_p1 <= grp_fu_280_p2;
    bitcast_ln38_4_fu_833_p1 <= grp_fu_300_p2;
    bitcast_ln38_fu_829_p1 <= grp_fu_296_p2;
    bitcast_ln39_4_fu_849_p1 <= grp_fu_312_p2;
    bitcast_ln39_fu_845_p1 <= grp_fu_308_p2;

    grp_fu_260_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul6_i_i_reg_1128, mul6_i_i7_reg_1148, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_260_p0 <= mul6_i_i7_reg_1148;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_260_p0 <= mul6_i_i_reg_1128;
        else 
            grp_fu_260_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_260_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul9_i_i_reg_1133, mul9_i_i7_reg_1153, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_260_p1 <= mul9_i_i7_reg_1153;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_260_p1 <= mul9_i_i_reg_1133;
        else 
            grp_fu_260_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_264_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, mul6_i_i8_reg_1168, p_r_M_imag_90_reg_1212, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_264_p0 <= p_r_M_imag_90_reg_1212;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_264_p0 <= mul6_i_i8_reg_1168;
        else 
            grp_fu_264_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_264_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, mul9_i_i8_reg_1173, p_r_M_imag_102_reg_1218, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_264_p1 <= p_r_M_imag_102_reg_1218;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_264_p1 <= mul9_i_i8_reg_1173;
        else 
            grp_fu_264_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_268_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, p_r_reg_1188, p_r_M_real_82_reg_1206, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter7 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_268_p0 <= p_r_reg_1188;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_268_p0 <= p_r_M_real_82_reg_1206;
            else 
                grp_fu_268_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_268_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_268_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, p_r_9_reg_1200, p_r_10_reg_1224, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter7 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_268_p1 <= p_r_10_reg_1224;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_268_p1 <= p_r_9_reg_1200;
            else 
                grp_fu_268_p1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_268_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_272_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_M_imag_92_reg_1194, p_r_M_real_91_reg_1236, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_272_p0 <= p_r_M_real_91_reg_1236;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_272_p0 <= p_r_M_imag_92_reg_1194;
        else 
            grp_fu_272_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_272_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_M_imag_103_reg_1230, p_r_M_real_94_reg_1254, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_272_p1 <= p_r_M_real_94_reg_1254;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_272_p1 <= p_r_M_imag_103_reg_1230;
        else 
            grp_fu_272_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_288_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul_i_i_reg_1118, mul_i_i8_reg_1158, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_288_p0 <= mul_i_i8_reg_1158;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_288_p0 <= mul_i_i_reg_1118;
        else 
            grp_fu_288_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_288_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul3_i_i_reg_1123, mul3_i_i8_reg_1163, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_288_p1 <= mul3_i_i8_reg_1163;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_288_p1 <= mul3_i_i_reg_1123;
        else 
            grp_fu_288_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_292_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, mul_i_i7_reg_1138, p_r_M_real_82_reg_1206, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_292_p0 <= p_r_M_real_82_reg_1206;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_292_p0 <= mul_i_i7_reg_1138;
        else 
            grp_fu_292_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_292_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, mul3_i_i7_reg_1143, p_r_9_reg_1200, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_292_p1 <= p_r_9_reg_1200;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_292_p1 <= mul3_i_i7_reg_1143;
        else 
            grp_fu_292_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_296_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_M_imag_90_reg_1212, p_r_M_real_91_reg_1236, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_296_p0 <= p_r_M_real_91_reg_1236;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_296_p0 <= p_r_M_imag_90_reg_1212;
        else 
            grp_fu_296_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_296_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_M_imag_102_reg_1218, p_r_M_real_94_reg_1254, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_296_p1 <= p_r_M_real_94_reg_1254;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_296_p1 <= p_r_M_imag_102_reg_1218;
        else 
            grp_fu_296_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_300_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_reg_1188, p_r_M_imag_99_reg_1248, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_300_p0 <= p_r_M_imag_99_reg_1248;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_300_p0 <= p_r_reg_1188;
        else 
            grp_fu_300_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_300_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, p_r_10_reg_1224, p_r_M_imag_104_reg_1260, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_300_p1 <= p_r_M_imag_104_reg_1260;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_300_p1 <= p_r_10_reg_1224;
        else 
            grp_fu_300_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_316_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_real_reg_1060, p_r_M_real_78_reg_1082, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_316_p0 <= p_r_M_real_78_reg_1082;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_316_p0 <= p_r_M_real_reg_1060;
        else 
            grp_fu_316_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_316_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w_6_load_reg_986, w2_M_imag_reg_1044, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_316_p1 <= w2_M_imag_reg_1044;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_316_p1 <= w_6_load_reg_986;
        else 
            grp_fu_316_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_320_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_imag_reg_1066, p_r_M_imag_86_reg_1088, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_320_p0 <= p_r_M_imag_86_reg_1088;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_320_p0 <= p_r_M_imag_reg_1066;
        else 
            grp_fu_320_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_320_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w_11_load_reg_992, w2_M_real_reg_1038, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_320_p1 <= w2_M_real_reg_1038;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_320_p1 <= w_11_load_reg_992;
        else 
            grp_fu_320_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_324_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_real_reg_1060, p_r_M_real_80_reg_1106, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_324_p0 <= p_r_M_real_80_reg_1106;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_324_p0 <= p_r_M_real_reg_1060;
        else 
            grp_fu_324_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_324_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w_11_load_reg_992, w12_M_real_reg_1094, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_324_p1 <= w12_M_real_reg_1094;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_324_p1 <= w_11_load_reg_992;
        else 
            grp_fu_324_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_328_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_imag_reg_1066, p_r_M_imag_88_reg_1112, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_328_p0 <= p_r_M_imag_88_reg_1112;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_328_p0 <= p_r_M_imag_reg_1066;
        else 
            grp_fu_328_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_328_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w_6_load_reg_986, w12_M_imag_reg_1100, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_328_p1 <= w12_M_imag_reg_1100;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_328_p1 <= w_6_load_reg_986;
        else 
            grp_fu_328_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_332_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_real_78_reg_1082, p_r_M_real_80_reg_1106, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_332_p0 <= p_r_M_real_80_reg_1106;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_332_p0 <= p_r_M_real_78_reg_1082;
        else 
            grp_fu_332_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_332_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w2_M_real_reg_1038, w12_M_imag_reg_1100, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_332_p1 <= w12_M_imag_reg_1100;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_332_p1 <= w2_M_real_reg_1038;
        else 
            grp_fu_332_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_336_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, p_r_M_imag_86_reg_1088, p_r_M_imag_88_reg_1112, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_336_p0 <= p_r_M_imag_88_reg_1112;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_336_p0 <= p_r_M_imag_86_reg_1088;
        else 
            grp_fu_336_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_336_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, w2_M_imag_reg_1044, w12_M_real_reg_1094, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_336_p1 <= w12_M_real_reg_1094;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_336_p1 <= w2_M_imag_reg_1044;
        else 
            grp_fu_336_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_340_p4 <= I_q1(31 downto 16);
    grp_fu_350_p4 <= I_q0(31 downto 16);
    icmp_ln1027_9_fu_483_p2 <= "1" when (k2_fu_76 = trunc_ln17) else "0";
    icmp_ln1027_fu_413_p2 <= "1" when (indvar_flatten_fu_96 = bound) else "0";
    icmp_ln40_fu_621_p2 <= "1" when (unsigned(select_ln1027_15_fu_569_p3) < unsigned(ap_const_lv32_3)) else "0";
    icmp_ln44_fu_633_p2 <= "1" when (select_ln1027_15_fu_569_p3 = ap_const_lv32_3) else "0";
    icmp_ln50_fu_427_p2 <= "1" when (unsigned(j1_fu_88) < unsigned(ap_const_lv32_3)) else "0";
    icmp_ln54_fu_439_p2 <= "1" when (j1_fu_88 = ap_const_lv32_3) else "0";
    j1_20_fu_433_p2 <= std_logic_vector(unsigned(j1_fu_88) + unsigned(ap_const_lv32_1));
    j1_21_fu_451_p3 <= 
        ap_const_lv32_0 when (icmp_ln54_fu_439_p2(0) = '1') else 
        j1_fu_88;
    j1_22_fu_467_p3 <= 
        j1_20_fu_433_p2 when (icmp_ln50_fu_427_p2(0) = '1') else 
        j1_21_fu_451_p3;
    j2_10_fu_627_p2 <= std_logic_vector(unsigned(select_ln1027_15_fu_569_p3) + unsigned(ap_const_lv32_1));
    j2_11_fu_645_p3 <= 
        ap_const_lv32_0 when (icmp_ln44_fu_633_p2(0) = '1') else 
        select_ln1027_15_fu_569_p3;
    j2_12_fu_661_p3 <= 
        j2_10_fu_627_p2 when (icmp_ln40_fu_621_p2(0) = '1') else 
        j2_11_fu_645_p3;
    k2_6_fu_528_p3 <= 
        ap_const_lv7_1 when (icmp_ln1027_9_fu_483_p2(0) = '1') else 
        add_ln22_fu_522_p2;
    m1_14_fu_459_p3 <= 
        add_ln57_fu_445_p2 when (icmp_ln54_fu_439_p2(0) = '1') else 
        m1_fu_92;
    m1_15_fu_475_p3 <= 
        m1_fu_92 when (icmp_ln50_fu_427_p2(0) = '1') else 
        m1_14_fu_459_p3;
    m2_7_fu_653_p3 <= 
        add_ln47_fu_639_p2 when (icmp_ln44_fu_633_p2(0) = '1') else 
        select_ln1027_fu_562_p3;
    m2_8_fu_669_p3 <= 
        select_ln1027_fu_562_p3 when (icmp_ln40_fu_621_p2(0) = '1') else 
        m2_7_fu_653_p3;
    p_r_M_imag_86_fu_765_p1 <= grp_fu_350_p4;
    p_r_M_imag_88_fu_777_p1 <= grp_fu_340_p4;
    p_r_M_imag_90_fu_793_p1 <= grp_fu_350_p4;
    p_r_M_imag_fu_749_p1 <= grp_fu_340_p4;
    p_r_M_real_78_fu_761_p1 <= trunc_ln388_13_fu_757_p1;
    p_r_M_real_80_fu_773_p1 <= trunc_ln388_14_fu_769_p1;
    p_r_M_real_82_fu_789_p1 <= trunc_ln328_fu_785_p1;
    p_r_M_real_fu_745_p1 <= trunc_ln388_fu_741_p1;
    select_ln1027_15_fu_569_p3 <= 
        ap_const_lv32_0 when (icmp_ln1027_9_reg_922(0) = '1') else 
        j2_fu_80;
    select_ln1027_16_fu_488_p3 <= 
        j1_22_fu_467_p3 when (icmp_ln1027_9_fu_483_p2(0) = '1') else 
        j1_fu_88;
    select_ln1027_17_fu_576_p3 <= 
        add40_mid1_reg_939 when (icmp_ln1027_9_reg_922(0) = '1') else 
        add40_reg_913;
    select_ln1027_18_fu_514_p3 <= 
        m1_15_fu_475_p3 when (icmp_ln1027_9_fu_483_p2(0) = '1') else 
        m1_fu_92;
    select_ln1027_fu_562_p3 <= 
        ap_const_lv32_0 when (icmp_ln1027_9_reg_922(0) = '1') else 
        m2_fu_84;
    sub3_i_i298_partset_fu_837_p3 <= (bitcast_ln38_4_fu_833_p1 & bitcast_ln38_fu_829_p1);
    sub3_i_i302_partset_fu_853_p3 <= (bitcast_ln39_4_fu_849_p1 & bitcast_ln39_fu_845_p1);
    tmp_fu_687_p3 <= (add_ln1027_3_reg_954 & ap_const_lv6_0);
    tmp_s_fu_694_p3 <= (select_ln1027_17_reg_949 & ap_const_lv6_0);
    trunc_ln1027_24_fu_403_p1 <= j1_fu_88(6 - 1 downto 0);
    trunc_ln1027_25_fu_496_p1 <= select_ln1027_16_fu_488_p3(2 - 1 downto 0);
    trunc_ln1027_26_fu_500_p1 <= m1_15_fu_475_p3(6 - 1 downto 0);
    trunc_ln1027_27_fu_504_p1 <= j1_22_fu_467_p3(6 - 1 downto 0);
    trunc_ln1027_28_fu_592_p1 <= select_ln1027_fu_562_p3(12 - 1 downto 0);
    trunc_ln1027_29_fu_596_p1 <= select_ln1027_15_fu_569_p3(12 - 1 downto 0);
    trunc_ln1027_30_fu_600_p1 <= select_ln1027_15_fu_569_p3(2 - 1 downto 0);
    trunc_ln1027_fu_399_p1 <= m1_fu_92(6 - 1 downto 0);
    trunc_ln328_fu_785_p1 <= I_q0(16 - 1 downto 0);
    trunc_ln388_13_fu_757_p1 <= I_q0(16 - 1 downto 0);
    trunc_ln388_14_fu_769_p1 <= I_q1(16 - 1 downto 0);
    trunc_ln388_fu_741_p1 <= I_q1(16 - 1 downto 0);

    w_11_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln27_fu_701_p1, ap_block_pp0_stage1, zext_ln28_fu_736_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w_11_address0 <= zext_ln28_fu_736_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            w_11_address0 <= zext_ln27_fu_701_p1(5 - 1 downto 0);
        else 
            w_11_address0 <= "XXXXX";
        end if; 
    end process;

    w_11_address1 <= zext_ln1027_fu_587_p1(5 - 1 downto 0);

    w_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w_11_ce0 <= ap_const_logic_1;
        else 
            w_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w_11_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w_11_ce1 <= ap_const_logic_1;
        else 
            w_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    w_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln27_fu_701_p1, ap_block_pp0_stage1, zext_ln28_fu_736_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w_6_address0 <= zext_ln28_fu_736_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            w_6_address0 <= zext_ln27_fu_701_p1(5 - 1 downto 0);
        else 
            w_6_address0 <= "XXXXX";
        end if; 
    end process;

    w_6_address1 <= zext_ln1027_fu_587_p1(5 - 1 downto 0);

    w_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w_6_ce0 <= ap_const_logic_1;
        else 
            w_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w_6_ce1 <= ap_const_logic_1;
        else 
            w_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1027_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1027_16_reg_929),64));
    zext_ln27_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1027_15_reg_944),64));
    zext_ln28_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_reg_969),64));
    zext_ln328_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln328_reg_1018_pp0_iter5_reg),64));
    zext_ln388_11_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln388_7_fu_721_p2),64));
    zext_ln388_12_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln388_8_reg_1033),64));
    zext_ln388_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln388_fu_706_p2),64));
end behav;
