// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module IFFT_AP_fft_stage_Pipeline_SKIP_X_SKIP_Y (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bound,
        trunc_ln17,
        I_address0,
        I_ce0,
        I_q0,
        I_address1,
        I_ce1,
        I_q1,
        X_address0,
        X_ce0,
        X_we0,
        X_d0,
        X_address1,
        X_ce1,
        X_we1,
        X_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [13:0] bound;
input  [6:0] trunc_ln17;
output  [11:0] I_address0;
output   I_ce0;
input  [31:0] I_q0;
output  [11:0] I_address1;
output   I_ce1;
input  [31:0] I_q1;
output  [11:0] X_address0;
output   X_ce0;
output   X_we0;
output  [31:0] X_d0;
output  [11:0] X_address1;
output   X_ce1;
output   X_we1;
output  [31:0] X_d1;

reg ap_idle;
reg[11:0] I_address0;
reg I_ce0;
reg[11:0] I_address1;
reg I_ce1;
reg[11:0] X_address0;
reg X_ce0;
reg X_we0;
reg[31:0] X_d0;
reg[11:0] X_address1;
reg X_ce1;
reg X_we1;
reg[31:0] X_d1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_state24_pp0_stage1_iter11;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln1027_reg_610;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [15:0] reg_275;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
wire    ap_block_state25_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_11001;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln1027_fu_302_p2;
reg   [0:0] icmp_ln1027_reg_610_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_reg_610_pp0_iter2_reg;
reg   [0:0] icmp_ln1027_reg_610_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_reg_610_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_610_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_reg_610_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_reg_610_pp0_iter7_reg;
reg   [0:0] icmp_ln1027_reg_610_pp0_iter8_reg;
reg   [0:0] icmp_ln1027_reg_610_pp0_iter9_reg;
reg   [0:0] icmp_ln1027_reg_610_pp0_iter10_reg;
wire   [0:0] icmp_ln1027_4_fu_326_p2;
reg   [0:0] icmp_ln1027_4_reg_614;
wire   [5:0] trunc_ln388_fu_340_p1;
reg   [5:0] trunc_ln388_reg_619;
wire   [63:0] zext_ln388_1_fu_413_p1;
reg   [63:0] zext_ln388_1_reg_625;
reg   [63:0] zext_ln388_1_reg_625_pp0_iter1_reg;
reg   [63:0] zext_ln388_1_reg_625_pp0_iter2_reg;
reg   [63:0] zext_ln388_1_reg_625_pp0_iter3_reg;
reg   [63:0] zext_ln388_1_reg_625_pp0_iter4_reg;
reg   [63:0] zext_ln388_1_reg_625_pp0_iter5_reg;
reg   [63:0] zext_ln388_1_reg_625_pp0_iter6_reg;
reg   [63:0] zext_ln388_1_reg_625_pp0_iter7_reg;
reg   [63:0] zext_ln388_1_reg_625_pp0_iter8_reg;
reg   [63:0] zext_ln388_1_reg_625_pp0_iter9_reg;
reg   [63:0] zext_ln388_1_reg_625_pp0_iter10_reg;
reg   [63:0] zext_ln388_1_reg_625_pp0_iter11_reg;
wire   [11:0] add_ln328_fu_418_p2;
reg   [11:0] add_ln328_reg_635;
reg   [11:0] add_ln328_reg_635_pp0_iter1_reg;
reg   [11:0] add_ln328_reg_635_pp0_iter2_reg;
reg   [11:0] add_ln328_reg_635_pp0_iter3_reg;
reg   [11:0] add_ln328_reg_635_pp0_iter4_reg;
wire   [63:0] zext_ln388_3_fu_440_p1;
reg   [63:0] zext_ln388_3_reg_640;
reg   [63:0] zext_ln388_3_reg_640_pp0_iter1_reg;
reg   [63:0] zext_ln388_3_reg_640_pp0_iter2_reg;
reg   [63:0] zext_ln388_3_reg_640_pp0_iter3_reg;
reg   [63:0] zext_ln388_3_reg_640_pp0_iter4_reg;
reg   [63:0] zext_ln388_3_reg_640_pp0_iter5_reg;
reg   [63:0] zext_ln388_3_reg_640_pp0_iter6_reg;
reg   [63:0] zext_ln388_3_reg_640_pp0_iter7_reg;
reg   [63:0] zext_ln388_3_reg_640_pp0_iter8_reg;
reg   [63:0] zext_ln388_3_reg_640_pp0_iter9_reg;
reg   [63:0] zext_ln388_3_reg_640_pp0_iter10_reg;
wire   [11:0] add_ln388_2_fu_445_p2;
reg   [11:0] add_ln388_2_reg_650;
wire   [15:0] trunc_ln388_1_fu_462_p1;
reg   [15:0] trunc_ln388_1_reg_655;
wire   [63:0] zext_ln388_4_fu_466_p1;
reg   [63:0] zext_ln388_4_reg_660;
reg   [63:0] zext_ln388_4_reg_660_pp0_iter2_reg;
reg   [63:0] zext_ln388_4_reg_660_pp0_iter3_reg;
reg   [63:0] zext_ln388_4_reg_660_pp0_iter4_reg;
reg   [63:0] zext_ln388_4_reg_660_pp0_iter5_reg;
reg   [63:0] zext_ln388_4_reg_660_pp0_iter6_reg;
reg   [63:0] zext_ln388_4_reg_660_pp0_iter7_reg;
reg   [63:0] zext_ln388_4_reg_660_pp0_iter8_reg;
reg   [63:0] zext_ln388_4_reg_660_pp0_iter9_reg;
reg   [63:0] zext_ln388_4_reg_660_pp0_iter10_reg;
reg   [63:0] zext_ln388_4_reg_660_pp0_iter11_reg;
wire   [15:0] trunc_ln388_2_fu_470_p1;
reg   [15:0] trunc_ln388_2_reg_670;
reg   [15:0] trunc_ln388_3_reg_675;
wire   [15:0] p_r_M_real_fu_474_p1;
reg   [15:0] p_r_M_real_reg_680;
reg   [15:0] p_r_M_real_reg_680_pp0_iter2_reg;
wire   [15:0] p_r_M_imag_fu_478_p1;
reg   [15:0] p_r_M_imag_reg_686;
reg   [15:0] p_r_M_imag_reg_686_pp0_iter2_reg;
wire   [15:0] p_r_M_imag_2_fu_483_p1;
reg   [15:0] p_r_M_imag_2_reg_692;
reg   [15:0] p_r_M_imag_2_reg_692_pp0_iter2_reg;
reg   [15:0] p_r_M_imag_2_reg_692_pp0_iter3_reg;
wire   [15:0] trunc_ln388_4_fu_487_p1;
reg   [15:0] trunc_ln388_4_reg_698;
wire   [15:0] p_r_M_real_2_fu_491_p1;
reg   [15:0] p_r_M_real_2_reg_703;
reg   [15:0] p_r_M_real_2_reg_703_pp0_iter3_reg;
wire   [15:0] p_r_M_real_4_fu_495_p1;
reg   [15:0] p_r_M_real_4_reg_709;
reg   [15:0] p_r_M_real_4_reg_709_pp0_iter3_reg;
wire   [15:0] p_r_M_imag_4_fu_499_p1;
reg   [15:0] p_r_M_imag_4_reg_715;
reg   [15:0] p_r_M_imag_4_reg_715_pp0_iter3_reg;
wire   [15:0] grp_fu_240_p2;
reg   [15:0] mul3_i_i_reg_721;
wire   [15:0] grp_fu_245_p2;
reg   [15:0] mul6_i_i_reg_726;
wire   [15:0] grp_fu_250_p2;
reg   [15:0] mul3_i_i2_reg_731;
reg   [15:0] mul6_i_i2_reg_736;
reg   [15:0] mul3_i_i3_reg_741;
reg   [15:0] mul6_i_i3_reg_746;
wire   [63:0] zext_ln328_fu_504_p1;
reg   [63:0] zext_ln328_reg_751;
reg   [63:0] zext_ln328_reg_751_pp0_iter6_reg;
reg   [63:0] zext_ln328_reg_751_pp0_iter7_reg;
reg   [63:0] zext_ln328_reg_751_pp0_iter8_reg;
reg   [63:0] zext_ln328_reg_751_pp0_iter9_reg;
reg   [63:0] zext_ln328_reg_751_pp0_iter10_reg;
reg   [63:0] zext_ln328_reg_751_pp0_iter11_reg;
wire   [15:0] grp_fu_212_p2;
reg   [15:0] p_r_reg_761;
wire   [15:0] grp_fu_184_p2;
reg   [15:0] p_r_M_imag_8_reg_767;
wire   [15:0] grp_fu_216_p2;
reg   [15:0] p_r_1_reg_773;
wire   [15:0] trunc_ln328_fu_508_p1;
reg   [15:0] trunc_ln328_reg_779;
reg   [15:0] trunc_ln328_6_reg_784;
reg   [15:0] p_r_M_imag_18_reg_789;
reg   [15:0] p_r_2_reg_795;
wire   [15:0] grp_fu_188_p2;
reg   [15:0] p_r_M_imag_19_reg_801;
wire   [15:0] p_r_M_real_6_fu_512_p1;
wire   [15:0] p_r_M_imag_6_fu_517_p1;
wire   [15:0] grp_fu_192_p2;
reg   [15:0] p_r_M_real_15_reg_819;
reg   [15:0] p_r_M_real_13_reg_825;
reg   [15:0] p_r_M_real_13_reg_825_pp0_iter9_reg;
reg   [15:0] p_r_M_imag_15_reg_831;
reg   [15:0] p_r_M_real_18_reg_837;
wire   [15:0] grp_fu_196_p2;
reg   [15:0] p_r_M_imag_20_reg_843;
wire   [15:0] grp_fu_220_p2;
reg   [15:0] p_r_M_imag_13_reg_849;
wire   [15:0] grp_fu_224_p2;
reg   [15:0] p_r_M_real_19_reg_855;
wire   [15:0] grp_fu_228_p2;
reg   [15:0] p_r_M_imag_21_reg_861;
reg   [15:0] p_r_M_real_12_reg_867;
wire   [15:0] grp_fu_200_p2;
reg   [15:0] p_r_M_imag_12_reg_872;
wire   [15:0] grp_fu_204_p2;
reg   [15:0] p_r_M_real_14_reg_877;
wire   [15:0] grp_fu_208_p2;
reg   [15:0] p_r_M_imag_14_reg_882;
reg   [15:0] p_r_M_real_16_reg_887;
reg   [15:0] p_r_M_imag_16_reg_892;
wire   [15:0] grp_fu_232_p2;
reg   [15:0] p_r_M_real_17_reg_897;
wire   [15:0] grp_fu_236_p2;
reg   [15:0] p_r_M_imag_17_reg_902;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage0;
reg   [6:0] k2_fu_74;
wire   [6:0] k2_1_fu_350_p3;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_k2_load;
reg   [7:0] m2_fu_78;
wire   [7:0] add_ln47_fu_451_p2;
reg   [7:0] m1_fu_82;
wire   [7:0] select_ln1027_2_fu_332_p3;
reg   [7:0] ap_sig_allocacmp_m1_load;
reg   [13:0] indvar_flatten_fu_86;
wire   [13:0] add_ln1027_fu_308_p2;
reg   [13:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [31:0] add3_i_i290_partset_fu_528_p3;
wire   [31:0] add3_i_i294_partset_fu_543_p3;
wire   [31:0] sub3_i_i298_partset_fu_558_p3;
wire   [31:0] sub3_i_i302_partset_fu_573_p3;
reg   [15:0] grp_fu_184_p0;
reg   [15:0] grp_fu_184_p1;
reg   [15:0] grp_fu_188_p0;
reg   [15:0] grp_fu_188_p1;
reg   [15:0] grp_fu_192_p0;
reg   [15:0] grp_fu_192_p1;
reg   [15:0] grp_fu_196_p0;
reg   [15:0] grp_fu_196_p1;
reg   [15:0] grp_fu_212_p0;
reg   [15:0] grp_fu_212_p1;
reg   [15:0] grp_fu_216_p0;
reg   [15:0] grp_fu_216_p1;
reg   [15:0] grp_fu_220_p0;
reg   [15:0] grp_fu_220_p1;
reg   [15:0] grp_fu_224_p0;
reg   [15:0] grp_fu_224_p1;
reg   [15:0] grp_fu_240_p0;
reg   [15:0] grp_fu_245_p0;
reg   [15:0] grp_fu_250_p0;
wire   [7:0] add_ln57_fu_320_p2;
wire   [6:0] add_ln22_fu_344_p2;
wire   [5:0] or_ln1027_fu_390_p2;
wire   [7:0] select_ln1027_fu_376_p3;
wire   [11:0] tmp_6_fu_395_p3;
wire   [11:0] zext_ln388_fu_403_p1;
wire   [11:0] add_ln388_fu_407_p2;
wire   [11:0] tmp_s_fu_383_p3;
wire   [7:0] or_ln30_fu_424_p2;
wire   [11:0] zext_ln388_2_fu_430_p1;
wire   [11:0] add_ln388_1_fu_434_p2;
wire   [15:0] bitcast_ln36_1_fu_525_p1;
wire   [15:0] bitcast_ln36_fu_522_p1;
wire   [15:0] bitcast_ln37_1_fu_540_p1;
wire   [15:0] bitcast_ln37_fu_537_p1;
wire   [15:0] bitcast_ln38_1_fu_555_p1;
wire   [15:0] bitcast_ln38_fu_552_p1;
wire   [15:0] bitcast_ln39_1_fu_570_p1;
wire   [15:0] bitcast_ln39_fu_567_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter11_stage0;
reg    ap_idle_pp0_0to10;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to12;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hadd_16ns_16ns_16_5_full_dsp_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_184_p0),
    .din1(grp_fu_184_p1),
    .ce(1'b1),
    .dout(grp_fu_184_p2)
);

IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hadd_16ns_16ns_16_5_full_dsp_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_188_p0),
    .din1(grp_fu_188_p1),
    .ce(1'b1),
    .dout(grp_fu_188_p2)
);

IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hadd_16ns_16ns_16_5_full_dsp_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_192_p0),
    .din1(grp_fu_192_p1),
    .ce(1'b1),
    .dout(grp_fu_192_p2)
);

IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hadd_16ns_16ns_16_5_full_dsp_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_196_p0),
    .din1(grp_fu_196_p1),
    .ce(1'b1),
    .dout(grp_fu_196_p2)
);

IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hadd_16ns_16ns_16_5_full_dsp_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_15_reg_831),
    .din1(p_r_M_imag_20_reg_843),
    .ce(1'b1),
    .dout(grp_fu_200_p2)
);

IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hadd_16ns_16ns_16_5_full_dsp_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_13_reg_825),
    .din1(p_r_M_real_19_reg_855),
    .ce(1'b1),
    .dout(grp_fu_204_p2)
);

IFFT_AP_hadd_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hadd_16ns_16ns_16_5_full_dsp_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_13_reg_849),
    .din1(p_r_M_imag_21_reg_861),
    .ce(1'b1),
    .dout(grp_fu_208_p2)
);

IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hsub_16ns_16ns_16_5_full_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_212_p0),
    .din1(grp_fu_212_p1),
    .ce(1'b1),
    .dout(grp_fu_212_p2)
);

IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hsub_16ns_16ns_16_5_full_dsp_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_216_p0),
    .din1(grp_fu_216_p1),
    .ce(1'b1),
    .dout(grp_fu_216_p2)
);

IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hsub_16ns_16ns_16_5_full_dsp_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_220_p0),
    .din1(grp_fu_220_p1),
    .ce(1'b1),
    .dout(grp_fu_220_p2)
);

IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hsub_16ns_16ns_16_5_full_dsp_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_224_p0),
    .din1(grp_fu_224_p1),
    .ce(1'b1),
    .dout(grp_fu_224_p2)
);

IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hsub_16ns_16ns_16_5_full_dsp_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_8_reg_767),
    .din1(p_r_M_imag_19_reg_801),
    .ce(1'b1),
    .dout(grp_fu_228_p2)
);

IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hsub_16ns_16ns_16_5_full_dsp_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_13_reg_825_pp0_iter9_reg),
    .din1(p_r_M_real_19_reg_855),
    .ce(1'b1),
    .dout(grp_fu_232_p2)
);

IFFT_AP_hsub_16ns_16ns_16_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hsub_16ns_16ns_16_5_full_dsp_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_13_reg_849),
    .din1(p_r_M_imag_21_reg_861),
    .ce(1'b1),
    .dout(grp_fu_236_p2)
);

IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hmul_16ns_16ns_16_4_max_dsp_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_240_p0),
    .din1(16'd0),
    .ce(1'b1),
    .dout(grp_fu_240_p2)
);

IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hmul_16ns_16ns_16_4_max_dsp_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_245_p0),
    .din1(16'd0),
    .ce(1'b1),
    .dout(grp_fu_245_p2)
);

IFFT_AP_hmul_16ns_16ns_16_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hmul_16ns_16ns_16_4_max_dsp_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_250_p0),
    .din1(16'd0),
    .ce(1'b1),
    .dout(grp_fu_250_p2)
);

IFFT_AP_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage0))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage0))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1027_fu_302_p2 == 1'd0))) begin
            indvar_flatten_fu_86 <= add_ln1027_fu_308_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_86 <= 14'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1027_fu_302_p2 == 1'd0))) begin
            k2_fu_74 <= k2_1_fu_350_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            k2_fu_74 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1027_fu_302_p2 == 1'd0))) begin
            m1_fu_82 <= select_ln1027_2_fu_332_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            m1_fu_82 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m2_fu_78 <= 8'd0;
    end else if (((icmp_ln1027_reg_610 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m2_fu_78 <= add_ln47_fu_451_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_610 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln328_reg_635 <= add_ln328_fu_418_p2;
        add_ln388_2_reg_650[11 : 1] <= add_ln388_2_fu_445_p2[11 : 1];
        zext_ln388_1_reg_625[11 : 0] <= zext_ln388_1_fu_413_p1[11 : 0];
        zext_ln388_3_reg_640[11 : 1] <= zext_ln388_3_fu_440_p1[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln328_reg_635_pp0_iter1_reg <= add_ln328_reg_635;
        add_ln328_reg_635_pp0_iter2_reg <= add_ln328_reg_635_pp0_iter1_reg;
        add_ln328_reg_635_pp0_iter3_reg <= add_ln328_reg_635_pp0_iter2_reg;
        add_ln328_reg_635_pp0_iter4_reg <= add_ln328_reg_635_pp0_iter3_reg;
        p_r_M_imag_17_reg_902 <= grp_fu_236_p2;
        p_r_M_imag_21_reg_861 <= grp_fu_228_p2;
        p_r_M_imag_2_reg_692 <= p_r_M_imag_2_fu_483_p1;
        p_r_M_imag_2_reg_692_pp0_iter2_reg <= p_r_M_imag_2_reg_692;
        p_r_M_imag_2_reg_692_pp0_iter3_reg <= p_r_M_imag_2_reg_692_pp0_iter2_reg;
        p_r_M_imag_reg_686 <= p_r_M_imag_fu_478_p1;
        p_r_M_imag_reg_686_pp0_iter2_reg <= p_r_M_imag_reg_686;
        p_r_M_real_17_reg_897 <= grp_fu_232_p2;
        p_r_M_real_reg_680 <= p_r_M_real_fu_474_p1;
        p_r_M_real_reg_680_pp0_iter2_reg <= p_r_M_real_reg_680;
        trunc_ln328_reg_779 <= trunc_ln328_fu_508_p1;
        trunc_ln388_4_reg_698 <= trunc_ln388_4_fu_487_p1;
        zext_ln388_1_reg_625_pp0_iter10_reg[11 : 0] <= zext_ln388_1_reg_625_pp0_iter9_reg[11 : 0];
        zext_ln388_1_reg_625_pp0_iter11_reg[11 : 0] <= zext_ln388_1_reg_625_pp0_iter10_reg[11 : 0];
        zext_ln388_1_reg_625_pp0_iter1_reg[11 : 0] <= zext_ln388_1_reg_625[11 : 0];
        zext_ln388_1_reg_625_pp0_iter2_reg[11 : 0] <= zext_ln388_1_reg_625_pp0_iter1_reg[11 : 0];
        zext_ln388_1_reg_625_pp0_iter3_reg[11 : 0] <= zext_ln388_1_reg_625_pp0_iter2_reg[11 : 0];
        zext_ln388_1_reg_625_pp0_iter4_reg[11 : 0] <= zext_ln388_1_reg_625_pp0_iter3_reg[11 : 0];
        zext_ln388_1_reg_625_pp0_iter5_reg[11 : 0] <= zext_ln388_1_reg_625_pp0_iter4_reg[11 : 0];
        zext_ln388_1_reg_625_pp0_iter6_reg[11 : 0] <= zext_ln388_1_reg_625_pp0_iter5_reg[11 : 0];
        zext_ln388_1_reg_625_pp0_iter7_reg[11 : 0] <= zext_ln388_1_reg_625_pp0_iter6_reg[11 : 0];
        zext_ln388_1_reg_625_pp0_iter8_reg[11 : 0] <= zext_ln388_1_reg_625_pp0_iter7_reg[11 : 0];
        zext_ln388_1_reg_625_pp0_iter9_reg[11 : 0] <= zext_ln388_1_reg_625_pp0_iter8_reg[11 : 0];
        zext_ln388_3_reg_640_pp0_iter10_reg[11 : 1] <= zext_ln388_3_reg_640_pp0_iter9_reg[11 : 1];
        zext_ln388_3_reg_640_pp0_iter1_reg[11 : 1] <= zext_ln388_3_reg_640[11 : 1];
        zext_ln388_3_reg_640_pp0_iter2_reg[11 : 1] <= zext_ln388_3_reg_640_pp0_iter1_reg[11 : 1];
        zext_ln388_3_reg_640_pp0_iter3_reg[11 : 1] <= zext_ln388_3_reg_640_pp0_iter2_reg[11 : 1];
        zext_ln388_3_reg_640_pp0_iter4_reg[11 : 1] <= zext_ln388_3_reg_640_pp0_iter3_reg[11 : 1];
        zext_ln388_3_reg_640_pp0_iter5_reg[11 : 1] <= zext_ln388_3_reg_640_pp0_iter4_reg[11 : 1];
        zext_ln388_3_reg_640_pp0_iter6_reg[11 : 1] <= zext_ln388_3_reg_640_pp0_iter5_reg[11 : 1];
        zext_ln388_3_reg_640_pp0_iter7_reg[11 : 1] <= zext_ln388_3_reg_640_pp0_iter6_reg[11 : 1];
        zext_ln388_3_reg_640_pp0_iter8_reg[11 : 1] <= zext_ln388_3_reg_640_pp0_iter7_reg[11 : 1];
        zext_ln388_3_reg_640_pp0_iter9_reg[11 : 1] <= zext_ln388_3_reg_640_pp0_iter8_reg[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_fu_302_p2 == 1'd0))) begin
        icmp_ln1027_4_reg_614 <= icmp_ln1027_4_fu_326_p2;
        trunc_ln388_reg_619 <= trunc_ln388_fu_340_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1027_reg_610 <= icmp_ln1027_fu_302_p2;
        icmp_ln1027_reg_610_pp0_iter10_reg <= icmp_ln1027_reg_610_pp0_iter9_reg;
        icmp_ln1027_reg_610_pp0_iter1_reg <= icmp_ln1027_reg_610;
        icmp_ln1027_reg_610_pp0_iter2_reg <= icmp_ln1027_reg_610_pp0_iter1_reg;
        icmp_ln1027_reg_610_pp0_iter3_reg <= icmp_ln1027_reg_610_pp0_iter2_reg;
        icmp_ln1027_reg_610_pp0_iter4_reg <= icmp_ln1027_reg_610_pp0_iter3_reg;
        icmp_ln1027_reg_610_pp0_iter5_reg <= icmp_ln1027_reg_610_pp0_iter4_reg;
        icmp_ln1027_reg_610_pp0_iter6_reg <= icmp_ln1027_reg_610_pp0_iter5_reg;
        icmp_ln1027_reg_610_pp0_iter7_reg <= icmp_ln1027_reg_610_pp0_iter6_reg;
        icmp_ln1027_reg_610_pp0_iter8_reg <= icmp_ln1027_reg_610_pp0_iter7_reg;
        icmp_ln1027_reg_610_pp0_iter9_reg <= icmp_ln1027_reg_610_pp0_iter8_reg;
        p_r_M_imag_12_reg_872 <= grp_fu_200_p2;
        p_r_M_imag_14_reg_882 <= grp_fu_208_p2;
        p_r_M_imag_4_reg_715 <= p_r_M_imag_4_fu_499_p1;
        p_r_M_imag_4_reg_715_pp0_iter3_reg <= p_r_M_imag_4_reg_715;
        p_r_M_real_13_reg_825_pp0_iter9_reg <= p_r_M_real_13_reg_825;
        p_r_M_real_14_reg_877 <= grp_fu_204_p2;
        p_r_M_real_2_reg_703 <= p_r_M_real_2_fu_491_p1;
        p_r_M_real_2_reg_703_pp0_iter3_reg <= p_r_M_real_2_reg_703;
        p_r_M_real_4_reg_709 <= p_r_M_real_4_fu_495_p1;
        p_r_M_real_4_reg_709_pp0_iter3_reg <= p_r_M_real_4_reg_709;
        trunc_ln388_1_reg_655 <= trunc_ln388_1_fu_462_p1;
        trunc_ln388_2_reg_670 <= trunc_ln388_2_fu_470_p1;
        zext_ln328_reg_751[11 : 0] <= zext_ln328_fu_504_p1[11 : 0];
        zext_ln328_reg_751_pp0_iter10_reg[11 : 0] <= zext_ln328_reg_751_pp0_iter9_reg[11 : 0];
        zext_ln328_reg_751_pp0_iter11_reg[11 : 0] <= zext_ln328_reg_751_pp0_iter10_reg[11 : 0];
        zext_ln328_reg_751_pp0_iter6_reg[11 : 0] <= zext_ln328_reg_751[11 : 0];
        zext_ln328_reg_751_pp0_iter7_reg[11 : 0] <= zext_ln328_reg_751_pp0_iter6_reg[11 : 0];
        zext_ln328_reg_751_pp0_iter8_reg[11 : 0] <= zext_ln328_reg_751_pp0_iter7_reg[11 : 0];
        zext_ln328_reg_751_pp0_iter9_reg[11 : 0] <= zext_ln328_reg_751_pp0_iter8_reg[11 : 0];
        zext_ln388_4_reg_660[11 : 1] <= zext_ln388_4_fu_466_p1[11 : 1];
        zext_ln388_4_reg_660_pp0_iter10_reg[11 : 1] <= zext_ln388_4_reg_660_pp0_iter9_reg[11 : 1];
        zext_ln388_4_reg_660_pp0_iter11_reg[11 : 1] <= zext_ln388_4_reg_660_pp0_iter10_reg[11 : 1];
        zext_ln388_4_reg_660_pp0_iter2_reg[11 : 1] <= zext_ln388_4_reg_660[11 : 1];
        zext_ln388_4_reg_660_pp0_iter3_reg[11 : 1] <= zext_ln388_4_reg_660_pp0_iter2_reg[11 : 1];
        zext_ln388_4_reg_660_pp0_iter4_reg[11 : 1] <= zext_ln388_4_reg_660_pp0_iter3_reg[11 : 1];
        zext_ln388_4_reg_660_pp0_iter5_reg[11 : 1] <= zext_ln388_4_reg_660_pp0_iter4_reg[11 : 1];
        zext_ln388_4_reg_660_pp0_iter6_reg[11 : 1] <= zext_ln388_4_reg_660_pp0_iter5_reg[11 : 1];
        zext_ln388_4_reg_660_pp0_iter7_reg[11 : 1] <= zext_ln388_4_reg_660_pp0_iter6_reg[11 : 1];
        zext_ln388_4_reg_660_pp0_iter8_reg[11 : 1] <= zext_ln388_4_reg_660_pp0_iter7_reg[11 : 1];
        zext_ln388_4_reg_660_pp0_iter9_reg[11 : 1] <= zext_ln388_4_reg_660_pp0_iter8_reg[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul3_i_i2_reg_731 <= grp_fu_250_p2;
        mul3_i_i_reg_721 <= grp_fu_240_p2;
        mul6_i_i_reg_726 <= grp_fu_245_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul3_i_i3_reg_741 <= grp_fu_245_p2;
        mul6_i_i2_reg_736 <= grp_fu_240_p2;
        mul6_i_i3_reg_746 <= grp_fu_250_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_r_1_reg_773 <= grp_fu_216_p2;
        p_r_M_imag_8_reg_767 <= grp_fu_184_p2;
        p_r_reg_761 <= grp_fu_212_p2;
        trunc_ln328_6_reg_784 <= {{I_q0[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_r_2_reg_795 <= grp_fu_212_p2;
        p_r_M_imag_18_reg_789 <= grp_fu_184_p2;
        p_r_M_imag_19_reg_801 <= grp_fu_188_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_r_M_imag_13_reg_849 <= grp_fu_220_p2;
        p_r_M_imag_15_reg_831 <= grp_fu_188_p2;
        p_r_M_imag_20_reg_843 <= grp_fu_196_p2;
        p_r_M_real_18_reg_837 <= grp_fu_192_p2;
        p_r_M_real_19_reg_855 <= grp_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_r_M_imag_16_reg_892 <= grp_fu_224_p2;
        p_r_M_real_12_reg_867 <= grp_fu_196_p2;
        p_r_M_real_16_reg_887 <= grp_fu_220_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_r_M_real_13_reg_825 <= grp_fu_216_p2;
        p_r_M_real_15_reg_819 <= grp_fu_192_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_275 <= {{I_q1[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln388_3_reg_675 <= {{I_q0[31:16]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        I_address0 = zext_ln328_fu_504_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        I_address0 = zext_ln388_3_fu_440_p1;
    end else begin
        I_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        I_address1 = zext_ln388_4_fu_466_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        I_address1 = zext_ln388_1_fu_413_p1;
    end else begin
        I_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        I_ce0 = 1'b1;
    end else begin
        I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        I_ce1 = 1'b1;
    end else begin
        I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_address0 = zext_ln388_4_reg_660_pp0_iter11_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_address0 = zext_ln388_3_reg_640_pp0_iter10_reg;
    end else begin
        X_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_address1 = zext_ln388_1_reg_625_pp0_iter11_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_address1 = zext_ln328_reg_751_pp0_iter11_reg;
    end else begin
        X_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        X_ce0 = 1'b1;
    end else begin
        X_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        X_ce1 = 1'b1;
    end else begin
        X_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_d0 = sub3_i_i302_partset_fu_573_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_d0 = add3_i_i294_partset_fu_543_p3;
    end else begin
        X_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_d1 = sub3_i_i298_partset_fu_558_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_d1 = add3_i_i290_partset_fu_528_p3;
    end else begin
        X_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        X_we0 = 1'b1;
    end else begin
        X_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        X_we1 = 1'b1;
    end else begin
        X_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_610 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_610_pp0_iter10_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter11_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter11_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to10 = 1'b1;
    end else begin
        ap_idle_pp0_0to10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to12 = 1'b1;
    end else begin
        ap_idle_pp0_1to12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 14'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_k2_load = 7'd0;
    end else begin
        ap_sig_allocacmp_k2_load = k2_fu_74;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_m1_load = 8'd0;
    end else begin
        ap_sig_allocacmp_m1_load = m1_fu_82;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_184_p0 = mul6_i_i2_reg_736;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_184_p0 = mul6_i_i_reg_726;
    end else begin
        grp_fu_184_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_184_p1 = p_r_M_imag_2_reg_692_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_184_p1 = p_r_M_imag_reg_686_pp0_iter2_reg;
    end else begin
        grp_fu_184_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_188_p0 = p_r_M_imag_6_fu_517_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_188_p0 = mul6_i_i3_reg_746;
    end else begin
        grp_fu_188_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_188_p1 = p_r_M_imag_18_reg_789;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_188_p1 = p_r_M_imag_4_reg_715_pp0_iter3_reg;
    end else begin
        grp_fu_188_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_192_p0 = p_r_reg_761;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_192_p0 = p_r_M_real_6_fu_512_p1;
        end else begin
            grp_fu_192_p0 = 'bx;
        end
    end else begin
        grp_fu_192_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_192_p1 = p_r_2_reg_795;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_192_p1 = p_r_1_reg_773;
        end else begin
            grp_fu_192_p1 = 'bx;
        end
    end else begin
        grp_fu_192_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_196_p0 = p_r_M_real_15_reg_819;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_196_p0 = p_r_M_imag_8_reg_767;
    end else begin
        grp_fu_196_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_196_p1 = p_r_M_real_18_reg_837;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_196_p1 = p_r_M_imag_19_reg_801;
    end else begin
        grp_fu_196_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_212_p0 = p_r_M_real_4_reg_709_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_212_p0 = p_r_M_real_reg_680_pp0_iter2_reg;
    end else begin
        grp_fu_212_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_212_p1 = mul3_i_i3_reg_741;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_212_p1 = mul3_i_i_reg_721;
    end else begin
        grp_fu_212_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_216_p0 = p_r_M_real_6_fu_512_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_216_p0 = p_r_M_real_2_reg_703_pp0_iter3_reg;
    end else begin
        grp_fu_216_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_216_p1 = p_r_1_reg_773;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_216_p1 = mul3_i_i2_reg_731;
    end else begin
        grp_fu_216_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_220_p0 = p_r_M_real_15_reg_819;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_220_p0 = p_r_M_imag_6_fu_517_p1;
    end else begin
        grp_fu_220_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_220_p1 = p_r_M_real_18_reg_837;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_220_p1 = p_r_M_imag_18_reg_789;
    end else begin
        grp_fu_220_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_224_p0 = p_r_M_imag_15_reg_831;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_224_p0 = p_r_reg_761;
    end else begin
        grp_fu_224_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_224_p1 = p_r_M_imag_20_reg_843;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_224_p1 = p_r_2_reg_795;
    end else begin
        grp_fu_224_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_240_p0 = p_r_M_real_2_fu_491_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_240_p0 = p_r_M_imag_fu_478_p1;
    end else begin
        grp_fu_240_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_245_p0 = p_r_M_imag_4_fu_499_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_245_p0 = p_r_M_real_fu_474_p1;
    end else begin
        grp_fu_245_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_250_p0 = p_r_M_real_4_fu_495_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_250_p0 = p_r_M_imag_2_fu_483_p1;
    end else begin
        grp_fu_250_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to12 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add3_i_i290_partset_fu_528_p3 = {{bitcast_ln36_1_fu_525_p1}, {bitcast_ln36_fu_522_p1}};

assign add3_i_i294_partset_fu_543_p3 = {{bitcast_ln37_1_fu_540_p1}, {bitcast_ln37_fu_537_p1}};

assign add_ln1027_fu_308_p2 = (ap_sig_allocacmp_indvar_flatten_load + 14'd1);

assign add_ln22_fu_344_p2 = (ap_sig_allocacmp_k2_load + 7'd1);

assign add_ln328_fu_418_p2 = (tmp_s_fu_383_p3 + zext_ln388_fu_403_p1);

assign add_ln388_1_fu_434_p2 = (tmp_s_fu_383_p3 + zext_ln388_2_fu_430_p1);

assign add_ln388_2_fu_445_p2 = (tmp_6_fu_395_p3 + zext_ln388_2_fu_430_p1);

assign add_ln388_fu_407_p2 = (tmp_6_fu_395_p3 + zext_ln388_fu_403_p1);

assign add_ln47_fu_451_p2 = (select_ln1027_fu_376_p3 + 8'd2);

assign add_ln57_fu_320_p2 = (ap_sig_allocacmp_m1_load + 8'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign bitcast_ln36_1_fu_525_p1 = p_r_M_imag_12_reg_872;

assign bitcast_ln36_fu_522_p1 = p_r_M_real_12_reg_867;

assign bitcast_ln37_1_fu_540_p1 = p_r_M_imag_14_reg_882;

assign bitcast_ln37_fu_537_p1 = p_r_M_real_14_reg_877;

assign bitcast_ln38_1_fu_555_p1 = p_r_M_imag_16_reg_892;

assign bitcast_ln38_fu_552_p1 = p_r_M_real_16_reg_887;

assign bitcast_ln39_1_fu_570_p1 = p_r_M_imag_17_reg_902;

assign bitcast_ln39_fu_567_p1 = p_r_M_real_17_reg_897;

assign icmp_ln1027_4_fu_326_p2 = ((ap_sig_allocacmp_k2_load == trunc_ln17) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_302_p2 = ((ap_sig_allocacmp_indvar_flatten_load == bound) ? 1'b1 : 1'b0);

assign k2_1_fu_350_p3 = ((icmp_ln1027_4_fu_326_p2[0:0] == 1'b1) ? 7'd1 : add_ln22_fu_344_p2);

assign or_ln1027_fu_390_p2 = (trunc_ln388_reg_619 | 6'd1);

assign or_ln30_fu_424_p2 = (select_ln1027_fu_376_p3 | 8'd1);

assign p_r_M_imag_2_fu_483_p1 = trunc_ln388_3_reg_675;

assign p_r_M_imag_4_fu_499_p1 = reg_275;

assign p_r_M_imag_6_fu_517_p1 = trunc_ln328_6_reg_784;

assign p_r_M_imag_fu_478_p1 = reg_275;

assign p_r_M_real_2_fu_491_p1 = trunc_ln388_2_reg_670;

assign p_r_M_real_4_fu_495_p1 = trunc_ln388_4_reg_698;

assign p_r_M_real_6_fu_512_p1 = trunc_ln328_reg_779;

assign p_r_M_real_fu_474_p1 = trunc_ln388_1_reg_655;

assign select_ln1027_2_fu_332_p3 = ((icmp_ln1027_4_fu_326_p2[0:0] == 1'b1) ? add_ln57_fu_320_p2 : ap_sig_allocacmp_m1_load);

assign select_ln1027_fu_376_p3 = ((icmp_ln1027_4_reg_614[0:0] == 1'b1) ? 8'd0 : m2_fu_78);

assign sub3_i_i298_partset_fu_558_p3 = {{bitcast_ln38_1_fu_555_p1}, {bitcast_ln38_fu_552_p1}};

assign sub3_i_i302_partset_fu_573_p3 = {{bitcast_ln39_1_fu_570_p1}, {bitcast_ln39_fu_567_p1}};

assign tmp_6_fu_395_p3 = {{or_ln1027_fu_390_p2}, {6'd0}};

assign tmp_s_fu_383_p3 = {{trunc_ln388_reg_619}, {6'd0}};

assign trunc_ln328_fu_508_p1 = I_q0[15:0];

assign trunc_ln388_1_fu_462_p1 = I_q1[15:0];

assign trunc_ln388_2_fu_470_p1 = I_q0[15:0];

assign trunc_ln388_4_fu_487_p1 = I_q1[15:0];

assign trunc_ln388_fu_340_p1 = select_ln1027_2_fu_332_p3[5:0];

assign zext_ln328_fu_504_p1 = add_ln328_reg_635_pp0_iter4_reg;

assign zext_ln388_1_fu_413_p1 = add_ln388_fu_407_p2;

assign zext_ln388_2_fu_430_p1 = or_ln30_fu_424_p2;

assign zext_ln388_3_fu_440_p1 = add_ln388_1_fu_434_p2;

assign zext_ln388_4_fu_466_p1 = add_ln388_2_reg_650;

assign zext_ln388_fu_403_p1 = select_ln1027_fu_376_p3;

always @ (posedge ap_clk) begin
    zext_ln388_1_reg_625[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_1_reg_625_pp0_iter1_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_1_reg_625_pp0_iter2_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_1_reg_625_pp0_iter3_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_1_reg_625_pp0_iter4_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_1_reg_625_pp0_iter5_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_1_reg_625_pp0_iter6_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_1_reg_625_pp0_iter7_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_1_reg_625_pp0_iter8_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_1_reg_625_pp0_iter9_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_1_reg_625_pp0_iter10_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_1_reg_625_pp0_iter11_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_3_reg_640[0] <= 1'b1;
    zext_ln388_3_reg_640[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_3_reg_640_pp0_iter1_reg[0] <= 1'b1;
    zext_ln388_3_reg_640_pp0_iter1_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_3_reg_640_pp0_iter2_reg[0] <= 1'b1;
    zext_ln388_3_reg_640_pp0_iter2_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_3_reg_640_pp0_iter3_reg[0] <= 1'b1;
    zext_ln388_3_reg_640_pp0_iter3_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_3_reg_640_pp0_iter4_reg[0] <= 1'b1;
    zext_ln388_3_reg_640_pp0_iter4_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_3_reg_640_pp0_iter5_reg[0] <= 1'b1;
    zext_ln388_3_reg_640_pp0_iter5_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_3_reg_640_pp0_iter6_reg[0] <= 1'b1;
    zext_ln388_3_reg_640_pp0_iter6_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_3_reg_640_pp0_iter7_reg[0] <= 1'b1;
    zext_ln388_3_reg_640_pp0_iter7_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_3_reg_640_pp0_iter8_reg[0] <= 1'b1;
    zext_ln388_3_reg_640_pp0_iter8_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_3_reg_640_pp0_iter9_reg[0] <= 1'b1;
    zext_ln388_3_reg_640_pp0_iter9_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_3_reg_640_pp0_iter10_reg[0] <= 1'b1;
    zext_ln388_3_reg_640_pp0_iter10_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    add_ln388_2_reg_650[0] <= 1'b1;
    zext_ln388_4_reg_660[0] <= 1'b1;
    zext_ln388_4_reg_660[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_4_reg_660_pp0_iter2_reg[0] <= 1'b1;
    zext_ln388_4_reg_660_pp0_iter2_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_4_reg_660_pp0_iter3_reg[0] <= 1'b1;
    zext_ln388_4_reg_660_pp0_iter3_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_4_reg_660_pp0_iter4_reg[0] <= 1'b1;
    zext_ln388_4_reg_660_pp0_iter4_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_4_reg_660_pp0_iter5_reg[0] <= 1'b1;
    zext_ln388_4_reg_660_pp0_iter5_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_4_reg_660_pp0_iter6_reg[0] <= 1'b1;
    zext_ln388_4_reg_660_pp0_iter6_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_4_reg_660_pp0_iter7_reg[0] <= 1'b1;
    zext_ln388_4_reg_660_pp0_iter7_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_4_reg_660_pp0_iter8_reg[0] <= 1'b1;
    zext_ln388_4_reg_660_pp0_iter8_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_4_reg_660_pp0_iter9_reg[0] <= 1'b1;
    zext_ln388_4_reg_660_pp0_iter9_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_4_reg_660_pp0_iter10_reg[0] <= 1'b1;
    zext_ln388_4_reg_660_pp0_iter10_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln388_4_reg_660_pp0_iter11_reg[0] <= 1'b1;
    zext_ln388_4_reg_660_pp0_iter11_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln328_reg_751[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln328_reg_751_pp0_iter6_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln328_reg_751_pp0_iter7_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln328_reg_751_pp0_iter8_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln328_reg_751_pp0_iter9_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln328_reg_751_pp0_iter10_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln328_reg_751_pp0_iter11_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //IFFT_AP_fft_stage_Pipeline_SKIP_X_SKIP_Y
