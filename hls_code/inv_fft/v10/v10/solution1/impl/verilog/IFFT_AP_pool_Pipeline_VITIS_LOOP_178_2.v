// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module IFFT_AP_pool_Pipeline_VITIS_LOOP_178_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln541,
        sext_ln178,
        O_address0,
        O_ce0,
        O_we0,
        O_d0,
        zext_ln175,
        zext_ln151_2,
        I_0_0_address0,
        I_0_0_ce0,
        I_0_0_q0,
        I_0_0_address1,
        I_0_0_ce1,
        I_0_0_q1,
        zext_ln151_3,
        I_0_1_address0,
        I_0_1_ce0,
        I_0_1_q0,
        I_0_1_address1,
        I_0_1_ce1,
        I_0_1_q1,
        I_1_0_address0,
        I_1_0_ce0,
        I_1_0_q0,
        I_1_0_address1,
        I_1_0_ce1,
        I_1_0_q1,
        I_1_1_address0,
        I_1_1_ce0,
        I_1_1_q0,
        I_1_1_address1,
        I_1_1_ce1,
        I_1_1_q1,
        y_cast,
        or_ln112,
        empty,
        mul
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] zext_ln541;
input  [31:0] sext_ln178;
output  [11:0] O_address0;
output   O_ce0;
output   O_we0;
output  [31:0] O_d0;
input  [7:0] zext_ln175;
input  [9:0] zext_ln151_2;
output  [9:0] I_0_0_address0;
output   I_0_0_ce0;
input  [31:0] I_0_0_q0;
output  [9:0] I_0_0_address1;
output   I_0_0_ce1;
input  [31:0] I_0_0_q1;
input  [9:0] zext_ln151_3;
output  [9:0] I_0_1_address0;
output   I_0_1_ce0;
input  [31:0] I_0_1_q0;
output  [9:0] I_0_1_address1;
output   I_0_1_ce1;
input  [31:0] I_0_1_q1;
output  [9:0] I_1_0_address0;
output   I_1_0_ce0;
input  [31:0] I_1_0_q0;
output  [9:0] I_1_0_address1;
output   I_1_0_ce1;
input  [31:0] I_1_0_q1;
output  [9:0] I_1_1_address0;
output   I_1_1_ce0;
input  [31:0] I_1_1_q0;
output  [9:0] I_1_1_address1;
output   I_1_1_ce1;
input  [31:0] I_1_1_q1;
input  [0:0] y_cast;
input  [0:0] or_ln112;
input  [0:0] empty;
input  [15:0] mul;

reg ap_idle;
reg O_ce0;
reg O_we0;
reg[9:0] I_0_0_address0;
reg I_0_0_ce0;
reg[9:0] I_0_0_address1;
reg I_0_0_ce1;
reg[9:0] I_0_1_address0;
reg I_0_1_ce0;
reg[9:0] I_0_1_address1;
reg I_0_1_ce1;
reg[9:0] I_1_0_address0;
reg I_1_0_ce0;
reg[9:0] I_1_0_address1;
reg I_1_0_ce1;
reg[9:0] I_1_1_address0;
reg I_1_1_ce0;
reg[9:0] I_1_1_address1;
reg I_1_1_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1027_fu_443_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_4_reg_1352;
wire   [0:0] or_ln112_read_reg_1360;
wire   [0:0] y_cast_read_reg_1372;
wire   [63:0] zext_ln175_cast_fu_418_p1;
reg   [63:0] zext_ln175_cast_reg_1392;
reg   [0:0] icmp_ln1027_reg_1397;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter2_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter7_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter8_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter9_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter10_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter11_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter12_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter13_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter14_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter15_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter16_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter17_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter18_reg;
reg   [0:0] icmp_ln1027_reg_1397_pp0_iter19_reg;
wire   [0:0] trunc_ln188_fu_452_p1;
reg   [0:0] trunc_ln188_reg_1401;
reg   [0:0] trunc_ln188_reg_1401_pp0_iter2_reg;
reg   [9:0] lshr_ln_reg_1414;
reg   [9:0] lshr_ln151_5_reg_1420;
wire   [15:0] arg_assign_fu_615_p4;
reg   [15:0] arg_assign_reg_1506;
reg   [15:0] arg_assign_reg_1506_pp0_iter4_reg;
wire   [15:0] arg_assign_1_fu_674_p4;
reg   [15:0] arg_assign_1_reg_1513;
reg   [15:0] arg_assign_1_reg_1513_pp0_iter4_reg;
wire   [15:0] arg_assign_0_1_fu_764_p4;
reg   [15:0] arg_assign_0_1_reg_1520;
reg   [15:0] arg_assign_0_1_reg_1520_pp0_iter4_reg;
wire   [15:0] arg_assign_1_0_1_fu_825_p4;
reg   [15:0] arg_assign_1_0_1_reg_1527;
reg   [15:0] arg_assign_1_0_1_reg_1527_pp0_iter4_reg;
wire   [15:0] arg_assign_s_fu_908_p4;
reg   [15:0] arg_assign_s_reg_1534;
reg   [15:0] arg_assign_s_reg_1534_pp0_iter4_reg;
wire   [15:0] arg_assign_1_1_fu_967_p4;
reg   [15:0] arg_assign_1_1_reg_1541;
reg   [15:0] arg_assign_1_1_reg_1541_pp0_iter4_reg;
wire   [15:0] arg_assign_17_1_fu_1052_p4;
reg   [15:0] arg_assign_17_1_reg_1548;
reg   [15:0] arg_assign_17_1_reg_1548_pp0_iter4_reg;
wire   [15:0] arg_assign_1_1_1_fu_1113_p4;
reg   [15:0] arg_assign_1_1_1_reg_1555;
reg   [15:0] arg_assign_1_1_1_reg_1555_pp0_iter4_reg;
wire   [15:0] select_ln112_fu_1136_p3;
reg   [15:0] select_ln112_reg_1562;
reg   [15:0] select_ln112_reg_1562_pp0_iter6_reg;
wire   [15:0] select_ln112_1_fu_1142_p3;
reg   [15:0] select_ln112_1_reg_1568;
reg   [15:0] select_ln112_1_reg_1568_pp0_iter6_reg;
wire   [15:0] select_ln112_2_fu_1162_p3;
reg   [15:0] select_ln112_2_reg_1574;
reg   [15:0] select_ln112_2_reg_1574_pp0_iter6_reg;
reg   [15:0] select_ln112_2_reg_1574_pp0_iter7_reg;
reg   [15:0] select_ln112_2_reg_1574_pp0_iter8_reg;
wire   [15:0] select_ln112_3_fu_1168_p3;
reg   [15:0] select_ln112_3_reg_1580;
reg   [15:0] select_ln112_3_reg_1580_pp0_iter6_reg;
reg   [15:0] select_ln112_3_reg_1580_pp0_iter7_reg;
reg   [15:0] select_ln112_3_reg_1580_pp0_iter8_reg;
wire   [15:0] select_ln112_4_fu_1188_p3;
reg   [15:0] select_ln112_4_reg_1586;
reg   [15:0] select_ln112_4_reg_1586_pp0_iter6_reg;
reg   [15:0] select_ln112_4_reg_1586_pp0_iter7_reg;
reg   [15:0] select_ln112_4_reg_1586_pp0_iter8_reg;
reg   [15:0] select_ln112_4_reg_1586_pp0_iter9_reg;
reg   [15:0] select_ln112_4_reg_1586_pp0_iter10_reg;
wire   [15:0] select_ln112_5_fu_1194_p3;
reg   [15:0] select_ln112_5_reg_1592;
reg   [15:0] select_ln112_5_reg_1592_pp0_iter6_reg;
reg   [15:0] select_ln112_5_reg_1592_pp0_iter7_reg;
reg   [15:0] select_ln112_5_reg_1592_pp0_iter8_reg;
reg   [15:0] select_ln112_5_reg_1592_pp0_iter9_reg;
reg   [15:0] select_ln112_5_reg_1592_pp0_iter10_reg;
wire   [15:0] select_ln112_6_fu_1214_p3;
reg   [15:0] select_ln112_6_reg_1598;
reg   [15:0] select_ln112_6_reg_1598_pp0_iter6_reg;
reg   [15:0] select_ln112_6_reg_1598_pp0_iter7_reg;
reg   [15:0] select_ln112_6_reg_1598_pp0_iter8_reg;
reg   [15:0] select_ln112_6_reg_1598_pp0_iter9_reg;
reg   [15:0] select_ln112_6_reg_1598_pp0_iter10_reg;
reg   [15:0] select_ln112_6_reg_1598_pp0_iter11_reg;
reg   [15:0] select_ln112_6_reg_1598_pp0_iter12_reg;
wire   [15:0] select_ln112_7_fu_1220_p3;
reg   [15:0] select_ln112_7_reg_1604;
reg   [15:0] select_ln112_7_reg_1604_pp0_iter6_reg;
reg   [15:0] select_ln112_7_reg_1604_pp0_iter7_reg;
reg   [15:0] select_ln112_7_reg_1604_pp0_iter8_reg;
reg   [15:0] select_ln112_7_reg_1604_pp0_iter9_reg;
reg   [15:0] select_ln112_7_reg_1604_pp0_iter10_reg;
reg   [15:0] select_ln112_7_reg_1604_pp0_iter11_reg;
reg   [15:0] select_ln112_7_reg_1604_pp0_iter12_reg;
wire   [15:0] select_ln189_fu_1226_p3;
reg   [15:0] select_ln189_reg_1610;
reg   [15:0] select_ln189_reg_1610_pp0_iter8_reg;
wire   [15:0] select_ln191_fu_1233_p3;
reg   [15:0] select_ln191_reg_1616;
reg   [15:0] select_ln191_reg_1616_pp0_iter8_reg;
wire   [15:0] select_ln189_1_fu_1240_p3;
reg   [15:0] select_ln189_1_reg_1622;
reg   [15:0] select_ln189_1_reg_1622_pp0_iter10_reg;
wire   [15:0] select_ln191_1_fu_1246_p3;
reg   [15:0] select_ln191_1_reg_1628;
reg   [15:0] select_ln191_1_reg_1628_pp0_iter10_reg;
wire   [15:0] select_ln189_2_fu_1252_p3;
reg   [15:0] select_ln189_2_reg_1634;
reg   [15:0] select_ln189_2_reg_1634_pp0_iter12_reg;
wire   [15:0] select_ln191_2_fu_1258_p3;
reg   [15:0] select_ln191_2_reg_1640;
reg   [15:0] select_ln191_2_reg_1640_pp0_iter12_reg;
wire   [15:0] select_ln189_3_fu_1264_p3;
reg   [15:0] select_ln189_3_reg_1646;
wire   [15:0] select_ln191_3_fu_1270_p3;
reg   [15:0] select_ln191_3_reg_1651;
reg   [11:0] O_addr_reg_1656;
wire   [15:0] grp_fu_336_p2;
reg   [15:0] div_reg_1661;
wire   [15:0] grp_fu_340_p2;
reg   [15:0] div1_reg_1666;
reg    ap_condition_exit_pp0_iter20_stage0;
wire   [63:0] zext_ln151_fu_497_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln151_1_fu_509_p1;
wire   [63:0] zext_ln151_4_fu_521_p1;
wire   [63:0] zext_ln151_5_fu_533_p1;
wire   [63:0] zext_ln196_fu_1301_p1;
reg   [63:0] x1_fu_98;
wire   [63:0] add_ln196_fu_1306_p2;
wire  signed [63:0] sext_ln178_cast_fu_422_p1;
wire    ap_loop_init;
reg   [63:0] x_fu_102;
wire   [63:0] add_ln178_fu_482_p2;
wire   [63:0] zext_ln541_cast_fu_426_p1;
wire   [10:0] empty_64_fu_448_p1;
wire   [10:0] add_ln188_fu_466_p2;
wire   [9:0] add_ln151_fu_493_p2;
wire   [9:0] add_ln151_1_fu_505_p2;
wire   [9:0] add_ln151_2_fu_517_p2;
wire   [9:0] add_ln151_3_fu_529_p2;
wire   [15:0] trunc_ln8_fu_541_p4;
wire   [15:0] trunc_ln151_1_fu_555_p4;
wire   [15:0] tmp_fu_569_p1;
wire   [15:0] tmp_fu_569_p2;
wire   [15:0] trunc_ln151_2_fu_578_p4;
wire   [15:0] trunc_ln151_3_fu_592_p4;
wire   [15:0] tmp_s_fu_606_p1;
wire   [15:0] tmp_s_fu_606_p2;
wire   [15:0] tmp_fu_569_p4;
wire   [15:0] tmp_s_fu_606_p4;
wire   [15:0] trunc_ln147_fu_624_p1;
wire   [15:0] trunc_ln147_1_fu_632_p1;
wire   [15:0] tmp_2_fu_640_p1;
wire   [15:0] tmp_2_fu_640_p2;
wire   [15:0] trunc_ln147_2_fu_649_p1;
wire   [15:0] trunc_ln147_3_fu_657_p1;
wire   [15:0] tmp_3_fu_665_p1;
wire   [15:0] tmp_3_fu_665_p2;
wire   [15:0] tmp_2_fu_640_p4;
wire   [15:0] tmp_3_fu_665_p4;
wire   [15:0] trunc_ln151_4_fu_688_p4;
wire   [15:0] trunc_ln151_5_fu_702_p4;
wire   [15:0] tmp_0_1_fu_716_p1;
wire   [15:0] tmp_0_1_fu_716_p2;
wire   [0:0] xor_ln151_fu_683_p2;
wire   [15:0] trunc_ln151_6_fu_726_p4;
wire   [15:0] trunc_ln151_7_fu_740_p4;
wire   [15:0] tmp_0_1_65_fu_754_p1;
wire   [15:0] tmp_0_1_65_fu_754_p2;
wire   [15:0] tmp_0_1_fu_716_p4;
wire   [15:0] tmp_0_1_65_fu_754_p4;
wire   [15:0] trunc_ln147_4_fu_773_p1;
wire   [15:0] trunc_ln147_5_fu_781_p1;
wire   [15:0] tmp_35_0_1_fu_789_p1;
wire   [15:0] tmp_35_0_1_fu_789_p2;
wire   [15:0] trunc_ln147_6_fu_799_p1;
wire   [15:0] trunc_ln147_7_fu_807_p1;
wire   [15:0] tmp_36_0_1_fu_815_p1;
wire   [15:0] tmp_36_0_1_fu_815_p2;
wire   [15:0] tmp_35_0_1_fu_789_p4;
wire   [15:0] tmp_36_0_1_fu_815_p4;
wire   [15:0] trunc_ln151_8_fu_834_p4;
wire   [15:0] trunc_ln151_9_fu_848_p4;
wire   [15:0] tmp_1_fu_862_p1;
wire   [15:0] tmp_1_fu_862_p2;
wire   [15:0] trunc_ln151_s_fu_871_p4;
wire   [15:0] trunc_ln151_10_fu_885_p4;
wire   [15:0] tmp_1_66_fu_899_p1;
wire   [15:0] tmp_1_66_fu_899_p2;
wire   [15:0] tmp_1_fu_862_p4;
wire   [15:0] tmp_1_66_fu_899_p4;
wire   [15:0] trunc_ln147_8_fu_917_p1;
wire   [15:0] trunc_ln147_9_fu_925_p1;
wire   [15:0] tmp_35_1_fu_933_p1;
wire   [15:0] tmp_35_1_fu_933_p2;
wire   [15:0] trunc_ln147_10_fu_942_p1;
wire   [15:0] trunc_ln147_11_fu_950_p1;
wire   [15:0] tmp_36_1_fu_958_p1;
wire   [15:0] tmp_36_1_fu_958_p2;
wire   [15:0] tmp_35_1_fu_933_p4;
wire   [15:0] tmp_36_1_fu_958_p4;
wire   [15:0] trunc_ln151_11_fu_976_p4;
wire   [15:0] trunc_ln151_12_fu_990_p4;
wire   [15:0] tmp_1_1_fu_1004_p1;
wire   [15:0] tmp_1_1_fu_1004_p2;
wire   [15:0] trunc_ln151_13_fu_1014_p4;
wire   [15:0] trunc_ln151_14_fu_1028_p4;
wire   [15:0] tmp_1_1_67_fu_1042_p1;
wire   [15:0] tmp_1_1_67_fu_1042_p2;
wire   [15:0] tmp_1_1_fu_1004_p4;
wire   [15:0] tmp_1_1_67_fu_1042_p4;
wire   [15:0] trunc_ln147_12_fu_1061_p1;
wire   [15:0] trunc_ln147_13_fu_1069_p1;
wire   [15:0] tmp_35_1_1_fu_1077_p1;
wire   [15:0] tmp_35_1_1_fu_1077_p2;
wire   [15:0] trunc_ln147_14_fu_1087_p1;
wire   [15:0] trunc_ln147_15_fu_1095_p1;
wire   [15:0] tmp_36_1_1_fu_1103_p1;
wire   [15:0] tmp_36_1_1_fu_1103_p2;
wire   [15:0] tmp_35_1_1_fu_1077_p4;
wire   [15:0] tmp_36_1_1_fu_1103_p4;
wire   [0:0] grp_fu_344_p2;
wire   [0:0] grp_fu_349_p2;
wire   [15:0] select_ln116_fu_1122_p3;
wire   [15:0] select_ln116_1_fu_1129_p3;
wire   [0:0] grp_fu_354_p2;
wire   [0:0] grp_fu_359_p2;
wire   [15:0] select_ln116_2_fu_1148_p3;
wire   [15:0] select_ln116_3_fu_1155_p3;
wire   [0:0] grp_fu_364_p2;
wire   [0:0] grp_fu_369_p2;
wire   [15:0] select_ln116_4_fu_1174_p3;
wire   [15:0] select_ln116_5_fu_1181_p3;
wire   [0:0] grp_fu_374_p2;
wire   [0:0] grp_fu_379_p2;
wire   [15:0] select_ln116_6_fu_1200_p3;
wire   [15:0] select_ln116_7_fu_1207_p3;
wire   [0:0] grp_fu_384_p2;
wire   [0:0] grp_fu_389_p2;
wire   [0:0] grp_fu_394_p2;
wire   [0:0] grp_fu_398_p2;
wire   [0:0] grp_fu_402_p2;
wire   [0:0] grp_fu_406_p2;
wire   [0:0] grp_fu_410_p2;
wire   [0:0] grp_fu_414_p2;
wire   [5:0] trunc_ln196_1_fu_1283_p1;
wire   [11:0] tmp_5_fu_1287_p3;
wire   [11:0] trunc_ln196_fu_1279_p1;
wire   [11:0] add_ln196_1_fu_1295_p2;
wire   [15:0] bitcast_ln196_1_fu_1320_p1;
wire   [15:0] bitcast_ln196_fu_1317_p1;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1315;
reg    ap_condition_1318;
reg    ap_condition_1321;
reg    ap_condition_1324;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_done_reg = 1'b0;
end

IFFT_AP_hdiv_16ns_16ns_16_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hdiv_16ns_16ns_16_7_no_dsp_1_U241(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln189_3_reg_1646),
    .din1(mul),
    .ce(1'b1),
    .dout(grp_fu_336_p2)
);

IFFT_AP_hdiv_16ns_16ns_16_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
hdiv_16ns_16ns_16_7_no_dsp_1_U242(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln191_3_reg_1651),
    .din1(mul),
    .ce(1'b1),
    .dout(grp_fu_340_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U243(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arg_assign_reg_1506),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_344_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U244(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arg_assign_1_reg_1513),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_349_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U245(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arg_assign_0_1_reg_1520),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_354_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U246(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arg_assign_1_0_1_reg_1527),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_359_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U247(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arg_assign_s_reg_1534),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_364_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U248(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arg_assign_1_1_reg_1541),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_369_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U249(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arg_assign_17_1_reg_1548),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_374_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U250(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(arg_assign_1_1_1_reg_1555),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_379_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U251(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln112_reg_1562),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_384_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U252(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln112_1_reg_1568),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_389_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U253(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln112_2_reg_1574_pp0_iter7_reg),
    .din1(select_ln189_reg_1610),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_394_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U254(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln112_3_reg_1580_pp0_iter7_reg),
    .din1(select_ln191_reg_1616),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_398_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U255(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln112_4_reg_1586_pp0_iter9_reg),
    .din1(select_ln189_1_reg_1622),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_402_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U256(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln112_5_reg_1592_pp0_iter9_reg),
    .din1(select_ln191_1_reg_1628),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_406_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U257(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln112_6_reg_1598_pp0_iter11_reg),
    .din1(select_ln189_2_reg_1634),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_410_p2)
);

IFFT_AP_hcmp_16ns_16ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
hcmp_16ns_16ns_1_2_no_dsp_1_U258(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln112_7_reg_1604_pp0_iter11_reg),
    .din1(select_ln191_2_reg_1640),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_414_p2)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U259(
    .din0(tmp_fu_569_p1),
    .din1(tmp_fu_569_p2),
    .din2(trunc_ln188_reg_1401_pp0_iter2_reg),
    .dout(tmp_fu_569_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U260(
    .din0(tmp_s_fu_606_p1),
    .din1(tmp_s_fu_606_p2),
    .din2(trunc_ln188_reg_1401_pp0_iter2_reg),
    .dout(tmp_s_fu_606_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U261(
    .din0(tmp_fu_569_p4),
    .din1(tmp_s_fu_606_p4),
    .din2(y_cast),
    .dout(arg_assign_fu_615_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U262(
    .din0(tmp_2_fu_640_p1),
    .din1(tmp_2_fu_640_p2),
    .din2(trunc_ln188_reg_1401_pp0_iter2_reg),
    .dout(tmp_2_fu_640_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U263(
    .din0(tmp_3_fu_665_p1),
    .din1(tmp_3_fu_665_p2),
    .din2(trunc_ln188_reg_1401_pp0_iter2_reg),
    .dout(tmp_3_fu_665_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U264(
    .din0(tmp_2_fu_640_p4),
    .din1(tmp_3_fu_665_p4),
    .din2(y_cast),
    .dout(arg_assign_1_fu_674_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U265(
    .din0(tmp_0_1_fu_716_p1),
    .din1(tmp_0_1_fu_716_p2),
    .din2(xor_ln151_fu_683_p2),
    .dout(tmp_0_1_fu_716_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U266(
    .din0(tmp_0_1_65_fu_754_p1),
    .din1(tmp_0_1_65_fu_754_p2),
    .din2(xor_ln151_fu_683_p2),
    .dout(tmp_0_1_65_fu_754_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U267(
    .din0(tmp_0_1_fu_716_p4),
    .din1(tmp_0_1_65_fu_754_p4),
    .din2(y_cast),
    .dout(arg_assign_0_1_fu_764_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U268(
    .din0(tmp_35_0_1_fu_789_p1),
    .din1(tmp_35_0_1_fu_789_p2),
    .din2(xor_ln151_fu_683_p2),
    .dout(tmp_35_0_1_fu_789_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U269(
    .din0(tmp_36_0_1_fu_815_p1),
    .din1(tmp_36_0_1_fu_815_p2),
    .din2(xor_ln151_fu_683_p2),
    .dout(tmp_36_0_1_fu_815_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U270(
    .din0(tmp_35_0_1_fu_789_p4),
    .din1(tmp_36_0_1_fu_815_p4),
    .din2(y_cast),
    .dout(arg_assign_1_0_1_fu_825_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U271(
    .din0(tmp_1_fu_862_p1),
    .din1(tmp_1_fu_862_p2),
    .din2(trunc_ln188_reg_1401_pp0_iter2_reg),
    .dout(tmp_1_fu_862_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U272(
    .din0(tmp_1_66_fu_899_p1),
    .din1(tmp_1_66_fu_899_p2),
    .din2(trunc_ln188_reg_1401_pp0_iter2_reg),
    .dout(tmp_1_66_fu_899_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U273(
    .din0(tmp_1_fu_862_p4),
    .din1(tmp_1_66_fu_899_p4),
    .din2(empty),
    .dout(arg_assign_s_fu_908_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U274(
    .din0(tmp_35_1_fu_933_p1),
    .din1(tmp_35_1_fu_933_p2),
    .din2(trunc_ln188_reg_1401_pp0_iter2_reg),
    .dout(tmp_35_1_fu_933_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U275(
    .din0(tmp_36_1_fu_958_p1),
    .din1(tmp_36_1_fu_958_p2),
    .din2(trunc_ln188_reg_1401_pp0_iter2_reg),
    .dout(tmp_36_1_fu_958_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U276(
    .din0(tmp_35_1_fu_933_p4),
    .din1(tmp_36_1_fu_958_p4),
    .din2(empty),
    .dout(arg_assign_1_1_fu_967_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U277(
    .din0(tmp_1_1_fu_1004_p1),
    .din1(tmp_1_1_fu_1004_p2),
    .din2(xor_ln151_fu_683_p2),
    .dout(tmp_1_1_fu_1004_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U278(
    .din0(tmp_1_1_67_fu_1042_p1),
    .din1(tmp_1_1_67_fu_1042_p2),
    .din2(xor_ln151_fu_683_p2),
    .dout(tmp_1_1_67_fu_1042_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U279(
    .din0(tmp_1_1_fu_1004_p4),
    .din1(tmp_1_1_67_fu_1042_p4),
    .din2(empty),
    .dout(arg_assign_17_1_fu_1052_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U280(
    .din0(tmp_35_1_1_fu_1077_p1),
    .din1(tmp_35_1_1_fu_1077_p2),
    .din2(xor_ln151_fu_683_p2),
    .dout(tmp_35_1_1_fu_1077_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U281(
    .din0(tmp_36_1_1_fu_1103_p1),
    .din1(tmp_36_1_1_fu_1103_p2),
    .din2(xor_ln151_fu_683_p2),
    .dout(tmp_36_1_1_fu_1103_p4)
);

IFFT_AP_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U282(
    .din0(tmp_35_1_1_fu_1077_p4),
    .din1(tmp_36_1_1_fu_1103_p4),
    .din2(empty),
    .dout(arg_assign_1_1_1_fu_1113_p4)
);

IFFT_AP_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter20_stage0)) begin
            ap_enable_reg_pp0_iter21 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            x1_fu_98 <= sext_ln178_cast_fu_422_p1;
        end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln1027_reg_1397_pp0_iter19_reg == 1'd1))) begin
            x1_fu_98 <= add_ln196_fu_1306_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            x_fu_102 <= zext_ln541_cast_fu_426_p1;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_fu_443_p2 == 1'd1))) begin
            x_fu_102 <= add_ln178_fu_482_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        O_addr_reg_1656 <= zext_ln196_fu_1301_p1;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        arg_assign_0_1_reg_1520_pp0_iter4_reg <= arg_assign_0_1_reg_1520;
        arg_assign_17_1_reg_1548_pp0_iter4_reg <= arg_assign_17_1_reg_1548;
        arg_assign_1_0_1_reg_1527_pp0_iter4_reg <= arg_assign_1_0_1_reg_1527;
        arg_assign_1_1_1_reg_1555_pp0_iter4_reg <= arg_assign_1_1_1_reg_1555;
        arg_assign_1_1_reg_1541_pp0_iter4_reg <= arg_assign_1_1_reg_1541;
        arg_assign_1_reg_1513_pp0_iter4_reg <= arg_assign_1_reg_1513;
        arg_assign_reg_1506_pp0_iter4_reg <= arg_assign_reg_1506;
        arg_assign_s_reg_1534_pp0_iter4_reg <= arg_assign_s_reg_1534;
        icmp_ln1027_reg_1397_pp0_iter10_reg <= icmp_ln1027_reg_1397_pp0_iter9_reg;
        icmp_ln1027_reg_1397_pp0_iter11_reg <= icmp_ln1027_reg_1397_pp0_iter10_reg;
        icmp_ln1027_reg_1397_pp0_iter12_reg <= icmp_ln1027_reg_1397_pp0_iter11_reg;
        icmp_ln1027_reg_1397_pp0_iter13_reg <= icmp_ln1027_reg_1397_pp0_iter12_reg;
        icmp_ln1027_reg_1397_pp0_iter14_reg <= icmp_ln1027_reg_1397_pp0_iter13_reg;
        icmp_ln1027_reg_1397_pp0_iter15_reg <= icmp_ln1027_reg_1397_pp0_iter14_reg;
        icmp_ln1027_reg_1397_pp0_iter16_reg <= icmp_ln1027_reg_1397_pp0_iter15_reg;
        icmp_ln1027_reg_1397_pp0_iter17_reg <= icmp_ln1027_reg_1397_pp0_iter16_reg;
        icmp_ln1027_reg_1397_pp0_iter18_reg <= icmp_ln1027_reg_1397_pp0_iter17_reg;
        icmp_ln1027_reg_1397_pp0_iter19_reg <= icmp_ln1027_reg_1397_pp0_iter18_reg;
        icmp_ln1027_reg_1397_pp0_iter2_reg <= icmp_ln1027_reg_1397;
        icmp_ln1027_reg_1397_pp0_iter3_reg <= icmp_ln1027_reg_1397_pp0_iter2_reg;
        icmp_ln1027_reg_1397_pp0_iter4_reg <= icmp_ln1027_reg_1397_pp0_iter3_reg;
        icmp_ln1027_reg_1397_pp0_iter5_reg <= icmp_ln1027_reg_1397_pp0_iter4_reg;
        icmp_ln1027_reg_1397_pp0_iter6_reg <= icmp_ln1027_reg_1397_pp0_iter5_reg;
        icmp_ln1027_reg_1397_pp0_iter7_reg <= icmp_ln1027_reg_1397_pp0_iter6_reg;
        icmp_ln1027_reg_1397_pp0_iter8_reg <= icmp_ln1027_reg_1397_pp0_iter7_reg;
        icmp_ln1027_reg_1397_pp0_iter9_reg <= icmp_ln1027_reg_1397_pp0_iter8_reg;
        select_ln112_1_reg_1568_pp0_iter6_reg <= select_ln112_1_reg_1568;
        select_ln112_2_reg_1574_pp0_iter6_reg <= select_ln112_2_reg_1574;
        select_ln112_2_reg_1574_pp0_iter7_reg <= select_ln112_2_reg_1574_pp0_iter6_reg;
        select_ln112_2_reg_1574_pp0_iter8_reg <= select_ln112_2_reg_1574_pp0_iter7_reg;
        select_ln112_3_reg_1580_pp0_iter6_reg <= select_ln112_3_reg_1580;
        select_ln112_3_reg_1580_pp0_iter7_reg <= select_ln112_3_reg_1580_pp0_iter6_reg;
        select_ln112_3_reg_1580_pp0_iter8_reg <= select_ln112_3_reg_1580_pp0_iter7_reg;
        select_ln112_4_reg_1586_pp0_iter10_reg <= select_ln112_4_reg_1586_pp0_iter9_reg;
        select_ln112_4_reg_1586_pp0_iter6_reg <= select_ln112_4_reg_1586;
        select_ln112_4_reg_1586_pp0_iter7_reg <= select_ln112_4_reg_1586_pp0_iter6_reg;
        select_ln112_4_reg_1586_pp0_iter8_reg <= select_ln112_4_reg_1586_pp0_iter7_reg;
        select_ln112_4_reg_1586_pp0_iter9_reg <= select_ln112_4_reg_1586_pp0_iter8_reg;
        select_ln112_5_reg_1592_pp0_iter10_reg <= select_ln112_5_reg_1592_pp0_iter9_reg;
        select_ln112_5_reg_1592_pp0_iter6_reg <= select_ln112_5_reg_1592;
        select_ln112_5_reg_1592_pp0_iter7_reg <= select_ln112_5_reg_1592_pp0_iter6_reg;
        select_ln112_5_reg_1592_pp0_iter8_reg <= select_ln112_5_reg_1592_pp0_iter7_reg;
        select_ln112_5_reg_1592_pp0_iter9_reg <= select_ln112_5_reg_1592_pp0_iter8_reg;
        select_ln112_6_reg_1598_pp0_iter10_reg <= select_ln112_6_reg_1598_pp0_iter9_reg;
        select_ln112_6_reg_1598_pp0_iter11_reg <= select_ln112_6_reg_1598_pp0_iter10_reg;
        select_ln112_6_reg_1598_pp0_iter12_reg <= select_ln112_6_reg_1598_pp0_iter11_reg;
        select_ln112_6_reg_1598_pp0_iter6_reg <= select_ln112_6_reg_1598;
        select_ln112_6_reg_1598_pp0_iter7_reg <= select_ln112_6_reg_1598_pp0_iter6_reg;
        select_ln112_6_reg_1598_pp0_iter8_reg <= select_ln112_6_reg_1598_pp0_iter7_reg;
        select_ln112_6_reg_1598_pp0_iter9_reg <= select_ln112_6_reg_1598_pp0_iter8_reg;
        select_ln112_7_reg_1604_pp0_iter10_reg <= select_ln112_7_reg_1604_pp0_iter9_reg;
        select_ln112_7_reg_1604_pp0_iter11_reg <= select_ln112_7_reg_1604_pp0_iter10_reg;
        select_ln112_7_reg_1604_pp0_iter12_reg <= select_ln112_7_reg_1604_pp0_iter11_reg;
        select_ln112_7_reg_1604_pp0_iter6_reg <= select_ln112_7_reg_1604;
        select_ln112_7_reg_1604_pp0_iter7_reg <= select_ln112_7_reg_1604_pp0_iter6_reg;
        select_ln112_7_reg_1604_pp0_iter8_reg <= select_ln112_7_reg_1604_pp0_iter7_reg;
        select_ln112_7_reg_1604_pp0_iter9_reg <= select_ln112_7_reg_1604_pp0_iter8_reg;
        select_ln112_reg_1562_pp0_iter6_reg <= select_ln112_reg_1562;
        select_ln189_1_reg_1622_pp0_iter10_reg <= select_ln189_1_reg_1622;
        select_ln189_2_reg_1634_pp0_iter12_reg <= select_ln189_2_reg_1634;
        select_ln189_reg_1610_pp0_iter8_reg <= select_ln189_reg_1610;
        select_ln191_1_reg_1628_pp0_iter10_reg <= select_ln191_1_reg_1628;
        select_ln191_2_reg_1640_pp0_iter12_reg <= select_ln191_2_reg_1640;
        select_ln191_reg_1616_pp0_iter8_reg <= select_ln191_reg_1616;
        trunc_ln188_reg_1401_pp0_iter2_reg <= trunc_ln188_reg_1401;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln1027_reg_1397 <= icmp_ln1027_fu_443_p2;
        zext_ln175_cast_reg_1392[7 : 0] <= zext_ln175_cast_fu_418_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1397_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arg_assign_0_1_reg_1520 <= arg_assign_0_1_fu_764_p4;
        arg_assign_17_1_reg_1548 <= arg_assign_17_1_fu_1052_p4;
        arg_assign_1_0_1_reg_1527 <= arg_assign_1_0_1_fu_825_p4;
        arg_assign_1_1_1_reg_1555 <= arg_assign_1_1_1_fu_1113_p4;
        arg_assign_1_1_reg_1541 <= arg_assign_1_1_fu_967_p4;
        arg_assign_1_reg_1513 <= arg_assign_1_fu_674_p4;
        arg_assign_reg_1506 <= arg_assign_fu_615_p4;
        arg_assign_s_reg_1534 <= arg_assign_s_fu_908_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1397_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        div1_reg_1666 <= grp_fu_340_p2;
        div_reg_1661 <= grp_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_fu_443_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln151_5_reg_1420 <= {{add_ln188_fu_466_p2[10:1]}};
        lshr_ln_reg_1414 <= {{x_fu_102[10:1]}};
        trunc_ln188_reg_1401 <= trunc_ln188_fu_452_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1397_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln112_1_reg_1568 <= select_ln112_1_fu_1142_p3;
        select_ln112_2_reg_1574 <= select_ln112_2_fu_1162_p3;
        select_ln112_3_reg_1580 <= select_ln112_3_fu_1168_p3;
        select_ln112_4_reg_1586 <= select_ln112_4_fu_1188_p3;
        select_ln112_5_reg_1592 <= select_ln112_5_fu_1194_p3;
        select_ln112_6_reg_1598 <= select_ln112_6_fu_1214_p3;
        select_ln112_7_reg_1604 <= select_ln112_7_fu_1220_p3;
        select_ln112_reg_1562 <= select_ln112_fu_1136_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1397_pp0_iter8_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln189_1_reg_1622 <= select_ln189_1_fu_1240_p3;
        select_ln191_1_reg_1628 <= select_ln191_1_fu_1246_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1397_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln189_2_reg_1634 <= select_ln189_2_fu_1252_p3;
        select_ln191_2_reg_1640 <= select_ln191_2_fu_1258_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1397_pp0_iter12_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln189_3_reg_1646 <= select_ln189_3_fu_1264_p3;
        select_ln191_3_reg_1651 <= select_ln191_3_fu_1270_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1397_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln189_reg_1610 <= select_ln189_fu_1226_p3;
        select_ln191_reg_1616 <= select_ln191_fu_1233_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1315)) begin
        if ((trunc_ln188_reg_1401 == 1'd1)) begin
            I_0_0_address0 = zext_ln151_5_fu_533_p1;
        end else if ((trunc_ln188_reg_1401 == 1'd0)) begin
            I_0_0_address0 = zext_ln151_1_fu_509_p1;
        end else begin
            I_0_0_address0 = 'bx;
        end
    end else begin
        I_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1318)) begin
        if ((trunc_ln188_reg_1401 == 1'd1)) begin
            I_0_0_address1 = zext_ln151_4_fu_521_p1;
        end else if ((trunc_ln188_reg_1401 == 1'd0)) begin
            I_0_0_address1 = zext_ln151_fu_497_p1;
        end else begin
            I_0_0_address1 = 'bx;
        end
    end else begin
        I_0_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln188_reg_1401 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (tmp_4_reg_1352 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((trunc_ln188_reg_1401 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (tmp_4_reg_1352 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        I_0_0_ce0 = 1'b1;
    end else begin
        I_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln188_reg_1401 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (y_cast_read_reg_1372 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((trunc_ln188_reg_1401 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (y_cast_read_reg_1372 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        I_0_0_ce1 = 1'b1;
    end else begin
        I_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1315)) begin
        if ((trunc_ln188_reg_1401 == 1'd0)) begin
            I_0_1_address0 = zext_ln151_5_fu_533_p1;
        end else if ((trunc_ln188_reg_1401 == 1'd1)) begin
            I_0_1_address0 = zext_ln151_1_fu_509_p1;
        end else begin
            I_0_1_address0 = 'bx;
        end
    end else begin
        I_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1318)) begin
        if ((trunc_ln188_reg_1401 == 1'd0)) begin
            I_0_1_address1 = zext_ln151_4_fu_521_p1;
        end else if ((trunc_ln188_reg_1401 == 1'd1)) begin
            I_0_1_address1 = zext_ln151_fu_497_p1;
        end else begin
            I_0_1_address1 = 'bx;
        end
    end else begin
        I_0_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln188_reg_1401 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (tmp_4_reg_1352 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((trunc_ln188_reg_1401 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (tmp_4_reg_1352 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        I_0_1_ce0 = 1'b1;
    end else begin
        I_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln188_reg_1401 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (y_cast_read_reg_1372 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((trunc_ln188_reg_1401 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (y_cast_read_reg_1372 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        I_0_1_ce1 = 1'b1;
    end else begin
        I_0_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1321)) begin
        if ((trunc_ln188_reg_1401 == 1'd1)) begin
            I_1_0_address0 = zext_ln151_5_fu_533_p1;
        end else if ((trunc_ln188_reg_1401 == 1'd0)) begin
            I_1_0_address0 = zext_ln151_1_fu_509_p1;
        end else begin
            I_1_0_address0 = 'bx;
        end
    end else begin
        I_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1324)) begin
        if ((trunc_ln188_reg_1401 == 1'd1)) begin
            I_1_0_address1 = zext_ln151_4_fu_521_p1;
        end else if ((trunc_ln188_reg_1401 == 1'd0)) begin
            I_1_0_address1 = zext_ln151_fu_497_p1;
        end else begin
            I_1_0_address1 = 'bx;
        end
    end else begin
        I_1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln188_reg_1401 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (tmp_4_reg_1352 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((trunc_ln188_reg_1401 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (tmp_4_reg_1352 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        I_1_0_ce0 = 1'b1;
    end else begin
        I_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln188_reg_1401 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (y_cast_read_reg_1372 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((trunc_ln188_reg_1401 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (y_cast_read_reg_1372 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        I_1_0_ce1 = 1'b1;
    end else begin
        I_1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1321)) begin
        if ((trunc_ln188_reg_1401 == 1'd0)) begin
            I_1_1_address0 = zext_ln151_5_fu_533_p1;
        end else if ((trunc_ln188_reg_1401 == 1'd1)) begin
            I_1_1_address0 = zext_ln151_1_fu_509_p1;
        end else begin
            I_1_1_address0 = 'bx;
        end
    end else begin
        I_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1324)) begin
        if ((trunc_ln188_reg_1401 == 1'd0)) begin
            I_1_1_address1 = zext_ln151_4_fu_521_p1;
        end else if ((trunc_ln188_reg_1401 == 1'd1)) begin
            I_1_1_address1 = zext_ln151_fu_497_p1;
        end else begin
            I_1_1_address1 = 'bx;
        end
    end else begin
        I_1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln188_reg_1401 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (tmp_4_reg_1352 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((trunc_ln188_reg_1401 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (tmp_4_reg_1352 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        I_1_1_ce0 = 1'b1;
    end else begin
        I_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln188_reg_1401 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (y_cast_read_reg_1372 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((trunc_ln188_reg_1401 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (y_cast_read_reg_1372 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        I_1_1_ce1 = 1'b1;
    end else begin
        I_1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_ce0 = 1'b1;
    end else begin
        O_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_we0 = 1'b1;
    end else begin
        O_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_fu_443_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln1027_reg_1397_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter20_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter20_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign O_address0 = O_addr_reg_1656;

assign O_d0 = {{bitcast_ln196_1_fu_1320_p1}, {bitcast_ln196_fu_1317_p1}};

assign add_ln151_1_fu_505_p2 = (zext_ln151_3 + lshr_ln_reg_1414);

assign add_ln151_2_fu_517_p2 = (zext_ln151_2 + lshr_ln151_5_reg_1420);

assign add_ln151_3_fu_529_p2 = (zext_ln151_3 + lshr_ln151_5_reg_1420);

assign add_ln151_fu_493_p2 = (zext_ln151_2 + lshr_ln_reg_1414);

assign add_ln178_fu_482_p2 = (x_fu_102 + 64'd2);

assign add_ln188_fu_466_p2 = (empty_64_fu_448_p1 + 11'd1);

assign add_ln196_1_fu_1295_p2 = (tmp_5_fu_1287_p3 + trunc_ln196_fu_1279_p1);

assign add_ln196_fu_1306_p2 = (x1_fu_98 + 64'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1315 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (tmp_4_reg_1352 == 1'd0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_1318 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (y_cast_read_reg_1372 == 1'd0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_1321 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (tmp_4_reg_1352 == 1'd1) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_1324 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_1397 == 1'd1) & (y_cast_read_reg_1372 == 1'd1) & (1'b0 == ap_block_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign bitcast_ln196_1_fu_1320_p1 = div1_reg_1666;

assign bitcast_ln196_fu_1317_p1 = div_reg_1661;

assign empty_64_fu_448_p1 = x_fu_102[10:0];

assign icmp_ln1027_fu_443_p2 = ((x_fu_102 < zext_ln175_cast_reg_1392) ? 1'b1 : 1'b0);

assign or_ln112_read_reg_1360 = or_ln112;

assign select_ln112_1_fu_1142_p3 = ((or_ln112[0:0] == 1'b1) ? arg_assign_1_reg_1513_pp0_iter4_reg : select_ln116_1_fu_1129_p3);

assign select_ln112_2_fu_1162_p3 = ((or_ln112[0:0] == 1'b1) ? arg_assign_0_1_reg_1520_pp0_iter4_reg : select_ln116_2_fu_1148_p3);

assign select_ln112_3_fu_1168_p3 = ((or_ln112[0:0] == 1'b1) ? arg_assign_1_0_1_reg_1527_pp0_iter4_reg : select_ln116_3_fu_1155_p3);

assign select_ln112_4_fu_1188_p3 = ((or_ln112[0:0] == 1'b1) ? arg_assign_s_reg_1534_pp0_iter4_reg : select_ln116_4_fu_1174_p3);

assign select_ln112_5_fu_1194_p3 = ((or_ln112[0:0] == 1'b1) ? arg_assign_1_1_reg_1541_pp0_iter4_reg : select_ln116_5_fu_1181_p3);

assign select_ln112_6_fu_1214_p3 = ((or_ln112[0:0] == 1'b1) ? arg_assign_17_1_reg_1548_pp0_iter4_reg : select_ln116_6_fu_1200_p3);

assign select_ln112_7_fu_1220_p3 = ((or_ln112[0:0] == 1'b1) ? arg_assign_1_1_1_reg_1555_pp0_iter4_reg : select_ln116_7_fu_1207_p3);

assign select_ln112_fu_1136_p3 = ((or_ln112[0:0] == 1'b1) ? arg_assign_reg_1506_pp0_iter4_reg : select_ln116_fu_1122_p3);

assign select_ln116_1_fu_1129_p3 = ((grp_fu_349_p2[0:0] == 1'b1) ? arg_assign_1_reg_1513_pp0_iter4_reg : 16'd0);

assign select_ln116_2_fu_1148_p3 = ((grp_fu_354_p2[0:0] == 1'b1) ? arg_assign_0_1_reg_1520_pp0_iter4_reg : 16'd0);

assign select_ln116_3_fu_1155_p3 = ((grp_fu_359_p2[0:0] == 1'b1) ? arg_assign_1_0_1_reg_1527_pp0_iter4_reg : 16'd0);

assign select_ln116_4_fu_1174_p3 = ((grp_fu_364_p2[0:0] == 1'b1) ? arg_assign_s_reg_1534_pp0_iter4_reg : 16'd0);

assign select_ln116_5_fu_1181_p3 = ((grp_fu_369_p2[0:0] == 1'b1) ? arg_assign_1_1_reg_1541_pp0_iter4_reg : 16'd0);

assign select_ln116_6_fu_1200_p3 = ((grp_fu_374_p2[0:0] == 1'b1) ? arg_assign_17_1_reg_1548_pp0_iter4_reg : 16'd0);

assign select_ln116_7_fu_1207_p3 = ((grp_fu_379_p2[0:0] == 1'b1) ? arg_assign_1_1_1_reg_1555_pp0_iter4_reg : 16'd0);

assign select_ln116_fu_1122_p3 = ((grp_fu_344_p2[0:0] == 1'b1) ? arg_assign_reg_1506_pp0_iter4_reg : 16'd0);

assign select_ln189_1_fu_1240_p3 = ((grp_fu_394_p2[0:0] == 1'b1) ? select_ln112_2_reg_1574_pp0_iter8_reg : select_ln189_reg_1610_pp0_iter8_reg);

assign select_ln189_2_fu_1252_p3 = ((grp_fu_402_p2[0:0] == 1'b1) ? select_ln112_4_reg_1586_pp0_iter10_reg : select_ln189_1_reg_1622_pp0_iter10_reg);

assign select_ln189_3_fu_1264_p3 = ((grp_fu_410_p2[0:0] == 1'b1) ? select_ln112_6_reg_1598_pp0_iter12_reg : select_ln189_2_reg_1634_pp0_iter12_reg);

assign select_ln189_fu_1226_p3 = ((grp_fu_384_p2[0:0] == 1'b1) ? select_ln112_reg_1562_pp0_iter6_reg : 16'd0);

assign select_ln191_1_fu_1246_p3 = ((grp_fu_398_p2[0:0] == 1'b1) ? select_ln112_3_reg_1580_pp0_iter8_reg : select_ln191_reg_1616_pp0_iter8_reg);

assign select_ln191_2_fu_1258_p3 = ((grp_fu_406_p2[0:0] == 1'b1) ? select_ln112_5_reg_1592_pp0_iter10_reg : select_ln191_1_reg_1628_pp0_iter10_reg);

assign select_ln191_3_fu_1270_p3 = ((grp_fu_414_p2[0:0] == 1'b1) ? select_ln112_7_reg_1604_pp0_iter12_reg : select_ln191_2_reg_1640_pp0_iter12_reg);

assign select_ln191_fu_1233_p3 = ((grp_fu_389_p2[0:0] == 1'b1) ? select_ln112_1_reg_1568_pp0_iter6_reg : 16'd0);

assign sext_ln178_cast_fu_422_p1 = $signed(sext_ln178);

assign tmp_0_1_65_fu_754_p1 = trunc_ln151_6_fu_726_p4;

assign tmp_0_1_65_fu_754_p2 = trunc_ln151_7_fu_740_p4;

assign tmp_0_1_fu_716_p1 = trunc_ln151_4_fu_688_p4;

assign tmp_0_1_fu_716_p2 = trunc_ln151_5_fu_702_p4;

assign tmp_1_1_67_fu_1042_p1 = trunc_ln151_13_fu_1014_p4;

assign tmp_1_1_67_fu_1042_p2 = trunc_ln151_14_fu_1028_p4;

assign tmp_1_1_fu_1004_p1 = trunc_ln151_11_fu_976_p4;

assign tmp_1_1_fu_1004_p2 = trunc_ln151_12_fu_990_p4;

assign tmp_1_66_fu_899_p1 = trunc_ln151_s_fu_871_p4;

assign tmp_1_66_fu_899_p2 = trunc_ln151_10_fu_885_p4;

assign tmp_1_fu_862_p1 = trunc_ln151_8_fu_834_p4;

assign tmp_1_fu_862_p2 = trunc_ln151_9_fu_848_p4;

assign tmp_2_fu_640_p1 = trunc_ln147_fu_624_p1;

assign tmp_2_fu_640_p2 = trunc_ln147_1_fu_632_p1;

assign tmp_35_0_1_fu_789_p1 = trunc_ln147_4_fu_773_p1;

assign tmp_35_0_1_fu_789_p2 = trunc_ln147_5_fu_781_p1;

assign tmp_35_1_1_fu_1077_p1 = trunc_ln147_12_fu_1061_p1;

assign tmp_35_1_1_fu_1077_p2 = trunc_ln147_13_fu_1069_p1;

assign tmp_35_1_fu_933_p1 = trunc_ln147_8_fu_917_p1;

assign tmp_35_1_fu_933_p2 = trunc_ln147_9_fu_925_p1;

assign tmp_36_0_1_fu_815_p1 = trunc_ln147_6_fu_799_p1;

assign tmp_36_0_1_fu_815_p2 = trunc_ln147_7_fu_807_p1;

assign tmp_36_1_1_fu_1103_p1 = trunc_ln147_14_fu_1087_p1;

assign tmp_36_1_1_fu_1103_p2 = trunc_ln147_15_fu_1095_p1;

assign tmp_36_1_fu_958_p1 = trunc_ln147_10_fu_942_p1;

assign tmp_36_1_fu_958_p2 = trunc_ln147_11_fu_950_p1;

assign tmp_3_fu_665_p1 = trunc_ln147_2_fu_649_p1;

assign tmp_3_fu_665_p2 = trunc_ln147_3_fu_657_p1;

assign tmp_4_reg_1352 = empty;

assign tmp_5_fu_1287_p3 = {{trunc_ln196_1_fu_1283_p1}, {6'd0}};

assign tmp_fu_569_p1 = trunc_ln8_fu_541_p4;

assign tmp_fu_569_p2 = trunc_ln151_1_fu_555_p4;

assign tmp_s_fu_606_p1 = trunc_ln151_2_fu_578_p4;

assign tmp_s_fu_606_p2 = trunc_ln151_3_fu_592_p4;

assign trunc_ln147_10_fu_942_p1 = I_1_0_q0[15:0];

assign trunc_ln147_11_fu_950_p1 = I_1_1_q0[15:0];

assign trunc_ln147_12_fu_1061_p1 = I_0_0_q0[15:0];

assign trunc_ln147_13_fu_1069_p1 = I_0_1_q0[15:0];

assign trunc_ln147_14_fu_1087_p1 = I_1_0_q0[15:0];

assign trunc_ln147_15_fu_1095_p1 = I_1_1_q0[15:0];

assign trunc_ln147_1_fu_632_p1 = I_0_1_q1[15:0];

assign trunc_ln147_2_fu_649_p1 = I_1_0_q1[15:0];

assign trunc_ln147_3_fu_657_p1 = I_1_1_q1[15:0];

assign trunc_ln147_4_fu_773_p1 = I_0_0_q1[15:0];

assign trunc_ln147_5_fu_781_p1 = I_0_1_q1[15:0];

assign trunc_ln147_6_fu_799_p1 = I_1_0_q1[15:0];

assign trunc_ln147_7_fu_807_p1 = I_1_1_q1[15:0];

assign trunc_ln147_8_fu_917_p1 = I_0_0_q0[15:0];

assign trunc_ln147_9_fu_925_p1 = I_0_1_q0[15:0];

assign trunc_ln147_fu_624_p1 = I_0_0_q1[15:0];

assign trunc_ln151_10_fu_885_p4 = {{I_1_1_q0[31:16]}};

assign trunc_ln151_11_fu_976_p4 = {{I_0_0_q0[31:16]}};

assign trunc_ln151_12_fu_990_p4 = {{I_0_1_q0[31:16]}};

assign trunc_ln151_13_fu_1014_p4 = {{I_1_0_q0[31:16]}};

assign trunc_ln151_14_fu_1028_p4 = {{I_1_1_q0[31:16]}};

assign trunc_ln151_1_fu_555_p4 = {{I_0_1_q1[31:16]}};

assign trunc_ln151_2_fu_578_p4 = {{I_1_0_q1[31:16]}};

assign trunc_ln151_3_fu_592_p4 = {{I_1_1_q1[31:16]}};

assign trunc_ln151_4_fu_688_p4 = {{I_0_0_q1[31:16]}};

assign trunc_ln151_5_fu_702_p4 = {{I_0_1_q1[31:16]}};

assign trunc_ln151_6_fu_726_p4 = {{I_1_0_q1[31:16]}};

assign trunc_ln151_7_fu_740_p4 = {{I_1_1_q1[31:16]}};

assign trunc_ln151_8_fu_834_p4 = {{I_0_0_q0[31:16]}};

assign trunc_ln151_9_fu_848_p4 = {{I_0_1_q0[31:16]}};

assign trunc_ln151_s_fu_871_p4 = {{I_1_0_q0[31:16]}};

assign trunc_ln188_fu_452_p1 = x_fu_102[0:0];

assign trunc_ln196_1_fu_1283_p1 = x1_fu_98[5:0];

assign trunc_ln196_fu_1279_p1 = x1_fu_98[11:0];

assign trunc_ln8_fu_541_p4 = {{I_0_0_q1[31:16]}};

assign xor_ln151_fu_683_p2 = (trunc_ln188_reg_1401_pp0_iter2_reg ^ 1'd1);

assign y_cast_read_reg_1372 = y_cast;

assign zext_ln151_1_fu_509_p1 = add_ln151_1_fu_505_p2;

assign zext_ln151_4_fu_521_p1 = add_ln151_2_fu_517_p2;

assign zext_ln151_5_fu_533_p1 = add_ln151_3_fu_529_p2;

assign zext_ln151_fu_497_p1 = add_ln151_fu_493_p2;

assign zext_ln175_cast_fu_418_p1 = zext_ln175;

assign zext_ln196_fu_1301_p1 = add_ln196_1_fu_1295_p2;

assign zext_ln541_cast_fu_426_p1 = zext_ln541;

always @ (posedge ap_clk) begin
    zext_ln175_cast_reg_1392[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //IFFT_AP_pool_Pipeline_VITIS_LOOP_178_2
