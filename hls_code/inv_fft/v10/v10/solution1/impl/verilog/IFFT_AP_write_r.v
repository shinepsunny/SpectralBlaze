// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module IFFT_AP_write_r (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        buffer1_0_address0,
        buffer1_0_ce0,
        buffer1_0_q0,
        buffer1_0_address1,
        buffer1_0_ce1,
        buffer1_0_q1,
        buffer1_1_address0,
        buffer1_1_ce0,
        buffer1_1_q0,
        buffer1_1_address1,
        buffer1_1_ce1,
        buffer1_1_q1,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        out1_dout,
        out1_num_data_valid,
        out1_fifo_cap,
        out1_empty_n,
        out1_read,
        out2_dout,
        out2_num_data_valid,
        out2_fifo_cap,
        out2_empty_n,
        out2_read,
        p_read,
        layer2_reg_2_dout,
        layer2_reg_2_num_data_valid,
        layer2_reg_2_fifo_cap,
        layer2_reg_2_empty_n,
        layer2_reg_2_read,
        p_read1
);

parameter    ap_ST_fsm_state1 = 51'd1;
parameter    ap_ST_fsm_state2 = 51'd2;
parameter    ap_ST_fsm_state3 = 51'd4;
parameter    ap_ST_fsm_state4 = 51'd8;
parameter    ap_ST_fsm_state5 = 51'd16;
parameter    ap_ST_fsm_state6 = 51'd32;
parameter    ap_ST_fsm_state7 = 51'd64;
parameter    ap_ST_fsm_state8 = 51'd128;
parameter    ap_ST_fsm_state9 = 51'd256;
parameter    ap_ST_fsm_state10 = 51'd512;
parameter    ap_ST_fsm_state11 = 51'd1024;
parameter    ap_ST_fsm_state12 = 51'd2048;
parameter    ap_ST_fsm_state13 = 51'd4096;
parameter    ap_ST_fsm_state14 = 51'd8192;
parameter    ap_ST_fsm_state15 = 51'd16384;
parameter    ap_ST_fsm_state16 = 51'd32768;
parameter    ap_ST_fsm_state17 = 51'd65536;
parameter    ap_ST_fsm_state18 = 51'd131072;
parameter    ap_ST_fsm_state19 = 51'd262144;
parameter    ap_ST_fsm_state20 = 51'd524288;
parameter    ap_ST_fsm_state21 = 51'd1048576;
parameter    ap_ST_fsm_state22 = 51'd2097152;
parameter    ap_ST_fsm_state23 = 51'd4194304;
parameter    ap_ST_fsm_state24 = 51'd8388608;
parameter    ap_ST_fsm_state25 = 51'd16777216;
parameter    ap_ST_fsm_state26 = 51'd33554432;
parameter    ap_ST_fsm_state27 = 51'd67108864;
parameter    ap_ST_fsm_state28 = 51'd134217728;
parameter    ap_ST_fsm_state29 = 51'd268435456;
parameter    ap_ST_fsm_state30 = 51'd536870912;
parameter    ap_ST_fsm_state31 = 51'd1073741824;
parameter    ap_ST_fsm_state32 = 51'd2147483648;
parameter    ap_ST_fsm_state33 = 51'd4294967296;
parameter    ap_ST_fsm_state34 = 51'd8589934592;
parameter    ap_ST_fsm_state35 = 51'd17179869184;
parameter    ap_ST_fsm_state36 = 51'd34359738368;
parameter    ap_ST_fsm_state37 = 51'd68719476736;
parameter    ap_ST_fsm_state38 = 51'd137438953472;
parameter    ap_ST_fsm_state39 = 51'd274877906944;
parameter    ap_ST_fsm_state40 = 51'd549755813888;
parameter    ap_ST_fsm_state41 = 51'd1099511627776;
parameter    ap_ST_fsm_state42 = 51'd2199023255552;
parameter    ap_ST_fsm_state43 = 51'd4398046511104;
parameter    ap_ST_fsm_state44 = 51'd8796093022208;
parameter    ap_ST_fsm_state45 = 51'd17592186044416;
parameter    ap_ST_fsm_state46 = 51'd35184372088832;
parameter    ap_ST_fsm_state47 = 51'd70368744177664;
parameter    ap_ST_fsm_state48 = 51'd140737488355328;
parameter    ap_ST_fsm_state49 = 51'd281474976710656;
parameter    ap_ST_fsm_state50 = 51'd562949953421312;
parameter    ap_ST_fsm_state51 = 51'd1125899906842624;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [12:0] buffer1_0_address0;
output   buffer1_0_ce0;
input  [15:0] buffer1_0_q0;
output  [12:0] buffer1_0_address1;
output   buffer1_0_ce1;
input  [15:0] buffer1_0_q1;
output  [12:0] buffer1_1_address0;
output   buffer1_1_ce0;
input  [15:0] buffer1_1_q0;
output  [12:0] buffer1_1_address1;
output   buffer1_1_ce1;
input  [15:0] buffer1_1_q1;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [127:0] m_axi_gmem_WDATA;
output  [15:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [127:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] out1_dout;
input  [2:0] out1_num_data_valid;
input  [2:0] out1_fifo_cap;
input   out1_empty_n;
output   out1_read;
input  [63:0] out2_dout;
input  [2:0] out2_num_data_valid;
input  [2:0] out2_fifo_cap;
input   out2_empty_n;
output   out2_read;
input  [7:0] p_read;
input  [15:0] layer2_reg_2_dout;
input  [2:0] layer2_reg_2_num_data_valid;
input  [2:0] layer2_reg_2_fifo_cap;
input   layer2_reg_2_empty_n;
output   layer2_reg_2_read;
input  [7:0] p_read1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[12:0] buffer1_0_address0;
reg buffer1_0_ce0;
reg[12:0] buffer1_0_address1;
reg buffer1_0_ce1;
reg[12:0] buffer1_1_address0;
reg buffer1_1_ce0;
reg[12:0] buffer1_1_address1;
reg buffer1_1_ce1;
reg m_axi_gmem_AWVALID;
reg[63:0] m_axi_gmem_AWADDR;
reg[0:0] m_axi_gmem_AWID;
reg[31:0] m_axi_gmem_AWLEN;
reg[2:0] m_axi_gmem_AWSIZE;
reg[1:0] m_axi_gmem_AWBURST;
reg[1:0] m_axi_gmem_AWLOCK;
reg[3:0] m_axi_gmem_AWCACHE;
reg[2:0] m_axi_gmem_AWPROT;
reg[3:0] m_axi_gmem_AWQOS;
reg[3:0] m_axi_gmem_AWREGION;
reg[0:0] m_axi_gmem_AWUSER;
reg m_axi_gmem_WVALID;
reg[127:0] m_axi_gmem_WDATA;
reg[15:0] m_axi_gmem_WSTRB;
reg m_axi_gmem_WLAST;
reg[0:0] m_axi_gmem_WID;
reg[0:0] m_axi_gmem_WUSER;
reg m_axi_gmem_BREADY;
reg out1_read;
reg out2_read;
reg layer2_reg_2_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [50:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] wr_ptr1;
reg   [31:0] wr_ptr2;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state35;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state42;
reg   [0:0] cmp_i_i577_reg_495;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state51;
reg    out1_blk_n;
wire    ap_CS_fsm_state12;
reg    out2_blk_n;
reg    layer2_reg_2_blk_n;
reg   [15:0] layer2_reg_2_read_reg_458;
reg   [63:0] out2_read_reg_463;
reg   [63:0] out1_read_reg_468;
wire   [7:0] grp_fu_186_p2;
reg   [7:0] div_reg_473;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln1027_fu_190_p2;
reg   [0:0] icmp_ln1027_reg_479;
wire   [0:0] cmp_i_i577_fu_209_p2;
wire    ap_CS_fsm_state32;
reg  signed [13:0] trunc_ln_reg_499;
wire   [61:0] add_ln270_1_fu_245_p2;
reg   [61:0] add_ln270_1_reg_506;
wire    ap_CS_fsm_state33;
wire  signed [31:0] sext_ln270_2_fu_257_p1;
reg  signed [31:0] sext_ln270_2_reg_512;
wire   [7:0] add_ln270_2_fu_273_p2;
reg   [7:0] add_ln270_2_reg_522;
wire    ap_CS_fsm_state34;
wire   [12:0] tmp_fu_279_p3;
reg   [12:0] tmp_reg_527;
wire   [0:0] icmp_ln1027_1_fu_268_p2;
reg   [59:0] trunc_ln1_reg_532;
wire   [31:0] zext_ln293_fu_342_p1;
reg   [31:0] zext_ln293_reg_545;
wire   [7:0] add_ln283_fu_377_p2;
reg   [7:0] add_ln283_reg_558;
wire    ap_CS_fsm_state43;
wire   [12:0] tmp_1_fu_383_p3;
reg   [12:0] tmp_1_reg_563;
wire   [0:0] icmp_ln1027_2_fu_372_p2;
reg   [59:0] trunc_ln2_reg_568;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_done;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_idle;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_ready;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWVALID;
wire   [63:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWADDR;
wire   [0:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWID;
wire   [31:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLEN;
wire   [2:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWSIZE;
wire   [1:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWBURST;
wire   [1:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLOCK;
wire   [3:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWCACHE;
wire   [2:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWPROT;
wire   [3:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWQOS;
wire   [3:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWREGION;
wire   [0:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWUSER;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WVALID;
wire   [127:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WDATA;
wire   [15:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WSTRB;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WLAST;
wire   [0:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WID;
wire   [0:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WUSER;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARVALID;
wire   [63:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARADDR;
wire   [0:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARID;
wire   [31:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARLEN;
wire   [2:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARSIZE;
wire   [1:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARBURST;
wire   [1:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARLOCK;
wire   [3:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARCACHE;
wire   [2:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARPROT;
wire   [3:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARQOS;
wire   [3:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARREGION;
wire   [0:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARUSER;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_RREADY;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_BREADY;
wire   [12:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address0;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce0;
wire   [12:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address1;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce1;
wire   [12:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address0;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce0;
wire   [12:0] grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address1;
wire    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce1;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_done;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_idle;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_ready;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWVALID;
wire   [63:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWADDR;
wire   [0:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWID;
wire   [31:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLEN;
wire   [2:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWSIZE;
wire   [1:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWBURST;
wire   [1:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLOCK;
wire   [3:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWCACHE;
wire   [2:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWPROT;
wire   [3:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWQOS;
wire   [3:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWREGION;
wire   [0:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWUSER;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WVALID;
wire   [127:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WDATA;
wire   [15:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WSTRB;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WLAST;
wire   [0:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WID;
wire   [0:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WUSER;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARVALID;
wire   [63:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARADDR;
wire   [0:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARID;
wire   [31:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARLEN;
wire   [2:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARSIZE;
wire   [1:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARBURST;
wire   [1:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARLOCK;
wire   [3:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARCACHE;
wire   [2:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARPROT;
wire   [3:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARQOS;
wire   [3:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARREGION;
wire   [0:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARUSER;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_RREADY;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_BREADY;
wire   [12:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address0;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce0;
wire   [12:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address1;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce1;
wire   [12:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address0;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce0;
wire   [12:0] grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address1;
wire    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce1;
reg    grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start_reg;
reg   [50:0] ap_NS_fsm;
wire    ap_NS_fsm_state36;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
reg    grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start_reg;
wire    ap_NS_fsm_state45;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire  signed [63:0] sext_ln273_1_fu_351_p1;
wire  signed [63:0] sext_ln286_1_fu_433_p1;
reg    ap_block_state42;
reg    ap_block_state51;
wire   [31:0] add_ln280_fu_318_p2;
wire   [31:0] add_ln293_1_fu_422_p2;
reg   [7:0] y_fu_108;
wire    ap_CS_fsm_state14;
reg   [7:0] y_1_fu_112;
reg    ap_block_state1;
reg    ap_block_state12;
wire    ap_CS_fsm_state2;
wire   [7:0] grp_fu_199_p1;
wire   [15:0] grp_fu_199_p2;
wire   [16:0] zext_ln270_fu_215_p1;
wire   [16:0] add_ln270_fu_219_p2;
wire  signed [60:0] sext_ln270_fu_235_p1;
wire   [61:0] zext_ln270_1_fu_238_p1;
wire  signed [14:0] sext_ln270_1_fu_242_p1;
wire   [14:0] add_ln273_1_fu_251_p2;
wire   [5:0] trunc_ln1027_fu_264_p1;
wire   [35:0] shl_ln_fu_291_p3;
wire  signed [63:0] sext_ln273_fu_299_p1;
wire   [63:0] add_ln273_fu_303_p2;
wire  signed [28:0] sext_ln283_fu_329_p1;
wire   [29:0] zext_ln283_fu_332_p1;
wire   [29:0] add_ln293_fu_336_p2;
wire   [5:0] trunc_ln1027_1_fu_368_p1;
wire   [35:0] shl_ln1_fu_395_p3;
wire  signed [63:0] sext_ln286_fu_403_p1;
wire   [63:0] add_ln286_fu_407_p2;
reg    grp_fu_186_ap_start;
wire    grp_fu_186_ap_done;
reg    grp_fu_186_ce;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg    grp_fu_199_ap_start;
wire    grp_fu_199_ap_done;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
reg    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
reg    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
reg    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
reg    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
reg    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
reg    ap_ST_fsm_state51_blk;
wire   [15:0] grp_fu_199_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 51'd1;
#0 wr_ptr1 = 32'd0;
#0 wr_ptr2 = 32'd0;
#0 grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start_reg = 1'b0;
#0 grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start_reg = 1'b0;
end

IFFT_AP_write_Pipeline_VITIS_LOOP_273_2 grp_write_Pipeline_VITIS_LOOP_273_2_fu_160(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start),
    .ap_done(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_done),
    .ap_idle(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_idle),
    .ap_ready(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_ready),
    .m_axi_gmem_AWVALID(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(m_axi_gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(m_axi_gmem_WREADY),
    .m_axi_gmem_WDATA(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(1'b0),
    .m_axi_gmem_ARADDR(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(1'b0),
    .m_axi_gmem_RREADY(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(128'd0),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(9'd0),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(m_axi_gmem_BVALID),
    .m_axi_gmem_BREADY(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(m_axi_gmem_BRESP),
    .m_axi_gmem_BID(m_axi_gmem_BID),
    .m_axi_gmem_BUSER(m_axi_gmem_BUSER),
    .sext_ln273_1(trunc_ln1_reg_532),
    .add_ln270_1(add_ln270_1_reg_506),
    .zext_ln278_4(tmp_reg_527),
    .buffer1_0_address0(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address0),
    .buffer1_0_ce0(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce0),
    .buffer1_0_q0(buffer1_0_q0),
    .buffer1_0_address1(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address1),
    .buffer1_0_ce1(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce1),
    .buffer1_0_q1(buffer1_0_q1),
    .buffer1_1_address0(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address0),
    .buffer1_1_ce0(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce0),
    .buffer1_1_q0(buffer1_1_q0),
    .buffer1_1_address1(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address1),
    .buffer1_1_ce1(grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce1),
    .buffer1_1_q1(buffer1_1_q1)
);

IFFT_AP_write_Pipeline_VITIS_LOOP_286_5 grp_write_Pipeline_VITIS_LOOP_286_5_fu_173(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start),
    .ap_done(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_done),
    .ap_idle(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_idle),
    .ap_ready(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_ready),
    .m_axi_gmem_AWVALID(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(m_axi_gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(m_axi_gmem_WREADY),
    .m_axi_gmem_WDATA(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(1'b0),
    .m_axi_gmem_ARADDR(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(1'b0),
    .m_axi_gmem_RREADY(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(128'd0),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(9'd0),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(m_axi_gmem_BVALID),
    .m_axi_gmem_BREADY(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(m_axi_gmem_BRESP),
    .m_axi_gmem_BID(m_axi_gmem_BID),
    .m_axi_gmem_BUSER(m_axi_gmem_BUSER),
    .sext_ln286_1(trunc_ln2_reg_568),
    .add_ln270_1(add_ln270_1_reg_506),
    .zext_ln291_4(tmp_1_reg_563),
    .buffer1_0_address0(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address0),
    .buffer1_0_ce0(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce0),
    .buffer1_0_q0(buffer1_0_q0),
    .buffer1_0_address1(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address1),
    .buffer1_0_ce1(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce1),
    .buffer1_0_q1(buffer1_0_q1),
    .buffer1_1_address0(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address0),
    .buffer1_1_ce0(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce0),
    .buffer1_1_q0(buffer1_1_q0),
    .buffer1_1_address1(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address1),
    .buffer1_1_ce1(grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce1),
    .buffer1_1_q1(buffer1_1_q1)
);

IFFT_AP_udiv_8ns_8ns_8_12_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
udiv_8ns_8ns_8_12_seq_1_U401(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_186_ap_start),
    .done(grp_fu_186_ap_done),
    .din0(p_read),
    .din1(p_read1),
    .ce(grp_fu_186_ce),
    .dout(grp_fu_186_p2)
);

IFFT_AP_udiv_16ns_8ns_16_20_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
udiv_16ns_8ns_16_20_seq_1_U402(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_199_ap_start),
    .done(grp_fu_199_ap_done),
    .din0(layer2_reg_2_read_reg_458),
    .din1(grp_fu_199_p1),
    .ce(1'b1),
    .dout(grp_fu_199_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state43) & ((icmp_ln1027_2_fu_372_p2 == 1'd1) | (icmp_ln1027_reg_479 == 1'd1)))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state36) & (1'b1 == ap_CS_fsm_state35))) begin
            grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start_reg <= 1'b1;
        end else if ((grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_ready == 1'b1)) begin
            grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state45) & (1'b1 == ap_CS_fsm_state44))) begin
            grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start_reg <= 1'b1;
        end else if ((grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_ready == 1'b1)) begin
            grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_1_fu_268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        y_1_fu_112 <= 8'd0;
    end else if ((~((cmp_i_i577_reg_495 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state51))) begin
        y_1_fu_112 <= add_ln283_reg_558;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        y_fu_108 <= 8'd0;
    end else if ((~((cmp_i_i577_reg_495 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state42))) begin
        y_fu_108 <= add_ln270_2_reg_522;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        add_ln270_1_reg_506 <= add_ln270_1_fu_245_p2;
        sext_ln270_2_reg_512 <= sext_ln270_2_fu_257_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        add_ln270_2_reg_522 <= add_ln270_2_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_479 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        add_ln283_reg_558 <= add_ln283_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        cmp_i_i577_reg_495 <= cmp_i_i577_fu_209_p2;
        trunc_ln_reg_499 <= {{add_ln270_fu_219_p2[16:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        div_reg_473 <= grp_fu_186_p2;
        icmp_ln1027_reg_479 <= icmp_ln1027_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        layer2_reg_2_read_reg_458 <= layer2_reg_2_dout;
        out1_read_reg_468 <= out1_dout;
        out2_read_reg_463 <= out2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_2_fu_372_p2 == 1'd0) & (icmp_ln1027_reg_479 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        tmp_1_reg_563[12 : 7] <= tmp_1_fu_383_p3[12 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_1_fu_268_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        tmp_reg_527[12 : 7] <= tmp_fu_279_p3[12 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_1_fu_268_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34) & (cmp_i_i577_reg_495 == 1'd0))) begin
        trunc_ln1_reg_532 <= {{add_ln273_fu_303_p2[63:4]}};
        wr_ptr1 <= add_ln280_fu_318_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_2_fu_372_p2 == 1'd0) & (icmp_ln1027_reg_479 == 1'd0) & (1'b1 == ap_CS_fsm_state43) & (cmp_i_i577_reg_495 == 1'd0))) begin
        trunc_ln2_reg_568 <= {{add_ln286_fu_407_p2[63:4]}};
        wr_ptr2 <= add_ln293_1_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_1_fu_268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        zext_ln293_reg_545[29 : 0] <= zext_ln293_fu_342_p1[29 : 0];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if (((layer2_reg_2_empty_n == 1'b0) | (out2_empty_n == 1'b0) | (out1_empty_n == 1'b0))) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_AWREADY == 1'b0)) begin
        ap_ST_fsm_state35_blk = 1'b1;
    end else begin
        ap_ST_fsm_state35_blk = 1'b0;
    end
end

assign ap_ST_fsm_state36_blk = 1'b0;

always @ (*) begin
    if ((grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_done == 1'b0)) begin
        ap_ST_fsm_state37_blk = 1'b1;
    end else begin
        ap_ST_fsm_state37_blk = 1'b0;
    end
end

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

always @ (*) begin
    if (((cmp_i_i577_reg_495 == 1'd0) & (m_axi_gmem_BVALID == 1'b0))) begin
        ap_ST_fsm_state42_blk = 1'b1;
    end else begin
        ap_ST_fsm_state42_blk = 1'b0;
    end
end

assign ap_ST_fsm_state43_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_AWREADY == 1'b0)) begin
        ap_ST_fsm_state44_blk = 1'b1;
    end else begin
        ap_ST_fsm_state44_blk = 1'b0;
    end
end

assign ap_ST_fsm_state45_blk = 1'b0;

always @ (*) begin
    if ((grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_done == 1'b0)) begin
        ap_ST_fsm_state46_blk = 1'b1;
    end else begin
        ap_ST_fsm_state46_blk = 1'b0;
    end
end

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

always @ (*) begin
    if (((cmp_i_i577_reg_495 == 1'd0) & (m_axi_gmem_BVALID == 1'b0))) begin
        ap_ST_fsm_state51_blk = 1'b1;
    end else begin
        ap_ST_fsm_state51_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) & ((icmp_ln1027_2_fu_372_p2 == 1'd1) | (icmp_ln1027_reg_479 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) & ((icmp_ln1027_2_fu_372_p2 == 1'd1) | (icmp_ln1027_reg_479 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        buffer1_0_address0 = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        buffer1_0_address0 = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address0;
    end else begin
        buffer1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        buffer1_0_address1 = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_address1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        buffer1_0_address1 = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_address1;
    end else begin
        buffer1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        buffer1_0_ce0 = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        buffer1_0_ce0 = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce0;
    end else begin
        buffer1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        buffer1_0_ce1 = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_0_ce1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        buffer1_0_ce1 = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_0_ce1;
    end else begin
        buffer1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        buffer1_1_address0 = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        buffer1_1_address0 = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address0;
    end else begin
        buffer1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        buffer1_1_address1 = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_address1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        buffer1_1_address1 = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_address1;
    end else begin
        buffer1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        buffer1_1_ce0 = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        buffer1_1_ce0 = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce0;
    end else begin
        buffer1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        buffer1_1_ce1 = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_buffer1_1_ce1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        buffer1_1_ce1 = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_buffer1_1_ce1;
    end else begin
        buffer1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state35))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state51) & (cmp_i_i577_reg_495 == 1'd0)) | ((1'b1 == ap_CS_fsm_state42) & (cmp_i_i577_reg_495 == 1'd0)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_186_ap_start = 1'b1;
    end else begin
        grp_fu_186_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_186_ce = 1'b1;
    end else begin
        grp_fu_186_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1027_fu_190_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_199_ap_start = 1'b1;
    end else begin
        grp_fu_199_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        layer2_reg_2_blk_n = layer2_reg_2_empty_n;
    end else begin
        layer2_reg_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((layer2_reg_2_empty_n == 1'b0) | (out2_empty_n == 1'b0) | (out1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
        layer2_reg_2_read = 1'b1;
    end else begin
        layer2_reg_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
        m_axi_gmem_AWADDR = sext_ln286_1_fu_433_p1;
    end else if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
        m_axi_gmem_AWADDR = sext_ln273_1_fu_351_p1;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_AWADDR = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_AWADDR = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWADDR;
    end else begin
        m_axi_gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_AWBURST = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWBURST;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_AWBURST = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWBURST;
    end else begin
        m_axi_gmem_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_AWCACHE = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWCACHE;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_AWCACHE = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWCACHE;
    end else begin
        m_axi_gmem_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_AWID = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWID;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_AWID = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWID;
    end else begin
        m_axi_gmem_AWID = 1'd0;
    end
end

always @ (*) begin
    if ((((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)) | ((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state35)))) begin
        m_axi_gmem_AWLEN = sext_ln270_2_reg_512;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_AWLEN = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_AWLEN = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLEN;
    end else begin
        m_axi_gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_AWLOCK = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWLOCK;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_AWLOCK = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWLOCK;
    end else begin
        m_axi_gmem_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_AWPROT = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWPROT;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_AWPROT = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWPROT;
    end else begin
        m_axi_gmem_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_AWQOS = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWQOS;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_AWQOS = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWQOS;
    end else begin
        m_axi_gmem_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_AWREGION = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWREGION;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_AWREGION = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWREGION;
    end else begin
        m_axi_gmem_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_AWSIZE = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWSIZE;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_AWSIZE = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWSIZE;
    end else begin
        m_axi_gmem_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_AWUSER = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWUSER;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_AWUSER = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWUSER;
    end else begin
        m_axi_gmem_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if ((((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)) | ((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state35)))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_AWVALID = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_AWVALID = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_AWVALID;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((cmp_i_i577_reg_495 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state51) & (cmp_i_i577_reg_495 == 1'd0)) | (~((cmp_i_i577_reg_495 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state42) & (cmp_i_i577_reg_495 == 1'd0)))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_BREADY = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_BREADY = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_BREADY;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_WDATA = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_WDATA = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WDATA;
    end else begin
        m_axi_gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_WID = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WID;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_WID = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WID;
    end else begin
        m_axi_gmem_WID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_WLAST = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WLAST;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_WLAST = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WLAST;
    end else begin
        m_axi_gmem_WLAST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_WSTRB = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_WSTRB = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WSTRB;
    end else begin
        m_axi_gmem_WSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_WUSER = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WUSER;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_WUSER = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WUSER;
    end else begin
        m_axi_gmem_WUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_gmem_WVALID = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_m_axi_gmem_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_gmem_WVALID = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_m_axi_gmem_WVALID;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        out1_blk_n = out1_empty_n;
    end else begin
        out1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((layer2_reg_2_empty_n == 1'b0) | (out2_empty_n == 1'b0) | (out1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
        out1_read = 1'b1;
    end else begin
        out1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        out2_blk_n = out2_empty_n;
    end else begin
        out2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((layer2_reg_2_empty_n == 1'b0) | (out2_empty_n == 1'b0) | (out1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
        out2_read = 1'b1;
    end else begin
        out2_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if ((~((layer2_reg_2_empty_n == 1'b0) | (out2_empty_n == 1'b0) | (out1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln1027_fu_190_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((icmp_ln1027_1_fu_268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else if (((icmp_ln1027_1_fu_268_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34) & (cmp_i_i577_reg_495 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if ((~((cmp_i_i577_reg_495 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & ((icmp_ln1027_2_fu_372_p2 == 1'd1) | (icmp_ln1027_reg_479 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln1027_2_fu_372_p2 == 1'd0) & (icmp_ln1027_reg_479 == 1'd0) & (1'b1 == ap_CS_fsm_state43) & (cmp_i_i577_reg_495 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            if (((grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if ((~((cmp_i_i577_reg_495 == 1'd0) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln270_1_fu_245_p2 = (zext_ln270_1_fu_238_p1 + 62'd1);

assign add_ln270_2_fu_273_p2 = (y_fu_108 + 8'd1);

assign add_ln270_fu_219_p2 = ($signed(zext_ln270_fu_215_p1) + $signed(17'd131071));

assign add_ln273_1_fu_251_p2 = ($signed(sext_ln270_1_fu_242_p1) + $signed(15'd1));

assign add_ln273_fu_303_p2 = ($signed(out1_read_reg_468) + $signed(sext_ln273_fu_299_p1));

assign add_ln280_fu_318_p2 = ($signed(wr_ptr1) + $signed(sext_ln270_2_reg_512));

assign add_ln283_fu_377_p2 = (y_1_fu_112 + 8'd1);

assign add_ln286_fu_407_p2 = ($signed(out2_read_reg_463) + $signed(sext_ln286_fu_403_p1));

assign add_ln293_1_fu_422_p2 = (wr_ptr2 + zext_ln293_reg_545);

assign add_ln293_fu_336_p2 = (zext_ln283_fu_332_p1 + 30'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state36 = ap_NS_fsm[32'd35];

assign ap_NS_fsm_state45 = ap_NS_fsm[32'd44];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state12 = ((layer2_reg_2_empty_n == 1'b0) | (out2_empty_n == 1'b0) | (out1_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state42 = ((cmp_i_i577_reg_495 == 1'd0) & (m_axi_gmem_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state51 = ((cmp_i_i577_reg_495 == 1'd0) & (m_axi_gmem_BVALID == 1'b0));
end

assign cmp_i_i577_fu_209_p2 = ((grp_fu_199_p2 == 16'd0) ? 1'b1 : 1'b0);

assign grp_fu_199_p1 = grp_fu_199_p10;

assign grp_fu_199_p10 = p_read1;

assign grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start = grp_write_Pipeline_VITIS_LOOP_273_2_fu_160_ap_start_reg;

assign grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start = grp_write_Pipeline_VITIS_LOOP_286_5_fu_173_ap_start_reg;

assign icmp_ln1027_1_fu_268_p2 = ((y_fu_108 == div_reg_473) ? 1'b1 : 1'b0);

assign icmp_ln1027_2_fu_372_p2 = ((y_1_fu_112 == div_reg_473) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_190_p2 = ((grp_fu_186_p2 == 8'd0) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_RREADY = 1'b0;

assign sext_ln270_1_fu_242_p1 = trunc_ln_reg_499;

assign sext_ln270_2_fu_257_p1 = $signed(add_ln273_1_fu_251_p2);

assign sext_ln270_fu_235_p1 = trunc_ln_reg_499;

assign sext_ln273_1_fu_351_p1 = $signed(trunc_ln1_reg_532);

assign sext_ln273_fu_299_p1 = $signed(shl_ln_fu_291_p3);

assign sext_ln283_fu_329_p1 = trunc_ln_reg_499;

assign sext_ln286_1_fu_433_p1 = $signed(trunc_ln2_reg_568);

assign sext_ln286_fu_403_p1 = $signed(shl_ln1_fu_395_p3);

assign shl_ln1_fu_395_p3 = {{wr_ptr2}, {4'd0}};

assign shl_ln_fu_291_p3 = {{wr_ptr1}, {4'd0}};

assign tmp_1_fu_383_p3 = {{trunc_ln1027_1_fu_368_p1}, {7'd0}};

assign tmp_fu_279_p3 = {{trunc_ln1027_fu_264_p1}, {7'd0}};

assign trunc_ln1027_1_fu_368_p1 = y_1_fu_112[5:0];

assign trunc_ln1027_fu_264_p1 = y_fu_108[5:0];

assign zext_ln270_1_fu_238_p1 = $unsigned(sext_ln270_fu_235_p1);

assign zext_ln270_fu_215_p1 = grp_fu_199_p2;

assign zext_ln283_fu_332_p1 = $unsigned(sext_ln283_fu_329_p1);

assign zext_ln293_fu_342_p1 = add_ln293_fu_336_p2;

always @ (posedge ap_clk) begin
    tmp_reg_527[6:0] <= 7'b0000000;
    zext_ln293_reg_545[31:30] <= 2'b00;
    tmp_1_reg_563[6:0] <= 7'b0000000;
end

endmodule //IFFT_AP_write_r
